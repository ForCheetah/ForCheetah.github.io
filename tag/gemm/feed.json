{
    "version": "https://jsonfeed.org/version/1",
    "title": "Пусть этот камень будет более крепким, чем человек • All posts by \"gemm\" tag",
    "description": "有自己的博客很帅，但是我很懒，要命！！！",
    "home_page_url": "https://forcheetah.github.io",
    "items": [
        {
            "id": "https://forcheetah.github.io/2024/12/24/conv6/",
            "url": "https://forcheetah.github.io/2024/12/24/conv6/",
            "title": "【Gemm】内存对齐",
            "date_published": "2024-12-24T12:44:31.294Z",
            "content_html": "<h1 id=\"前言\"><a class=\"anchor\" href=\"#前言\">#</a> 前言</h1>\n<p>本篇文章梳理内存对齐的相关概念和知识，并借上一篇文章<a href=\"https://forcheetah.github.io/2024/12/20/conv5/\">《【Gemm】Gemm 计算加速》</a> 来简单探讨一下内存排布对计算加速的重要作用。</p>\n<p>本篇文章参考和引用了 <a href=\"https://github.com/Tencent/ncnn\">《nihui 大佬的 ncnn 工程》</a>，<a href=\"https://zhuanlan.zhihu.com/p/336359747?utm_id=0\">《ncnn 初探二：图解 ncnn::Mat 的内存排布》</a>，<a href=\"https://github.com/Tencent/ncnn/issues/334\">关于 mat 中 data 的内存排列问题</a>，<a href=\"https://zhuanlan.zhihu.com/p/632640984\">《Linux 内核：内存管理 —— 内存对齐》</a>等，并询问过大语言模型通义千问、文心一言等。如有不清楚的地方可以点击链接查阅。</p>\n<p>作为初学者，错误在所难免，还望不吝赐教。</p>\n<h1 id=\"处理器的对齐访问\"><a class=\"anchor\" href=\"#处理器的对齐访问\">#</a> 处理器的对齐访问</h1>\n<p>对齐访问的定义：对齐访问是指处理器在访问内存时，要求访问的起始地址是某个特定数值（通常是 2 的幂）的整数倍。这种对齐方式有助于简化内存访问的电路设计和提高访问效率。</p>\n<p>例如某处理器读取 int 类型数据时，内存读取粒度为 4，只能从 0x10000， 0x10004 这种 4 的整数倍地址为起始地址读取内存。当该 int 类型数据恰好存储在这样的地址时，称为自然对齐。</p>\n<p>那么，处理器只能进行对齐访问吗？大语言模型给出这样解答：</p>\n<pre><code>一、处理器在访问内存时，并不总是只能进行对齐访问，这取决于处理器的具体架构和设计。\n    1.某些处理器要求对齐访问：\n例如，一些ARM架构的处理器在访问内存时要求对齐。如果访问的起始地址不满足对齐要求，处理器可能会产生异常或错误。\n    2.复杂指令集处理器（如x86架构）的灵活性：\nx86架构的处理器通常能够处理非对齐的内存访问。虽然它们可能不是一次性读出所需的数据，而是采取多次读取对齐的内存并进行数据拼接的方式来实现非对齐数据访问，但这仍然表明x86处理器在处理非对齐访问方面具有一定的灵活性。\n\n二、处理器单次访问的对齐要求\n    为了保持硬件设计的简单性和高效性，单次内存访问确实要求是对齐的。这是因为对齐访问可以确保数据在内存中的布局与处理器的数据路径相匹配，从而避免额外的处理步骤和性能损失。\n\n</code></pre>\n<p>从上面来看，处理器单次内存访问是要求对齐访问的，所谓支持的非对齐访问也是由多次对齐访问，再加上舍弃和拼接实现的。</p>\n<h1 id=\"内存对齐\"><a class=\"anchor\" href=\"#内存对齐\">#</a> 内存对齐</h1>\n<p>内存对齐：如果一个变量的内存地址刚好位于它本身长度的整数倍，他就被称做自然对齐。</p>\n<p>这里比较一下内存对齐 和 内存没有对齐的情况下， 处理器内存访问效率。</p>\n<p><img loading=\"lazy\" data-src=\"1735043896070.jpg\" alt=\"图1\"></p>\n<p>假设现在需要将四个字节的 float 数据搬到寄存器，上图的 float 数据自然对齐，位于 0x1000，那么将该 float 数据搬到寄存器只需要访问一次内存。</p>\n<p>下图 float 数据没有自然对齐，位于 0x1002，那么需要将 0x1000 到 0x1003 的数据取出，留下 0x1002 到 0x1003 两个字节。再将 0x1004 到 0x1007 的数据取出，留下 0x1004 到 0x1005 两个字节，最终拼成需要的 float 数据。</p>\n<p>在没有自然对齐的情况下，需要两次内存访问，还要消耗数据拼接等指令的时间。</p>\n<h1 id=\"编译器内存对齐\"><a class=\"anchor\" href=\"#编译器内存对齐\">#</a> 编译器内存对齐</h1>\n<p>为实现高效的内存访问，编译器有一套内存对齐的规则。</p>\n<p>例如下面的代码，在 64 位系统中，char 类型占 1 个字节，double 类型占 8 个字节。但是下面的结构体占用内存并不是 9 个字节，而是 16 个字节。</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span><span class=\"token string\">&lt;stdio.h></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">typedef</span> <span class=\"token keyword\">struct</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">char</span> a<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token keyword\">double</span> ff<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    </pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">&#125;</span> struct_elem<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token keyword\">int</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    </pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    struct_elem sclass<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%d\\n\"</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">)</span><span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span>struct_elem<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"addr_char:%p   addr_double:%p  \\n\"</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>sclass<span class=\"token punctuation\">.</span>a<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>sclass<span class=\"token punctuation\">.</span>ff<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> </pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><pre><code>16\naddr_char:0x7ffc631cdd70   addr_double:0x7ffc631cdd78 \n</code></pre>\n<p>打印结果如上所示，char 数据的地址是 <code>0x7ffc631cdd70</code> ，为了让 double 数据也能自然对齐，char 数据后面空出来 7 个字节，直到第 8 个字节，也就是 <code>0x7ffc631cdd78</code>  才开始存储 double。</p>\n<p><img loading=\"lazy\" data-src=\"1735044044909.jpg\" alt=\"图2\"></p>\n<p>那么，如果将上述结构体中的 char 和 double 数据调换一下位置，是不是结构体的内存占用就变成 9 字节了呢？也不是，仍然是 16 字节。这就设计到下面的结构体内存分配规则了，这里不做讨论。</p>\n<pre><code>1.第一个成员在结构体变量偏移量为0 的地址处，也就是第一个成员必须从头开始。\n2.以后每个成员相对于结构体首地址的 offset 都是该成员大小的整数倍，如有需要编译器会在成员之间加上填充字节。\n3.结构体的总大小为 最大对齐数的整数倍（每个成员变量都有自己的对齐数），如有需要编译器会在最末一个成员之后加上填充字节。\n4.如果嵌套结构体，嵌套的结构体对齐到自己的最大对齐数的整数倍处，结构体的整体大小就是所有最大对齐数（包含嵌套结构体的对齐数）的整数倍。\n</code></pre>\n<h1 id=\"ncnn-内存对齐\"><a class=\"anchor\" href=\"#ncnn-内存对齐\">#</a> ncnn 内存对齐</h1>\n<p>既然编译器帮助我们实现了内存对齐，程序员是不是就不需要再关注内存对齐了呢？</p>\n<p>肯定是不行的，编译器只保证了基本自然对齐，在高性能计算、图形处理等方面，还需要程序员手动内存对齐。这里学习一下 NCNN 工程的矩阵排布方式：</p>\n<p>下面是 ncnn 源码中构建三维矩阵（c,h,w），也就是通道、高度、宽度三个维度，的内存开辟函数。</p>\n<p>变量的意义，来自<a href=\"https://zhuanlan.zhihu.com/p/336359747?utm_id=0\">《ncnn 初探二：图解 ncnn::Mat 的内存排布》</a></p>\n<pre><code>data: 表示Mat分配的内存的头地址, 是一个指针类型\nrefcount: 表示Mat的引用计数, 是一个指针类型\nallocator: 本章我们不太关系这个变量可以认为它的值始终为0, 是一个指针类型\ndims: 表示数据的维度, 是一个整数类型\nw: 表示数据的width, 是一个整数类型\nh: 表示数据的height, 是一个整数类型\nc: 表示数据的channel, 是一个整数类型\nelempack: 表示有多少个数据打包在一起, 是一个整数类型\nelemsize: 表示打包在一起的数据占的字节数, 是一个整数类型\ncstep: 表示channel step, 即走一个channel跨过的元素个数, 是一个整数类型\n</code></pre>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">// 创建 三维矩阵（c,h,w）</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token class-name\">Mat</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">create</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> _w<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> _h<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> _c<span class=\"token punctuation\">,</span> size_t _elemsize<span class=\"token punctuation\">,</span> Allocator<span class=\"token operator\">*</span> _allocator<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>dims <span class=\"token operator\">==</span> <span class=\"token number\">3</span> <span class=\"token operator\">&amp;&amp;</span> w <span class=\"token operator\">==</span> _w <span class=\"token operator\">&amp;&amp;</span> h <span class=\"token operator\">==</span> _h <span class=\"token operator\">&amp;&amp;</span> c <span class=\"token operator\">==</span> _c <span class=\"token operator\">&amp;&amp;</span> elemsize <span class=\"token operator\">==</span> _elemsize <span class=\"token operator\">&amp;&amp;</span> elempack <span class=\"token operator\">==</span> <span class=\"token number\">1</span> <span class=\"token operator\">&amp;&amp;</span> allocator <span class=\"token operator\">==</span> _allocator<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token function\">release</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    elemsize <span class=\"token operator\">=</span> _elemsize<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    elempack <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    allocator <span class=\"token operator\">=</span> _allocator<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    dims <span class=\"token operator\">=</span> <span class=\"token number\">3</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    w <span class=\"token operator\">=</span> _w<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    h <span class=\"token operator\">=</span> _h<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    d <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    c <span class=\"token operator\">=</span> _c<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    cstep <span class=\"token operator\">=</span> <span class=\"token function\">alignSize</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>size_t<span class=\"token punctuation\">)</span>w <span class=\"token operator\">*</span> h <span class=\"token operator\">*</span> elemsize<span class=\"token punctuation\">,</span> <span class=\"token number\">16</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> elemsize<span class=\"token punctuation\">;</span>   <span class=\"token comment\">//w*h 16 字节对齐</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    size_t totalsize <span class=\"token operator\">=</span> <span class=\"token function\">alignSize</span><span class=\"token punctuation\">(</span><span class=\"token function\">total</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> elemsize<span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//c*cstep 4 字节对齐</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>totalsize <span class=\"token operator\">></span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>allocator<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>            data <span class=\"token operator\">=</span> allocator<span class=\"token operator\">-></span><span class=\"token function\">fastMalloc</span><span class=\"token punctuation\">(</span>totalsize <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">)</span><span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>refcount<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>        <span class=\"token keyword\">else</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>            data <span class=\"token operator\">=</span> <span class=\"token function\">fastMalloc</span><span class=\"token punctuation\">(</span>totalsize <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">)</span><span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>refcount<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>        refcount <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">char</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span>data<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> totalsize<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 连接计数器，放在了 data 最后</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>        <span class=\"token operator\">*</span>refcount <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>再看一下  <code>alignSize</code>  函数：其用于返回不小于 <code>sz</code>  的 <code>n</code>  的最小倍数。</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">static</span> <span class=\"token keyword\">int</span> <span class=\"token function\">alignSize</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> sz<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>sz <span class=\"token operator\">+</span> n <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;</span> <span class=\"token operator\">-</span>n<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>那么上述创建 三维矩阵（c,h,w）</p>\n<p>我们以（c,h,w）：（4,2,3）为例，通道为 4，高为 2，宽为 3，开辟的内存及数据存放如下图所示：</p>\n<pre><code>   0        1        2         3          4        5        6       7\nc0h0w0    c0h0w1    c0h0w2    c0h1w0    c0h1w1    c0h1w2    pad    pad\nc1h0w0    c1h0w1    c1h0w2    c1h1w0    c1h1w1    c1h1w2    pad    pad\nc2h0w0    c2h0w1    c2h0w2    c2h1w0    c2h1w1    c2h1w2    pad    pad\nc3h0w0    c3h0w1    c3h0w2    c3h1w0    c3h1w1    c3h1w2    pad    pad\n</code></pre>\n<p>高乘宽 h<em>w，长度为 6， <code>alignSize((size_t)w * h * elemsize, 16) / elemsize;</code>  按照 16 字节对齐，会分配 8 个元素的空间，当前 h</em>w 只占了六个元素的空间，其余两个空间 pad 补零。  <code>cstep</code>  为 8，而不是 6。</p>\n<p>访问：</p>\n<pre><code>mat.data -&gt; address of c0h0w0\nmat.row(1) -&gt; address of c0h1w0\nmat.channel(0).row(1) -&gt; address of c0h1w0\nmat.channel(1).row(1) -&gt; address of c1h1w0\n\n</code></pre>\n<p>所以 ncnn 的 16 字节对齐是每个通道 16 字节对齐。<br>\n访问每一个通道时，mat.channel (0)，所有 16 字节的数据，也就是 128bit 数据，能够一次内存访问加载到 SSE2 等 128 位寄存器中。</p>\n<p>采用 16 字节对齐有哪些优势呢？大语言模型的回答：</p>\n<ol>\n<li>提高数据访问效率</li>\n</ol>\n<ul>\n<li>SIMD 指令集优化：现代 CPU 支持单指令多数据（SIMD）指令集，如 SSE、AVX 等。这些指令可以在一个周期内处理多个数据点，但要求操作数在内存中是连续且对齐的。16 字节对齐确保了当使用 128 位宽的 SIMD 寄存器（例如 SSE 指令）时，数据可以直接加载到寄存器中而无需额外调整，从而提高了指令执行速度。</li>\n<li>缓存行利用：大多数 CPU 的缓存行大小为 64 字节或更大，16 字节对齐有助于更好地匹配缓存行边界，减少缓存未命中率，进而提升内存访问效率。</li>\n</ul>\n<ol start=\"2\">\n<li>减少内存访问延迟</li>\n</ol>\n<ul>\n<li>避免跨页访问：如果数据跨越了不同的内存页面，操作系统需要额外的时间来处理页面错误和更新页表。通过保持 16 字节对齐，可以降低这种跨页访问的可能性，特别是在处理大量小型数据结构时。</li>\n</ul>\n<h1 id=\"gemm内存对齐的好处\"><a class=\"anchor\" href=\"#gemm内存对齐的好处\">#</a> gemm 内存对齐的好处</h1>\n<p>以<a href=\"https://forcheetah.github.io/2024/12/20/conv5/\">《【Gemm】Gemm 计算加速》</a> 中的 《6. 使用 SIMD 指令》为例，如果矩阵 B（K*N）在宽度 N 方向进行 16 字节对齐（将 N pad 到 16 字节的倍数），那么算法最内存循环中的 <code>__m128 b_reg = _mm_loadu_ps(&amp;B(p, 0));</code> ，将会避免非对齐访问问题，在任何情况下读取的 16 字节数据都是自然对齐的。同时也避免了算法在矩阵 B 中的越界问题。</p>\n<p><img loading=\"lazy\" data-src=\"1735044231568.jpg\" alt=\"3333\"></p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;stdio.h></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;emmintrin.h></span> <span class=\"token comment\">// SSE2</span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name function\">A</span><span class=\"token expression\"><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">,</span>j<span class=\"token punctuation\">)</span> a<span class=\"token punctuation\">[</span> <span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span><span class=\"token operator\">*</span>lda <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span>j<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">]</span></span></span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name function\">B</span><span class=\"token expression\"><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">,</span>j<span class=\"token punctuation\">)</span> b<span class=\"token punctuation\">[</span> <span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span><span class=\"token operator\">*</span>ldb <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span>j<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">]</span></span></span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name function\">C</span><span class=\"token expression\"><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">,</span>j<span class=\"token punctuation\">)</span> c<span class=\"token punctuation\">[</span> <span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span><span class=\"token operator\">*</span>ldc <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span>j<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">]</span></span></span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token comment\">/* Routine for computing C = A * B + C */</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">AddDot4x4_SSE2</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> k<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> <span class=\"token operator\">*</span>a<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> lda<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> <span class=\"token operator\">*</span>b<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> ldb<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> <span class=\"token operator\">*</span>c<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> ldc<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token comment\">/* Point to the current elements in the four rows of A */</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token keyword\">float</span> <span class=\"token operator\">*</span>a_0p_pntr <span class=\"token operator\">=</span> <span class=\"token operator\">&amp;</span><span class=\"token function\">A</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token keyword\">float</span> <span class=\"token operator\">*</span>a_1p_pntr <span class=\"token operator\">=</span> <span class=\"token operator\">&amp;</span><span class=\"token function\">A</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token keyword\">float</span> <span class=\"token operator\">*</span>a_2p_pntr <span class=\"token operator\">=</span> <span class=\"token operator\">&amp;</span><span class=\"token function\">A</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token keyword\">float</span> <span class=\"token operator\">*</span>a_3p_pntr <span class=\"token operator\">=</span> <span class=\"token operator\">&amp;</span><span class=\"token function\">A</span><span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    __m128 c_p0_sum <span class=\"token operator\">=</span> <span class=\"token function\">_mm_setzero_ps</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    __m128 c_p1_sum <span class=\"token operator\">=</span> <span class=\"token function\">_mm_setzero_ps</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    __m128 c_p2_sum <span class=\"token operator\">=</span> <span class=\"token function\">_mm_setzero_ps</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    __m128 c_p3_sum <span class=\"token operator\">=</span> <span class=\"token function\">_mm_setzero_ps</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    <span class=\"token keyword\">register</span> <span class=\"token keyword\">float</span> a_0p_reg<span class=\"token punctuation\">,</span> a_1p_reg<span class=\"token punctuation\">,</span> a_2p_reg<span class=\"token punctuation\">,</span> a_3p_reg<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> p <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> p <span class=\"token operator\">&lt;</span> k<span class=\"token punctuation\">;</span> <span class=\"token operator\">++</span>p<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>        __m128 b_reg <span class=\"token operator\">=</span> <span class=\"token function\">_mm_loadu_ps</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span><span class=\"token function\">B</span><span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">// 没有 16 字节对齐的情况下，可能会出现非对齐访问</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>        a_0p_reg <span class=\"token operator\">=</span> <span class=\"token operator\">*</span>a_0p_pntr<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>        a_1p_reg <span class=\"token operator\">=</span> <span class=\"token operator\">*</span>a_1p_pntr<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>        a_2p_reg <span class=\"token operator\">=</span> <span class=\"token operator\">*</span>a_2p_pntr<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>        a_3p_reg <span class=\"token operator\">=</span> <span class=\"token operator\">*</span>a_3p_pntr<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>        __m128 a_0p_vec <span class=\"token operator\">=</span> <span class=\"token function\">_mm_set_ps1</span><span class=\"token punctuation\">(</span>a_0p_reg<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>        __m128 a_1p_vec <span class=\"token operator\">=</span> <span class=\"token function\">_mm_set_ps1</span><span class=\"token punctuation\">(</span>a_1p_reg<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>        __m128 a_2p_vec <span class=\"token operator\">=</span> <span class=\"token function\">_mm_set_ps1</span><span class=\"token punctuation\">(</span>a_2p_reg<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>        __m128 a_3p_vec <span class=\"token operator\">=</span> <span class=\"token function\">_mm_set_ps1</span><span class=\"token punctuation\">(</span>a_3p_reg<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>        c_p0_sum <span class=\"token operator\">=</span> <span class=\"token function\">_mm_add_ps</span><span class=\"token punctuation\">(</span>c_p0_sum<span class=\"token punctuation\">,</span> <span class=\"token function\">_mm_mul_ps</span><span class=\"token punctuation\">(</span>b_reg<span class=\"token punctuation\">,</span> a_0p_vec<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>        c_p1_sum <span class=\"token operator\">=</span> <span class=\"token function\">_mm_add_ps</span><span class=\"token punctuation\">(</span>c_p1_sum<span class=\"token punctuation\">,</span> <span class=\"token function\">_mm_mul_ps</span><span class=\"token punctuation\">(</span>b_reg<span class=\"token punctuation\">,</span> a_1p_vec<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>        c_p2_sum <span class=\"token operator\">=</span> <span class=\"token function\">_mm_add_ps</span><span class=\"token punctuation\">(</span>c_p2_sum<span class=\"token punctuation\">,</span> <span class=\"token function\">_mm_mul_ps</span><span class=\"token punctuation\">(</span>b_reg<span class=\"token punctuation\">,</span> a_2p_vec<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>        c_p3_sum <span class=\"token operator\">=</span> <span class=\"token function\">_mm_add_ps</span><span class=\"token punctuation\">(</span>c_p3_sum<span class=\"token punctuation\">,</span> <span class=\"token function\">_mm_mul_ps</span><span class=\"token punctuation\">(</span>b_reg<span class=\"token punctuation\">,</span> a_3p_vec<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>    <span class=\"token keyword\">float</span> <span class=\"token operator\">*</span>c_pntr<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>    __m128 c_reg<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>    c_pntr <span class=\"token operator\">=</span> <span class=\"token operator\">&amp;</span><span class=\"token function\">C</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>    c_reg <span class=\"token operator\">=</span> <span class=\"token function\">_mm_loadu_ps</span><span class=\"token punctuation\">(</span>c_pntr<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>    c_reg <span class=\"token operator\">=</span> <span class=\"token function\">_mm_add_ps</span><span class=\"token punctuation\">(</span>c_reg<span class=\"token punctuation\">,</span> c_p0_sum<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>    <span class=\"token function\">_mm_storeu_ps</span><span class=\"token punctuation\">(</span>c_pntr<span class=\"token punctuation\">,</span> c_reg<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>    c_pntr <span class=\"token operator\">=</span> <span class=\"token operator\">&amp;</span><span class=\"token function\">C</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>    c_reg <span class=\"token operator\">=</span> <span class=\"token function\">_mm_loadu_ps</span><span class=\"token punctuation\">(</span>c_pntr<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>    c_reg <span class=\"token operator\">=</span> <span class=\"token function\">_mm_add_ps</span><span class=\"token punctuation\">(</span>c_reg<span class=\"token punctuation\">,</span> c_p1_sum<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>    <span class=\"token function\">_mm_storeu_ps</span><span class=\"token punctuation\">(</span>c_pntr<span class=\"token punctuation\">,</span> c_reg<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>    c_pntr <span class=\"token operator\">=</span> <span class=\"token operator\">&amp;</span><span class=\"token function\">C</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>    c_reg <span class=\"token operator\">=</span> <span class=\"token function\">_mm_loadu_ps</span><span class=\"token punctuation\">(</span>c_pntr<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>    c_reg <span class=\"token operator\">=</span> <span class=\"token function\">_mm_add_ps</span><span class=\"token punctuation\">(</span>c_reg<span class=\"token punctuation\">,</span> c_p2_sum<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre>    <span class=\"token function\">_mm_storeu_ps</span><span class=\"token punctuation\">(</span>c_pntr<span class=\"token punctuation\">,</span> c_reg<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre></pre></td></tr><tr><td data-num=\"60\"></td><td><pre>    c_pntr <span class=\"token operator\">=</span> <span class=\"token operator\">&amp;</span><span class=\"token function\">C</span><span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre>    c_reg <span class=\"token operator\">=</span> <span class=\"token function\">_mm_loadu_ps</span><span class=\"token punctuation\">(</span>c_pntr<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"62\"></td><td><pre>    c_reg <span class=\"token operator\">=</span> <span class=\"token function\">_mm_add_ps</span><span class=\"token punctuation\">(</span>c_reg<span class=\"token punctuation\">,</span> c_p3_sum<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"63\"></td><td><pre>    <span class=\"token function\">_mm_storeu_ps</span><span class=\"token punctuation\">(</span>c_pntr<span class=\"token punctuation\">,</span> c_reg<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"64\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"65\"></td><td><pre></pre></td></tr><tr><td data-num=\"66\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">MY_MMult_4x4_10</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> m<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> n<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> k<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> <span class=\"token operator\">*</span>a<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> lda<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> <span class=\"token operator\">*</span>b<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> ldb<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> <span class=\"token operator\">*</span>c<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> ldc<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"67\"></td><td><pre>    <span class=\"token keyword\">int</span> i<span class=\"token punctuation\">,</span> j<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"68\"></td><td><pre>    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span>j <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> j <span class=\"token operator\">&lt;</span> n<span class=\"token punctuation\">;</span> j <span class=\"token operator\">+=</span> <span class=\"token number\">4</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>        <span class=\"token comment\">/* Loop over the columns of C, unrolled by 4 */</span></pre></td></tr><tr><td data-num=\"69\"></td><td><pre>        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span>i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> m<span class=\"token punctuation\">;</span> i <span class=\"token operator\">+=</span> <span class=\"token number\">4</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>    <span class=\"token comment\">/* Loop over the rows of C */</span></pre></td></tr><tr><td data-num=\"70\"></td><td><pre>            <span class=\"token function\">AddDot4x4_SSE2</span><span class=\"token punctuation\">(</span>k<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span><span class=\"token function\">A</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> lda<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span><span class=\"token function\">B</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> j<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> ldb<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span><span class=\"token function\">C</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">,</span> j<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> ldc<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"71\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"72\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"73\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"74\"></td><td><pre></pre></td></tr><tr><td data-num=\"75\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">GemmAccelerateSimd</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"76\"></td><td><pre>    <span class=\"token keyword\">int</span> M <span class=\"token operator\">=</span> <span class=\"token number\">16</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"77\"></td><td><pre>    <span class=\"token keyword\">int</span> K <span class=\"token operator\">=</span> <span class=\"token number\">64</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"78\"></td><td><pre>    <span class=\"token keyword\">int</span> N <span class=\"token operator\">=</span> <span class=\"token number\">16</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"79\"></td><td><pre>    <span class=\"token keyword\">float</span><span class=\"token operator\">*</span> MatriA <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token function\">malloc</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span><span class=\"token punctuation\">)</span><span class=\"token operator\">*</span> M<span class=\"token operator\">*</span>K<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"80\"></td><td><pre>    <span class=\"token keyword\">float</span><span class=\"token operator\">*</span> MatriB <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token function\">malloc</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span><span class=\"token punctuation\">)</span><span class=\"token operator\">*</span> K<span class=\"token operator\">*</span>N<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"81\"></td><td><pre>    <span class=\"token keyword\">float</span><span class=\"token operator\">*</span> MatriC <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token function\">malloc</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span><span class=\"token punctuation\">)</span><span class=\"token operator\">*</span> M<span class=\"token operator\">*</span>N<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"82\"></td><td><pre>    <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> index<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span> index<span class=\"token operator\">&lt;</span>M<span class=\"token operator\">*</span>K<span class=\"token punctuation\">;</span> index<span class=\"token operator\">&lt;</span>M<span class=\"token operator\">*</span>K<span class=\"token punctuation\">;</span> index<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"83\"></td><td><pre>        MatriA<span class=\"token punctuation\">[</span>index<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"84\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"85\"></td><td><pre>    <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> index<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span> index<span class=\"token operator\">&lt;</span>K<span class=\"token operator\">*</span>N<span class=\"token punctuation\">;</span> index<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"86\"></td><td><pre>        MatriB<span class=\"token punctuation\">[</span>index<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"87\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"88\"></td><td><pre>    <span class=\"token function\">MY_MMult_4x4_10</span><span class=\"token punctuation\">(</span>M<span class=\"token punctuation\">,</span>N<span class=\"token punctuation\">,</span>K<span class=\"token punctuation\">,</span>MatriA<span class=\"token punctuation\">,</span>K<span class=\"token punctuation\">,</span>MatriB<span class=\"token punctuation\">,</span>N<span class=\"token punctuation\">,</span>MatriC<span class=\"token punctuation\">,</span>N<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"89\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h1 id=\"后记\"><a class=\"anchor\" href=\"#后记\">#</a> 后记</h1>\n<p>本博客目前以及可预期的将来都不会支持评论功能。各位大侠如若有指教和问题，可以在我的 <a href=\"https://github.com/ForCheetah/ForCheetah.github.io\">github 项目</a> 或随便一个项目下提出 issue，并指明哪一篇博客，我看到一定及时回复！</p>\n",
            "tags": [
                "conv",
                "gemm"
            ]
        },
        {
            "id": "https://forcheetah.github.io/2024/12/20/conv5/",
            "url": "https://forcheetah.github.io/2024/12/20/conv5/",
            "title": "【gemm】Gemm计算加速",
            "date_published": "2024-12-20T14:06:41.237Z",
            "content_html": "<h1 id=\"前言\"><a class=\"anchor\" href=\"#前言\">#</a> 前言</h1>\n<p>本篇文章简单介绍矩阵乘的加速方法，以学习算子加速需要注意的方面。想要学习更多内容可以参考<a href=\"https://zhuanlan.zhihu.com/p/65436463\">《OpenBLAS gemm 从零入门》</a>，<a href=\"https://github.com/flame/blislab\">《BLISlab: A Sandbox for Optimizing GEMM》</a>，<a href=\"https://mp.weixin.qq.com/s/w0YCm8TEPxFg0CR6g4A28w\">道阻且长_再探矩阵乘法优化</a>，<a href=\"https://github.com/BBuf/how-to-optimize-gemm\">《How To Optimize GEMM》</a>等项目或文章。</p>\n<p>作为初学者，错误在所难免，还望不吝赐教。</p>\n<h1 id=\"1基准算法\"><a class=\"anchor\" href=\"#1基准算法\">#</a> 1. 基准算法</h1>\n<p><img loading=\"lazy\" data-src=\"1734702937283.jpg\" alt=\"1.基准算法\"></p>\n<p>矩阵乘运算的基准算法，未经过任何优化。矩阵以行主序进行排布， 针对 X86 平台。矩阵 C= A * B，A 矩阵为 (M,K)， B 矩阵为 (K,N)。</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;stdio.h></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name function\">A</span><span class=\"token expression\"><span class=\"token punctuation\">(</span> i<span class=\"token punctuation\">,</span> j <span class=\"token punctuation\">)</span> a<span class=\"token punctuation\">[</span> <span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span><span class=\"token operator\">*</span>lda <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span>j<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">]</span></span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name function\">B</span><span class=\"token expression\"><span class=\"token punctuation\">(</span> i<span class=\"token punctuation\">,</span> j <span class=\"token punctuation\">)</span> b<span class=\"token punctuation\">[</span> <span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span><span class=\"token operator\">*</span>ldb <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span>j<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">]</span></span></span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name function\">C</span><span class=\"token expression\"><span class=\"token punctuation\">(</span> i<span class=\"token punctuation\">,</span> j <span class=\"token punctuation\">)</span> c<span class=\"token punctuation\">[</span> <span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span><span class=\"token operator\">*</span>ldc <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span>j<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">]</span></span></span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token comment\">// gemm C = A * B + C</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">MatrixMultiply</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> m<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> n<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> k<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> <span class=\"token operator\">*</span>a<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> lda<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> <span class=\"token operator\">*</span>b<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> ldb<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> <span class=\"token operator\">*</span>c<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> ldc<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> m<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> p<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span> p<span class=\"token operator\">&lt;</span>k<span class=\"token punctuation\">;</span> p<span class=\"token operator\">++</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span> </pre></td></tr><tr><td data-num=\"11\"></td><td><pre>            <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> j<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span> j<span class=\"token operator\">&lt;</span>n<span class=\"token punctuation\">;</span> j<span class=\"token operator\">++</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>    </pre></td></tr><tr><td data-num=\"12\"></td><td><pre>                <span class=\"token function\">C</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">,</span> j<span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> <span class=\"token function\">C</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">,</span> j<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token function\">A</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">,</span> p<span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token function\">B</span><span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">,</span> j<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">GemmAccelerate</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    <span class=\"token keyword\">int</span> M <span class=\"token operator\">=</span> <span class=\"token number\">16</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    <span class=\"token keyword\">int</span> K <span class=\"token operator\">=</span> <span class=\"token number\">64</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    <span class=\"token keyword\">int</span> N <span class=\"token operator\">=</span> <span class=\"token number\">16</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    <span class=\"token keyword\">float</span><span class=\"token operator\">*</span> MatriA <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token function\">malloc</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span><span class=\"token punctuation\">)</span><span class=\"token operator\">*</span> M<span class=\"token operator\">*</span>K<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    <span class=\"token keyword\">float</span><span class=\"token operator\">*</span> MatriB <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token function\">malloc</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span><span class=\"token punctuation\">)</span><span class=\"token operator\">*</span> K<span class=\"token operator\">*</span>N<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    <span class=\"token keyword\">float</span><span class=\"token operator\">*</span> MatriC <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token function\">malloc</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span><span class=\"token punctuation\">)</span><span class=\"token operator\">*</span> M<span class=\"token operator\">*</span>N<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> index<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span> index<span class=\"token operator\">&lt;</span>M<span class=\"token operator\">*</span>K<span class=\"token punctuation\">;</span> index<span class=\"token operator\">&lt;</span>M<span class=\"token operator\">*</span>K<span class=\"token punctuation\">;</span> index<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>        MatriA<span class=\"token punctuation\">[</span>index<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>    <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> index<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span> index<span class=\"token operator\">&lt;</span>K<span class=\"token operator\">*</span>N<span class=\"token punctuation\">;</span> index<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>        MatriB<span class=\"token punctuation\">[</span>index<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>    <span class=\"token function\">MatrixMultiply</span><span class=\"token punctuation\">(</span>M<span class=\"token punctuation\">,</span>N<span class=\"token punctuation\">,</span>K<span class=\"token punctuation\">,</span>MatriA<span class=\"token punctuation\">,</span>K<span class=\"token punctuation\">,</span>MatriB<span class=\"token punctuation\">,</span>N<span class=\"token punctuation\">,</span>MatriC<span class=\"token punctuation\">,</span>N<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h1 id=\"循环展开\"><a class=\"anchor\" href=\"#循环展开\">#</a> 循环展开</h1>\n<p><img loading=\"lazy\" data-src=\"1734703129387.jpg\" alt=\"2.循环展开\"></p>\n<p>引入循环展开（Loop Unrolling）  ，每次 A 矩阵一行和 B 四列进行计算，得到四个结果。<br>\n可以减少循环控制开销：减少了循环条件检查和更新的频率，因为现在每四个元素作为一个批次处理，理论上减少了 75% 的循环控制指令。</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;stdio.h></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name function\">A</span><span class=\"token expression\"><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">,</span>j<span class=\"token punctuation\">)</span> a<span class=\"token punctuation\">[</span> <span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span><span class=\"token operator\">*</span>lda <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span>j<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">]</span></span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name function\">B</span><span class=\"token expression\"><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">,</span>j<span class=\"token punctuation\">)</span> b<span class=\"token punctuation\">[</span> <span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span><span class=\"token operator\">*</span>ldb <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span>j<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">]</span></span></span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name function\">C</span><span class=\"token expression\"><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">,</span>j<span class=\"token punctuation\">)</span> c<span class=\"token punctuation\">[</span> <span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span><span class=\"token operator\">*</span>ldc <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span>j<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">]</span></span></span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name function\">Y</span><span class=\"token expression\"><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span> y<span class=\"token punctuation\">[</span> <span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span><span class=\"token operator\">*</span>incx <span class=\"token punctuation\">]</span></span></span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">AddDot</span><span class=\"token punctuation\">(</span> <span class=\"token keyword\">int</span> k<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> <span class=\"token operator\">*</span>x<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> incx<span class=\"token punctuation\">,</span>  <span class=\"token keyword\">float</span> <span class=\"token operator\">*</span>y<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> <span class=\"token operator\">*</span>gamma <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>  <span class=\"token keyword\">int</span> p<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>  <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span> p<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span> p<span class=\"token operator\">&lt;</span>k<span class=\"token punctuation\">;</span> p<span class=\"token operator\">++</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token operator\">*</span>gamma <span class=\"token operator\">+=</span> x<span class=\"token punctuation\">[</span>p<span class=\"token punctuation\">]</span> <span class=\"token operator\">*</span> <span class=\"token function\">Y</span><span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>     </pre></td></tr><tr><td data-num=\"14\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">MY_MMult2</span><span class=\"token punctuation\">(</span> <span class=\"token keyword\">int</span> m<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> n<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> k<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> <span class=\"token operator\">*</span>a<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> lda<span class=\"token punctuation\">,</span> </pre></td></tr><tr><td data-num=\"18\"></td><td><pre>                <span class=\"token keyword\">float</span> <span class=\"token operator\">*</span>b<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> ldb<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> <span class=\"token operator\">*</span>c<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> ldc <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>  <span class=\"token keyword\">int</span> i<span class=\"token punctuation\">,</span> j<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>  <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span> j<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span> j<span class=\"token operator\">&lt;</span>n<span class=\"token punctuation\">;</span> j<span class=\"token operator\">+=</span><span class=\"token number\">4</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>        <span class=\"token comment\">/* Loop over the columns of C, unrolled by 4 */</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span> i<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">&lt;</span>m<span class=\"token punctuation\">;</span> i<span class=\"token operator\">+=</span><span class=\"token number\">1</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>        <span class=\"token comment\">/* Loop over the rows of C */</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>      <span class=\"token function\">AddDot</span><span class=\"token punctuation\">(</span> k<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span><span class=\"token function\">A</span><span class=\"token punctuation\">(</span> i<span class=\"token punctuation\">,</span><span class=\"token number\">0</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> lda<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span><span class=\"token function\">B</span><span class=\"token punctuation\">(</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>j <span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span><span class=\"token function\">C</span><span class=\"token punctuation\">(</span> i<span class=\"token punctuation\">,</span>j <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>      <span class=\"token function\">AddDot</span><span class=\"token punctuation\">(</span> k<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span><span class=\"token function\">A</span><span class=\"token punctuation\">(</span> i<span class=\"token punctuation\">,</span><span class=\"token number\">0</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> lda<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span><span class=\"token function\">B</span><span class=\"token punctuation\">(</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>j<span class=\"token operator\">+</span><span class=\"token number\">1</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span><span class=\"token function\">C</span><span class=\"token punctuation\">(</span> i<span class=\"token punctuation\">,</span>j<span class=\"token operator\">+</span><span class=\"token number\">1</span> <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>      <span class=\"token function\">AddDot</span><span class=\"token punctuation\">(</span> k<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span><span class=\"token function\">A</span><span class=\"token punctuation\">(</span> i<span class=\"token punctuation\">,</span><span class=\"token number\">0</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> lda<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span><span class=\"token function\">B</span><span class=\"token punctuation\">(</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>j<span class=\"token operator\">+</span><span class=\"token number\">2</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span><span class=\"token function\">C</span><span class=\"token punctuation\">(</span> i<span class=\"token punctuation\">,</span>j<span class=\"token operator\">+</span><span class=\"token number\">2</span> <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>      <span class=\"token function\">AddDot</span><span class=\"token punctuation\">(</span> k<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span><span class=\"token function\">A</span><span class=\"token punctuation\">(</span> i<span class=\"token punctuation\">,</span><span class=\"token number\">0</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> lda<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span><span class=\"token function\">B</span><span class=\"token punctuation\">(</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>j<span class=\"token operator\">+</span><span class=\"token number\">3</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span><span class=\"token function\">C</span><span class=\"token punctuation\">(</span> i<span class=\"token punctuation\">,</span>j<span class=\"token operator\">+</span><span class=\"token number\">3</span> <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre></pre></td></tr><tr><td data-num=\"32\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">GemmAccelerate</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>    <span class=\"token keyword\">int</span> M <span class=\"token operator\">=</span> <span class=\"token number\">16</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>    <span class=\"token keyword\">int</span> K <span class=\"token operator\">=</span> <span class=\"token number\">64</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>    <span class=\"token keyword\">int</span> N <span class=\"token operator\">=</span> <span class=\"token number\">16</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>    <span class=\"token keyword\">float</span><span class=\"token operator\">*</span> MatriA <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token function\">malloc</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span><span class=\"token punctuation\">)</span><span class=\"token operator\">*</span> M<span class=\"token operator\">*</span>K<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>    <span class=\"token keyword\">float</span><span class=\"token operator\">*</span> MatriB <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token function\">malloc</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span><span class=\"token punctuation\">)</span><span class=\"token operator\">*</span> K<span class=\"token operator\">*</span>N<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>    <span class=\"token keyword\">float</span><span class=\"token operator\">*</span> MatriC <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token function\">malloc</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span><span class=\"token punctuation\">)</span><span class=\"token operator\">*</span> M<span class=\"token operator\">*</span>N<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>    <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> index<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span> index<span class=\"token operator\">&lt;</span>M<span class=\"token operator\">*</span>K<span class=\"token punctuation\">;</span> index<span class=\"token operator\">&lt;</span>M<span class=\"token operator\">*</span>K<span class=\"token punctuation\">;</span> index<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>        MatriA<span class=\"token punctuation\">[</span>index<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>    <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> index<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span> index<span class=\"token operator\">&lt;</span>K<span class=\"token operator\">*</span>N<span class=\"token punctuation\">;</span> index<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>        MatriB<span class=\"token punctuation\">[</span>index<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>    <span class=\"token function\">MY_MMult2</span><span class=\"token punctuation\">(</span>M<span class=\"token punctuation\">,</span>N<span class=\"token punctuation\">,</span>K<span class=\"token punctuation\">,</span>MatriA<span class=\"token punctuation\">,</span>K<span class=\"token punctuation\">,</span>MatriB<span class=\"token punctuation\">,</span>N<span class=\"token punctuation\">,</span>MatriC<span class=\"token punctuation\">,</span>N<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h1 id=\"3使用寄存器\"><a class=\"anchor\" href=\"#3使用寄存器\">#</a> 3. 使用寄存器</h1>\n<p>中间计算结果使用寄存器存储，可以减少内存访问次数，可以显著提升性能，因为寄存器访问速度远快于内存访问。</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;stdio.h></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name function\">A</span><span class=\"token expression\"><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">,</span>j<span class=\"token punctuation\">)</span> a<span class=\"token punctuation\">[</span> <span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span><span class=\"token operator\">*</span>lda <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span>j<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">]</span></span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name function\">B</span><span class=\"token expression\"><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">,</span>j<span class=\"token punctuation\">)</span> b<span class=\"token punctuation\">[</span> <span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span><span class=\"token operator\">*</span>ldb <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span>j<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">]</span></span></span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name function\">C</span><span class=\"token expression\"><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">,</span>j<span class=\"token punctuation\">)</span> c<span class=\"token punctuation\">[</span> <span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span><span class=\"token operator\">*</span>ldc <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span>j<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">]</span></span></span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token comment\">/* Routine for computing C = A * B + C */</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">AddDot1x4</span><span class=\"token punctuation\">(</span> <span class=\"token keyword\">int</span> k<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> <span class=\"token operator\">*</span>a<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> lda<span class=\"token punctuation\">,</span>  <span class=\"token keyword\">float</span> <span class=\"token operator\">*</span>b<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> ldb<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> <span class=\"token operator\">*</span>c<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> ldc <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>  <span class=\"token keyword\">int</span> p<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>  <span class=\"token keyword\">register</span> <span class=\"token keyword\">float</span>    c_00_reg<span class=\"token punctuation\">,</span>   c_01_reg<span class=\"token punctuation\">,</span>   c_02_reg<span class=\"token punctuation\">,</span>   c_03_reg<span class=\"token punctuation\">,</span>  a_0p_reg<span class=\"token punctuation\">;</span>    </pre></td></tr><tr><td data-num=\"14\"></td><td><pre>  c_00_reg <span class=\"token operator\">=</span> <span class=\"token number\">0.0</span><span class=\"token punctuation\">;</span> </pre></td></tr><tr><td data-num=\"15\"></td><td><pre>  c_01_reg <span class=\"token operator\">=</span> <span class=\"token number\">0.0</span><span class=\"token punctuation\">;</span> </pre></td></tr><tr><td data-num=\"16\"></td><td><pre>  c_02_reg <span class=\"token operator\">=</span> <span class=\"token number\">0.0</span><span class=\"token punctuation\">;</span> </pre></td></tr><tr><td data-num=\"17\"></td><td><pre>  c_03_reg <span class=\"token operator\">=</span> <span class=\"token number\">0.0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre> </pre></td></tr><tr><td data-num=\"19\"></td><td><pre>  <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span> p<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span> p<span class=\"token operator\">&lt;</span>k<span class=\"token punctuation\">;</span> p<span class=\"token operator\">++</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    a_0p_reg <span class=\"token operator\">=</span> <span class=\"token function\">A</span><span class=\"token punctuation\">(</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> p <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    c_00_reg <span class=\"token operator\">+=</span> a_0p_reg <span class=\"token operator\">*</span> <span class=\"token function\">B</span><span class=\"token punctuation\">(</span> p<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>     </pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    c_01_reg <span class=\"token operator\">+=</span> a_0p_reg <span class=\"token operator\">*</span> <span class=\"token function\">B</span><span class=\"token punctuation\">(</span> p<span class=\"token punctuation\">,</span> <span class=\"token number\">1</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>     </pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    c_02_reg <span class=\"token operator\">+=</span> a_0p_reg <span class=\"token operator\">*</span> <span class=\"token function\">B</span><span class=\"token punctuation\">(</span> p<span class=\"token punctuation\">,</span> <span class=\"token number\">2</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>     </pre></td></tr><tr><td data-num=\"25\"></td><td><pre>    c_03_reg <span class=\"token operator\">+=</span> a_0p_reg <span class=\"token operator\">*</span> <span class=\"token function\">B</span><span class=\"token punctuation\">(</span> p<span class=\"token punctuation\">,</span> <span class=\"token number\">3</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>     </pre></td></tr><tr><td data-num=\"26\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>  <span class=\"token function\">C</span><span class=\"token punctuation\">(</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">)</span> <span class=\"token operator\">+=</span> c_00_reg<span class=\"token punctuation\">;</span> </pre></td></tr><tr><td data-num=\"29\"></td><td><pre>  <span class=\"token function\">C</span><span class=\"token punctuation\">(</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span> <span class=\"token punctuation\">)</span> <span class=\"token operator\">+=</span> c_01_reg<span class=\"token punctuation\">;</span> </pre></td></tr><tr><td data-num=\"30\"></td><td><pre>  <span class=\"token function\">C</span><span class=\"token punctuation\">(</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span> <span class=\"token punctuation\">)</span> <span class=\"token operator\">+=</span> c_02_reg<span class=\"token punctuation\">;</span> </pre></td></tr><tr><td data-num=\"31\"></td><td><pre>  <span class=\"token function\">C</span><span class=\"token punctuation\">(</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span> <span class=\"token punctuation\">)</span> <span class=\"token operator\">+=</span> c_03_reg<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre></pre></td></tr><tr><td data-num=\"34\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">MY_MMult_1x4_6</span><span class=\"token punctuation\">(</span> <span class=\"token keyword\">int</span> m<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> n<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> k<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> <span class=\"token operator\">*</span>a<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> lda<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> <span class=\"token operator\">*</span>b<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> ldb<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> <span class=\"token operator\">*</span>c<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> ldc <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>  <span class=\"token keyword\">int</span> i<span class=\"token punctuation\">,</span> j<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>  <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span> j<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span> j<span class=\"token operator\">&lt;</span>n<span class=\"token punctuation\">;</span> j<span class=\"token operator\">+=</span><span class=\"token number\">4</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>        <span class=\"token comment\">/* Loop over the columns of C, unrolled by 4 */</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span> i<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">&lt;</span>m<span class=\"token punctuation\">;</span> i<span class=\"token operator\">+=</span><span class=\"token number\">1</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>        <span class=\"token comment\">/* Loop over the rows of C */</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>      <span class=\"token function\">AddDot1x4</span><span class=\"token punctuation\">(</span> k<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span><span class=\"token function\">A</span><span class=\"token punctuation\">(</span> i<span class=\"token punctuation\">,</span><span class=\"token number\">0</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> lda<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span><span class=\"token function\">B</span><span class=\"token punctuation\">(</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>j <span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> ldb<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span><span class=\"token function\">C</span><span class=\"token punctuation\">(</span> i<span class=\"token punctuation\">,</span>j <span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> ldc <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre></pre></td></tr><tr><td data-num=\"45\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">GemmAccelerate</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>    <span class=\"token keyword\">int</span> M <span class=\"token operator\">=</span> <span class=\"token number\">16</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>    <span class=\"token keyword\">int</span> K <span class=\"token operator\">=</span> <span class=\"token number\">64</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>    <span class=\"token keyword\">int</span> N <span class=\"token operator\">=</span> <span class=\"token number\">16</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>    <span class=\"token keyword\">float</span><span class=\"token operator\">*</span> MatriA <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token function\">malloc</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span><span class=\"token punctuation\">)</span><span class=\"token operator\">*</span> M<span class=\"token operator\">*</span>K<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>    <span class=\"token keyword\">float</span><span class=\"token operator\">*</span> MatriB <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token function\">malloc</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span><span class=\"token punctuation\">)</span><span class=\"token operator\">*</span> K<span class=\"token operator\">*</span>N<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>    <span class=\"token keyword\">float</span><span class=\"token operator\">*</span> MatriC <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token function\">malloc</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span><span class=\"token punctuation\">)</span><span class=\"token operator\">*</span> M<span class=\"token operator\">*</span>N<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>    <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> index<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span> index<span class=\"token operator\">&lt;</span>M<span class=\"token operator\">*</span>K<span class=\"token punctuation\">;</span> index<span class=\"token operator\">&lt;</span>M<span class=\"token operator\">*</span>K<span class=\"token punctuation\">;</span> index<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>        MatriA<span class=\"token punctuation\">[</span>index<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>    <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> index<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span> index<span class=\"token operator\">&lt;</span>K<span class=\"token operator\">*</span>N<span class=\"token punctuation\">;</span> index<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>        MatriB<span class=\"token punctuation\">[</span>index<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre>    <span class=\"token function\">MY_MMult_1x4_6</span><span class=\"token punctuation\">(</span>M<span class=\"token punctuation\">,</span>N<span class=\"token punctuation\">,</span>K<span class=\"token punctuation\">,</span>MatriA<span class=\"token punctuation\">,</span>K<span class=\"token punctuation\">,</span>MatriB<span class=\"token punctuation\">,</span>N<span class=\"token punctuation\">,</span>MatriC<span class=\"token punctuation\">,</span>N<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h1 id=\"4避免乘法\"><a class=\"anchor\" href=\"#4避免乘法\">#</a> 4. 避免乘法</h1>\n<p><img loading=\"lazy\" data-src=\"1734703236955.jpg\" alt=\"4.避免乘法\"></p>\n<p>本次算法相对上一个，调整了循环展开的矩阵（从矩阵 B 变成了矩阵 A）。最内层循环中的  <code>c_00_reg += a_0p_reg * B( p, 0 );</code>  变成  <code> c_00_reg += b_0p_reg * *ap0_pntr++;</code> ，即用指针的累加替换了原来的 <code>B( p, 0 )</code> ，使得最内层循环减少了 4 个乘法。</p>\n<p>调整循环展开矩阵的原因是 行主序，矩阵 A 在内存中是连续的。</p>\n<p>避免乘法： 通常来讲乘法消耗的时间长于加法，效率差异取决于具体的硬件平台。减少乘法计算量可以提高算法效率。</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;stdio.h></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name function\">A</span><span class=\"token expression\"><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">,</span>j<span class=\"token punctuation\">)</span> a<span class=\"token punctuation\">[</span> <span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span><span class=\"token operator\">*</span>lda <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span>j<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">]</span></span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name function\">B</span><span class=\"token expression\"><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">,</span>j<span class=\"token punctuation\">)</span> b<span class=\"token punctuation\">[</span> <span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span><span class=\"token operator\">*</span>ldb <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span>j<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">]</span></span></span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name function\">C</span><span class=\"token expression\"><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">,</span>j<span class=\"token punctuation\">)</span> c<span class=\"token punctuation\">[</span> <span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span><span class=\"token operator\">*</span>ldc <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span>j<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">]</span></span></span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token comment\">/* Routine for computing C = A * B + C */</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">AddDot1x4</span><span class=\"token punctuation\">(</span> <span class=\"token keyword\">int</span> k<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> <span class=\"token operator\">*</span>a<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> lda<span class=\"token punctuation\">,</span>  <span class=\"token keyword\">float</span> <span class=\"token operator\">*</span>b<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> ldb<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> <span class=\"token operator\">*</span>c<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> ldc <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>  <span class=\"token keyword\">int</span> p<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>  <span class=\"token keyword\">register</span> <span class=\"token keyword\">float</span> </pre></td></tr><tr><td data-num=\"13\"></td><td><pre> c_00_reg<span class=\"token punctuation\">,</span>   c_01_reg<span class=\"token punctuation\">,</span>   c_02_reg<span class=\"token punctuation\">,</span>   c_03_reg<span class=\"token punctuation\">,</span>  b_0p_reg<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>  <span class=\"token keyword\">float</span> </pre></td></tr><tr><td data-num=\"15\"></td><td><pre> <span class=\"token operator\">*</span>ap0_pntr<span class=\"token punctuation\">,</span> <span class=\"token operator\">*</span>ap1_pntr<span class=\"token punctuation\">,</span> <span class=\"token operator\">*</span>ap2_pntr<span class=\"token punctuation\">,</span> <span class=\"token operator\">*</span>ap3_pntr<span class=\"token punctuation\">;</span> </pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    </pre></td></tr><tr><td data-num=\"17\"></td><td><pre>  ap0_pntr <span class=\"token operator\">=</span> <span class=\"token operator\">&amp;</span><span class=\"token function\">A</span><span class=\"token punctuation\">(</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>  ap1_pntr <span class=\"token operator\">=</span> <span class=\"token operator\">&amp;</span><span class=\"token function\">A</span><span class=\"token punctuation\">(</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>  ap2_pntr <span class=\"token operator\">=</span> <span class=\"token operator\">&amp;</span><span class=\"token function\">A</span><span class=\"token punctuation\">(</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>  ap3_pntr <span class=\"token operator\">=</span> <span class=\"token operator\">&amp;</span><span class=\"token function\">A</span><span class=\"token punctuation\">(</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>  c_00_reg <span class=\"token operator\">=</span> <span class=\"token number\">0.0</span><span class=\"token punctuation\">;</span> </pre></td></tr><tr><td data-num=\"23\"></td><td><pre>  c_01_reg <span class=\"token operator\">=</span> <span class=\"token number\">0.0</span><span class=\"token punctuation\">;</span> </pre></td></tr><tr><td data-num=\"24\"></td><td><pre>  c_02_reg <span class=\"token operator\">=</span> <span class=\"token number\">0.0</span><span class=\"token punctuation\">;</span> </pre></td></tr><tr><td data-num=\"25\"></td><td><pre>  c_03_reg <span class=\"token operator\">=</span> <span class=\"token number\">0.0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre> </pre></td></tr><tr><td data-num=\"27\"></td><td><pre>  <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span> p<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span> p<span class=\"token operator\">&lt;</span>k<span class=\"token punctuation\">;</span> p<span class=\"token operator\">++</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>    b_0p_reg <span class=\"token operator\">=</span> <span class=\"token function\">B</span><span class=\"token punctuation\">(</span> p<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>    c_00_reg <span class=\"token operator\">+=</span> b_0p_reg <span class=\"token operator\">*</span> <span class=\"token operator\">*</span>ap0_pntr<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>    c_01_reg <span class=\"token operator\">+=</span> b_0p_reg <span class=\"token operator\">*</span> <span class=\"token operator\">*</span>ap1_pntr<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>    c_02_reg <span class=\"token operator\">+=</span> b_0p_reg <span class=\"token operator\">*</span> <span class=\"token operator\">*</span>ap2_pntr<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>    c_03_reg <span class=\"token operator\">+=</span> b_0p_reg <span class=\"token operator\">*</span> <span class=\"token operator\">*</span>ap3_pntr<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>  <span class=\"token function\">C</span><span class=\"token punctuation\">(</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">)</span> <span class=\"token operator\">+=</span> c_00_reg<span class=\"token punctuation\">;</span> </pre></td></tr><tr><td data-num=\"37\"></td><td><pre>  <span class=\"token function\">C</span><span class=\"token punctuation\">(</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">)</span> <span class=\"token operator\">+=</span> c_01_reg<span class=\"token punctuation\">;</span> </pre></td></tr><tr><td data-num=\"38\"></td><td><pre>  <span class=\"token function\">C</span><span class=\"token punctuation\">(</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">)</span> <span class=\"token operator\">+=</span> c_02_reg<span class=\"token punctuation\">;</span> </pre></td></tr><tr><td data-num=\"39\"></td><td><pre>  <span class=\"token function\">C</span><span class=\"token punctuation\">(</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">)</span> <span class=\"token operator\">+=</span> c_03_reg<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre></pre></td></tr><tr><td data-num=\"42\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">MY_MMult_1x4_7</span><span class=\"token punctuation\">(</span> <span class=\"token keyword\">int</span> m<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> n<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> k<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> <span class=\"token operator\">*</span>a<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> lda<span class=\"token punctuation\">,</span>  <span class=\"token keyword\">float</span> <span class=\"token operator\">*</span>b<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> ldb<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> <span class=\"token operator\">*</span>c<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> ldc <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>  <span class=\"token keyword\">int</span> i<span class=\"token punctuation\">,</span> j<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>  <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span> j<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span> j<span class=\"token operator\">&lt;</span>n<span class=\"token punctuation\">;</span> j<span class=\"token operator\">+=</span><span class=\"token number\">1</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>        <span class=\"token comment\">/* Loop over the columns of C, unrolled by 4 */</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span> i<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">&lt;</span>m<span class=\"token punctuation\">;</span> i<span class=\"token operator\">+=</span><span class=\"token number\">4</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>        <span class=\"token comment\">/* Loop over the rows of C */</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>      <span class=\"token function\">AddDot1x4</span><span class=\"token punctuation\">(</span> k<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span><span class=\"token function\">A</span><span class=\"token punctuation\">(</span> i<span class=\"token punctuation\">,</span><span class=\"token number\">0</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> lda<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span><span class=\"token function\">B</span><span class=\"token punctuation\">(</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>j <span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> ldb<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span><span class=\"token function\">C</span><span class=\"token punctuation\">(</span> i<span class=\"token punctuation\">,</span>j <span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> ldc <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre></pre></td></tr><tr><td data-num=\"53\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">GemmAccelerate</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>    <span class=\"token keyword\">int</span> M <span class=\"token operator\">=</span> <span class=\"token number\">16</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>    <span class=\"token keyword\">int</span> K <span class=\"token operator\">=</span> <span class=\"token number\">64</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>    <span class=\"token keyword\">int</span> N <span class=\"token operator\">=</span> <span class=\"token number\">16</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>    <span class=\"token keyword\">float</span><span class=\"token operator\">*</span> MatriA <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token function\">malloc</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span><span class=\"token punctuation\">)</span><span class=\"token operator\">*</span> M<span class=\"token operator\">*</span>K<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre>    <span class=\"token keyword\">float</span><span class=\"token operator\">*</span> MatriB <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token function\">malloc</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span><span class=\"token punctuation\">)</span><span class=\"token operator\">*</span> K<span class=\"token operator\">*</span>N<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre>    <span class=\"token keyword\">float</span><span class=\"token operator\">*</span> MatriC <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token function\">malloc</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span><span class=\"token punctuation\">)</span><span class=\"token operator\">*</span> M<span class=\"token operator\">*</span>N<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre>    <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> index<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span> index<span class=\"token operator\">&lt;</span>M<span class=\"token operator\">*</span>K<span class=\"token punctuation\">;</span> index<span class=\"token operator\">&lt;</span>M<span class=\"token operator\">*</span>K<span class=\"token punctuation\">;</span> index<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre>        MatriA<span class=\"token punctuation\">[</span>index<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"62\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"63\"></td><td><pre>    <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> index<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span> index<span class=\"token operator\">&lt;</span>K<span class=\"token operator\">*</span>N<span class=\"token punctuation\">;</span> index<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"64\"></td><td><pre>        MatriB<span class=\"token punctuation\">[</span>index<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"65\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"66\"></td><td><pre>    <span class=\"token function\">MY_MMult_1x4_7</span><span class=\"token punctuation\">(</span>M<span class=\"token punctuation\">,</span>N<span class=\"token punctuation\">,</span>K<span class=\"token punctuation\">,</span>MatriA<span class=\"token punctuation\">,</span>K<span class=\"token punctuation\">,</span>MatriB<span class=\"token punctuation\">,</span>N<span class=\"token punctuation\">,</span>MatriC<span class=\"token punctuation\">,</span>N<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"67\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h1 id=\"5进一步循环展开\"><a class=\"anchor\" href=\"#5进一步循环展开\">#</a> 5. 进一步循环展开</h1>\n<p>将最内部的循环也展开，即原本的 <code>for ( p=0; p&lt;k; p++ )</code>  变成  <code> for ( p=0; p&lt;k; p+=4 )</code> ，内部计算的内容变成原来的四倍。当然也开辟了更多的寄存器。</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;stdio.h></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name function\">A</span><span class=\"token expression\"><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">,</span>j<span class=\"token punctuation\">)</span> a<span class=\"token punctuation\">[</span> <span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span><span class=\"token operator\">*</span>lda <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span>j<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">]</span></span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name function\">B</span><span class=\"token expression\"><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">,</span>j<span class=\"token punctuation\">)</span> b<span class=\"token punctuation\">[</span> <span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span><span class=\"token operator\">*</span>ldb <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span>j<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">]</span></span></span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name function\">C</span><span class=\"token expression\"><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">,</span>j<span class=\"token punctuation\">)</span> c<span class=\"token punctuation\">[</span> <span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span><span class=\"token operator\">*</span>ldc <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span>j<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">]</span></span></span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token comment\">/* Routine for computing C = A * B + C */</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">AddDot1x4</span><span class=\"token punctuation\">(</span> <span class=\"token keyword\">int</span> k<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> <span class=\"token operator\">*</span>a<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> lda<span class=\"token punctuation\">,</span>  <span class=\"token keyword\">float</span> <span class=\"token operator\">*</span>b<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> ldb<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> <span class=\"token operator\">*</span>c<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> ldc <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>  <span class=\"token keyword\">int</span> p<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>  <span class=\"token keyword\">register</span> <span class=\"token keyword\">float</span>   c_00_reg<span class=\"token punctuation\">,</span>   c_01_reg<span class=\"token punctuation\">,</span>   c_02_reg<span class=\"token punctuation\">,</span>   c_03_reg<span class=\"token punctuation\">,</span>  b_0p_reg<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>  <span class=\"token keyword\">float</span>  <span class=\"token operator\">*</span>ap0_pntr<span class=\"token punctuation\">,</span> <span class=\"token operator\">*</span>ap1_pntr<span class=\"token punctuation\">,</span> <span class=\"token operator\">*</span>ap2_pntr<span class=\"token punctuation\">,</span> <span class=\"token operator\">*</span>ap3_pntr<span class=\"token punctuation\">;</span>     </pre></td></tr><tr><td data-num=\"16\"></td><td><pre>  ap0_pntr <span class=\"token operator\">=</span> <span class=\"token operator\">&amp;</span><span class=\"token function\">A</span><span class=\"token punctuation\">(</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>  ap1_pntr <span class=\"token operator\">=</span> <span class=\"token operator\">&amp;</span><span class=\"token function\">A</span><span class=\"token punctuation\">(</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>  ap2_pntr <span class=\"token operator\">=</span> <span class=\"token operator\">&amp;</span><span class=\"token function\">A</span><span class=\"token punctuation\">(</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>  ap3_pntr <span class=\"token operator\">=</span> <span class=\"token operator\">&amp;</span><span class=\"token function\">A</span><span class=\"token punctuation\">(</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>  c_00_reg <span class=\"token operator\">=</span> <span class=\"token number\">0.0</span><span class=\"token punctuation\">;</span> </pre></td></tr><tr><td data-num=\"22\"></td><td><pre>  c_01_reg <span class=\"token operator\">=</span> <span class=\"token number\">0.0</span><span class=\"token punctuation\">;</span> </pre></td></tr><tr><td data-num=\"23\"></td><td><pre>  c_02_reg <span class=\"token operator\">=</span> <span class=\"token number\">0.0</span><span class=\"token punctuation\">;</span> </pre></td></tr><tr><td data-num=\"24\"></td><td><pre>  c_03_reg <span class=\"token operator\">=</span> <span class=\"token number\">0.0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre> </pre></td></tr><tr><td data-num=\"26\"></td><td><pre>  <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span> p<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span> p<span class=\"token operator\">&lt;</span>k<span class=\"token punctuation\">;</span> p<span class=\"token operator\">+=</span><span class=\"token number\">4</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>    b_0p_reg <span class=\"token operator\">=</span> <span class=\"token function\">B</span><span class=\"token punctuation\">(</span> p<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>    c_00_reg <span class=\"token operator\">+=</span> b_0p_reg <span class=\"token operator\">*</span> <span class=\"token operator\">*</span>ap0_pntr<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>    c_01_reg <span class=\"token operator\">+=</span> b_0p_reg <span class=\"token operator\">*</span> <span class=\"token operator\">*</span>ap1_pntr<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>    c_02_reg <span class=\"token operator\">+=</span> b_0p_reg <span class=\"token operator\">*</span> <span class=\"token operator\">*</span>ap2_pntr<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>    c_03_reg <span class=\"token operator\">+=</span> b_0p_reg <span class=\"token operator\">*</span> <span class=\"token operator\">*</span>ap3_pntr<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>    b_0p_reg <span class=\"token operator\">=</span> <span class=\"token function\">B</span><span class=\"token punctuation\">(</span> p<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>    c_00_reg <span class=\"token operator\">+=</span> b_0p_reg <span class=\"token operator\">*</span> <span class=\"token operator\">*</span>ap0_pntr<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>    c_01_reg <span class=\"token operator\">+=</span> b_0p_reg <span class=\"token operator\">*</span> <span class=\"token operator\">*</span>ap1_pntr<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>    c_02_reg <span class=\"token operator\">+=</span> b_0p_reg <span class=\"token operator\">*</span> <span class=\"token operator\">*</span>ap2_pntr<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>    c_03_reg <span class=\"token operator\">+=</span> b_0p_reg <span class=\"token operator\">*</span> <span class=\"token operator\">*</span>ap3_pntr<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>    b_0p_reg <span class=\"token operator\">=</span> <span class=\"token function\">B</span><span class=\"token punctuation\">(</span> p<span class=\"token operator\">+</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>    c_00_reg <span class=\"token operator\">+=</span> b_0p_reg <span class=\"token operator\">*</span> <span class=\"token operator\">*</span>ap0_pntr<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>    c_01_reg <span class=\"token operator\">+=</span> b_0p_reg <span class=\"token operator\">*</span> <span class=\"token operator\">*</span>ap1_pntr<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>    c_02_reg <span class=\"token operator\">+=</span> b_0p_reg <span class=\"token operator\">*</span> <span class=\"token operator\">*</span>ap2_pntr<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>    c_03_reg <span class=\"token operator\">+=</span> b_0p_reg <span class=\"token operator\">*</span> <span class=\"token operator\">*</span>ap3_pntr<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>    b_0p_reg <span class=\"token operator\">=</span> <span class=\"token function\">B</span><span class=\"token punctuation\">(</span> p<span class=\"token operator\">+</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>    c_00_reg <span class=\"token operator\">+=</span> b_0p_reg <span class=\"token operator\">*</span> <span class=\"token operator\">*</span>ap0_pntr<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>    c_01_reg <span class=\"token operator\">+=</span> b_0p_reg <span class=\"token operator\">*</span> <span class=\"token operator\">*</span>ap1_pntr<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>    c_02_reg <span class=\"token operator\">+=</span> b_0p_reg <span class=\"token operator\">*</span> <span class=\"token operator\">*</span>ap2_pntr<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>    c_03_reg <span class=\"token operator\">+=</span> b_0p_reg <span class=\"token operator\">*</span> <span class=\"token operator\">*</span>ap3_pntr<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>  <span class=\"token function\">C</span><span class=\"token punctuation\">(</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">)</span> <span class=\"token operator\">+=</span> c_00_reg<span class=\"token punctuation\">;</span> </pre></td></tr><tr><td data-num=\"57\"></td><td><pre>  <span class=\"token function\">C</span><span class=\"token punctuation\">(</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">)</span> <span class=\"token operator\">+=</span> c_01_reg<span class=\"token punctuation\">;</span> </pre></td></tr><tr><td data-num=\"58\"></td><td><pre>  <span class=\"token function\">C</span><span class=\"token punctuation\">(</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">)</span> <span class=\"token operator\">+=</span> c_02_reg<span class=\"token punctuation\">;</span> </pre></td></tr><tr><td data-num=\"59\"></td><td><pre>  <span class=\"token function\">C</span><span class=\"token punctuation\">(</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">)</span> <span class=\"token operator\">+=</span> c_03_reg<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre></pre></td></tr><tr><td data-num=\"62\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">MY_MMult_1x4_8</span><span class=\"token punctuation\">(</span> <span class=\"token keyword\">int</span> m<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> n<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> k<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> <span class=\"token operator\">*</span>a<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> lda<span class=\"token punctuation\">,</span><span class=\"token keyword\">float</span> <span class=\"token operator\">*</span>b<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> ldb<span class=\"token punctuation\">,</span><span class=\"token keyword\">float</span> <span class=\"token operator\">*</span>c<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> ldc <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"63\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"64\"></td><td><pre>  <span class=\"token keyword\">int</span> i<span class=\"token punctuation\">,</span> j<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"65\"></td><td><pre></pre></td></tr><tr><td data-num=\"66\"></td><td><pre>  <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span> j<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span> j<span class=\"token operator\">&lt;</span>n<span class=\"token punctuation\">;</span> j<span class=\"token operator\">+=</span><span class=\"token number\">1</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>        <span class=\"token comment\">/* Loop over the columns of C, unrolled by 4 */</span></pre></td></tr><tr><td data-num=\"67\"></td><td><pre>    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span> i<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">&lt;</span>m<span class=\"token punctuation\">;</span> i<span class=\"token operator\">+=</span><span class=\"token number\">4</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>        <span class=\"token comment\">/* Loop over the rows of C */</span></pre></td></tr><tr><td data-num=\"68\"></td><td><pre>      <span class=\"token function\">AddDot1x4</span><span class=\"token punctuation\">(</span> k<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span><span class=\"token function\">A</span><span class=\"token punctuation\">(</span> i<span class=\"token punctuation\">,</span><span class=\"token number\">0</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> lda<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span><span class=\"token function\">B</span><span class=\"token punctuation\">(</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>j <span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> ldb<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span><span class=\"token function\">C</span><span class=\"token punctuation\">(</span> i<span class=\"token punctuation\">,</span>j <span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> ldc <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"69\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"70\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"71\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"72\"></td><td><pre></pre></td></tr><tr><td data-num=\"73\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">GemmAccelerate</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"74\"></td><td><pre>    <span class=\"token keyword\">int</span> M <span class=\"token operator\">=</span> <span class=\"token number\">16</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"75\"></td><td><pre>    <span class=\"token keyword\">int</span> K <span class=\"token operator\">=</span> <span class=\"token number\">64</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"76\"></td><td><pre>    <span class=\"token keyword\">int</span> N <span class=\"token operator\">=</span> <span class=\"token number\">16</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"77\"></td><td><pre>    <span class=\"token keyword\">float</span><span class=\"token operator\">*</span> MatriA <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token function\">malloc</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span><span class=\"token punctuation\">)</span><span class=\"token operator\">*</span> M<span class=\"token operator\">*</span>K<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"78\"></td><td><pre>    <span class=\"token keyword\">float</span><span class=\"token operator\">*</span> MatriB <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token function\">malloc</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span><span class=\"token punctuation\">)</span><span class=\"token operator\">*</span> K<span class=\"token operator\">*</span>N<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"79\"></td><td><pre>    <span class=\"token keyword\">float</span><span class=\"token operator\">*</span> MatriC <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token function\">malloc</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span><span class=\"token punctuation\">)</span><span class=\"token operator\">*</span> M<span class=\"token operator\">*</span>N<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"80\"></td><td><pre>    <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> index<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span> index<span class=\"token operator\">&lt;</span>M<span class=\"token operator\">*</span>K<span class=\"token punctuation\">;</span> index<span class=\"token operator\">&lt;</span>M<span class=\"token operator\">*</span>K<span class=\"token punctuation\">;</span> index<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"81\"></td><td><pre>        MatriA<span class=\"token punctuation\">[</span>index<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"82\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"83\"></td><td><pre>    <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> index<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span> index<span class=\"token operator\">&lt;</span>K<span class=\"token operator\">*</span>N<span class=\"token punctuation\">;</span> index<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"84\"></td><td><pre>        MatriB<span class=\"token punctuation\">[</span>index<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"85\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"86\"></td><td><pre>    <span class=\"token function\">MY_MMult_1x4_8</span><span class=\"token punctuation\">(</span>M<span class=\"token punctuation\">,</span>N<span class=\"token punctuation\">,</span>K<span class=\"token punctuation\">,</span>MatriA<span class=\"token punctuation\">,</span>K<span class=\"token punctuation\">,</span>MatriB<span class=\"token punctuation\">,</span>N<span class=\"token punctuation\">,</span>MatriC<span class=\"token punctuation\">,</span>N<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"87\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h1 id=\"6使用simd指令\"><a class=\"anchor\" href=\"#6使用simd指令\">#</a> 6. 使用 SIMD 指令</h1>\n<p><img loading=\"lazy\" data-src=\"1734703349079.jpg\" alt=\"6.使用指令\"></p>\n<p>SIMD 指令是单指令多数据，以 X86 平台的 SSE2 为例，其支持 128 的寄存器，一次性可以计算 4 个 float 或 int 数据，能够提高算法的并行度。</p>\n<p>代码中的 SSE 指令  <code>_mm_setzero_ps</code> ：将寄存器置零， <code>_mm_loadu_ps</code> ：读取指定位置的数据到寄存器， <code>_mm_mul_ps</code> ：乘运算， <code>_mm_add_ps</code> ：加运算， <code>_mm_storeu_ps</code> ：将寄存器的数据存储会内存， <code>_mm_set_ps1 </code> ：将给定地址的一个数复制 4 份到寄存器。</p>\n<p>以下代码在 M 和 N 两个方向循环展开（和 5 不同），一次性计算 16 个数据。</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;stdio.h></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;emmintrin.h></span> <span class=\"token comment\">// SSE2</span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name function\">A</span><span class=\"token expression\"><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">,</span>j<span class=\"token punctuation\">)</span> a<span class=\"token punctuation\">[</span> <span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span><span class=\"token operator\">*</span>lda <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span>j<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">]</span></span></span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name function\">B</span><span class=\"token expression\"><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">,</span>j<span class=\"token punctuation\">)</span> b<span class=\"token punctuation\">[</span> <span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span><span class=\"token operator\">*</span>ldb <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span>j<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">]</span></span></span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name function\">C</span><span class=\"token expression\"><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">,</span>j<span class=\"token punctuation\">)</span> c<span class=\"token punctuation\">[</span> <span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span><span class=\"token operator\">*</span>ldc <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span>j<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">]</span></span></span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token comment\">/* Routine for computing C = A * B + C */</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">AddDot4x4_SSE2</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> k<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> <span class=\"token operator\">*</span>a<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> lda<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> <span class=\"token operator\">*</span>b<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> ldb<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> <span class=\"token operator\">*</span>c<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> ldc<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token comment\">/* Point to the current elements in the four rows of A */</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token keyword\">float</span> <span class=\"token operator\">*</span>a_0p_pntr <span class=\"token operator\">=</span> <span class=\"token operator\">&amp;</span><span class=\"token function\">A</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token keyword\">float</span> <span class=\"token operator\">*</span>a_1p_pntr <span class=\"token operator\">=</span> <span class=\"token operator\">&amp;</span><span class=\"token function\">A</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token keyword\">float</span> <span class=\"token operator\">*</span>a_2p_pntr <span class=\"token operator\">=</span> <span class=\"token operator\">&amp;</span><span class=\"token function\">A</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token keyword\">float</span> <span class=\"token operator\">*</span>a_3p_pntr <span class=\"token operator\">=</span> <span class=\"token operator\">&amp;</span><span class=\"token function\">A</span><span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    __m128 c_p0_sum <span class=\"token operator\">=</span> <span class=\"token function\">_mm_setzero_ps</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    __m128 c_p1_sum <span class=\"token operator\">=</span> <span class=\"token function\">_mm_setzero_ps</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    __m128 c_p2_sum <span class=\"token operator\">=</span> <span class=\"token function\">_mm_setzero_ps</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    __m128 c_p3_sum <span class=\"token operator\">=</span> <span class=\"token function\">_mm_setzero_ps</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    <span class=\"token keyword\">register</span> <span class=\"token keyword\">float</span> a_0p_reg<span class=\"token punctuation\">,</span> a_1p_reg<span class=\"token punctuation\">,</span> a_2p_reg<span class=\"token punctuation\">,</span> a_3p_reg<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> p <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> p <span class=\"token operator\">&lt;</span> k<span class=\"token punctuation\">;</span> <span class=\"token operator\">++</span>p<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>        __m128 b_reg <span class=\"token operator\">=</span> <span class=\"token function\">_mm_loadu_ps</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span><span class=\"token function\">B</span><span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>        a_0p_reg <span class=\"token operator\">=</span> <span class=\"token operator\">*</span>a_0p_pntr<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>        a_1p_reg <span class=\"token operator\">=</span> <span class=\"token operator\">*</span>a_1p_pntr<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>        a_2p_reg <span class=\"token operator\">=</span> <span class=\"token operator\">*</span>a_2p_pntr<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>        a_3p_reg <span class=\"token operator\">=</span> <span class=\"token operator\">*</span>a_3p_pntr<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>        __m128 a_0p_vec <span class=\"token operator\">=</span> <span class=\"token function\">_mm_set_ps1</span><span class=\"token punctuation\">(</span>a_0p_reg<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>        __m128 a_1p_vec <span class=\"token operator\">=</span> <span class=\"token function\">_mm_set_ps1</span><span class=\"token punctuation\">(</span>a_1p_reg<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>        __m128 a_2p_vec <span class=\"token operator\">=</span> <span class=\"token function\">_mm_set_ps1</span><span class=\"token punctuation\">(</span>a_2p_reg<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>        __m128 a_3p_vec <span class=\"token operator\">=</span> <span class=\"token function\">_mm_set_ps1</span><span class=\"token punctuation\">(</span>a_3p_reg<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>        c_p0_sum <span class=\"token operator\">=</span> <span class=\"token function\">_mm_add_ps</span><span class=\"token punctuation\">(</span>c_p0_sum<span class=\"token punctuation\">,</span> <span class=\"token function\">_mm_mul_ps</span><span class=\"token punctuation\">(</span>b_reg<span class=\"token punctuation\">,</span> a_0p_vec<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>        c_p1_sum <span class=\"token operator\">=</span> <span class=\"token function\">_mm_add_ps</span><span class=\"token punctuation\">(</span>c_p1_sum<span class=\"token punctuation\">,</span> <span class=\"token function\">_mm_mul_ps</span><span class=\"token punctuation\">(</span>b_reg<span class=\"token punctuation\">,</span> a_1p_vec<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>        c_p2_sum <span class=\"token operator\">=</span> <span class=\"token function\">_mm_add_ps</span><span class=\"token punctuation\">(</span>c_p2_sum<span class=\"token punctuation\">,</span> <span class=\"token function\">_mm_mul_ps</span><span class=\"token punctuation\">(</span>b_reg<span class=\"token punctuation\">,</span> a_2p_vec<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>        c_p3_sum <span class=\"token operator\">=</span> <span class=\"token function\">_mm_add_ps</span><span class=\"token punctuation\">(</span>c_p3_sum<span class=\"token punctuation\">,</span> <span class=\"token function\">_mm_mul_ps</span><span class=\"token punctuation\">(</span>b_reg<span class=\"token punctuation\">,</span> a_3p_vec<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>    <span class=\"token keyword\">float</span> <span class=\"token operator\">*</span>c_pntr<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>    __m128 c_reg<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>    c_pntr <span class=\"token operator\">=</span> <span class=\"token operator\">&amp;</span><span class=\"token function\">C</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>    c_reg <span class=\"token operator\">=</span> <span class=\"token function\">_mm_loadu_ps</span><span class=\"token punctuation\">(</span>c_pntr<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>    c_reg <span class=\"token operator\">=</span> <span class=\"token function\">_mm_add_ps</span><span class=\"token punctuation\">(</span>c_reg<span class=\"token punctuation\">,</span> c_p0_sum<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>    <span class=\"token function\">_mm_storeu_ps</span><span class=\"token punctuation\">(</span>c_pntr<span class=\"token punctuation\">,</span> c_reg<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>    c_pntr <span class=\"token operator\">=</span> <span class=\"token operator\">&amp;</span><span class=\"token function\">C</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>    c_reg <span class=\"token operator\">=</span> <span class=\"token function\">_mm_loadu_ps</span><span class=\"token punctuation\">(</span>c_pntr<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>    c_reg <span class=\"token operator\">=</span> <span class=\"token function\">_mm_add_ps</span><span class=\"token punctuation\">(</span>c_reg<span class=\"token punctuation\">,</span> c_p1_sum<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>    <span class=\"token function\">_mm_storeu_ps</span><span class=\"token punctuation\">(</span>c_pntr<span class=\"token punctuation\">,</span> c_reg<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>    c_pntr <span class=\"token operator\">=</span> <span class=\"token operator\">&amp;</span><span class=\"token function\">C</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>    c_reg <span class=\"token operator\">=</span> <span class=\"token function\">_mm_loadu_ps</span><span class=\"token punctuation\">(</span>c_pntr<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>    c_reg <span class=\"token operator\">=</span> <span class=\"token function\">_mm_add_ps</span><span class=\"token punctuation\">(</span>c_reg<span class=\"token punctuation\">,</span> c_p2_sum<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre>    <span class=\"token function\">_mm_storeu_ps</span><span class=\"token punctuation\">(</span>c_pntr<span class=\"token punctuation\">,</span> c_reg<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre></pre></td></tr><tr><td data-num=\"60\"></td><td><pre>    c_pntr <span class=\"token operator\">=</span> <span class=\"token operator\">&amp;</span><span class=\"token function\">C</span><span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre>    c_reg <span class=\"token operator\">=</span> <span class=\"token function\">_mm_loadu_ps</span><span class=\"token punctuation\">(</span>c_pntr<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"62\"></td><td><pre>    c_reg <span class=\"token operator\">=</span> <span class=\"token function\">_mm_add_ps</span><span class=\"token punctuation\">(</span>c_reg<span class=\"token punctuation\">,</span> c_p3_sum<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"63\"></td><td><pre>    <span class=\"token function\">_mm_storeu_ps</span><span class=\"token punctuation\">(</span>c_pntr<span class=\"token punctuation\">,</span> c_reg<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"64\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"65\"></td><td><pre></pre></td></tr><tr><td data-num=\"66\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">MY_MMult_4x4_10</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> m<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> n<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> k<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> <span class=\"token operator\">*</span>a<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> lda<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> <span class=\"token operator\">*</span>b<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> ldb<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> <span class=\"token operator\">*</span>c<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> ldc<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"67\"></td><td><pre>    <span class=\"token keyword\">int</span> i<span class=\"token punctuation\">,</span> j<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"68\"></td><td><pre>    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span>j <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> j <span class=\"token operator\">&lt;</span> n<span class=\"token punctuation\">;</span> j <span class=\"token operator\">+=</span> <span class=\"token number\">4</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>        <span class=\"token comment\">/* Loop over the columns of C, unrolled by 4 */</span></pre></td></tr><tr><td data-num=\"69\"></td><td><pre>        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span>i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> m<span class=\"token punctuation\">;</span> i <span class=\"token operator\">+=</span> <span class=\"token number\">4</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>    <span class=\"token comment\">/* Loop over the rows of C */</span></pre></td></tr><tr><td data-num=\"70\"></td><td><pre>            <span class=\"token function\">AddDot4x4_SSE2</span><span class=\"token punctuation\">(</span>k<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span><span class=\"token function\">A</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> lda<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span><span class=\"token function\">B</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> j<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> ldb<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span><span class=\"token function\">C</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">,</span> j<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> ldc<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"71\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"72\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"73\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"74\"></td><td><pre></pre></td></tr><tr><td data-num=\"75\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">GemmAccelerateSimd</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"76\"></td><td><pre>    <span class=\"token keyword\">int</span> M <span class=\"token operator\">=</span> <span class=\"token number\">16</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"77\"></td><td><pre>    <span class=\"token keyword\">int</span> K <span class=\"token operator\">=</span> <span class=\"token number\">64</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"78\"></td><td><pre>    <span class=\"token keyword\">int</span> N <span class=\"token operator\">=</span> <span class=\"token number\">16</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"79\"></td><td><pre>    <span class=\"token keyword\">float</span><span class=\"token operator\">*</span> MatriA <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token function\">malloc</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span><span class=\"token punctuation\">)</span><span class=\"token operator\">*</span> M<span class=\"token operator\">*</span>K<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"80\"></td><td><pre>    <span class=\"token keyword\">float</span><span class=\"token operator\">*</span> MatriB <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token function\">malloc</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span><span class=\"token punctuation\">)</span><span class=\"token operator\">*</span> K<span class=\"token operator\">*</span>N<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"81\"></td><td><pre>    <span class=\"token keyword\">float</span><span class=\"token operator\">*</span> MatriC <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token function\">malloc</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span><span class=\"token punctuation\">)</span><span class=\"token operator\">*</span> M<span class=\"token operator\">*</span>N<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"82\"></td><td><pre>    <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> index<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span> index<span class=\"token operator\">&lt;</span>M<span class=\"token operator\">*</span>K<span class=\"token punctuation\">;</span> index<span class=\"token operator\">&lt;</span>M<span class=\"token operator\">*</span>K<span class=\"token punctuation\">;</span> index<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"83\"></td><td><pre>        MatriA<span class=\"token punctuation\">[</span>index<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"84\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"85\"></td><td><pre>    <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> index<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span> index<span class=\"token operator\">&lt;</span>K<span class=\"token operator\">*</span>N<span class=\"token punctuation\">;</span> index<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"86\"></td><td><pre>        MatriB<span class=\"token punctuation\">[</span>index<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"87\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"88\"></td><td><pre>    <span class=\"token function\">MY_MMult_4x4_10</span><span class=\"token punctuation\">(</span>M<span class=\"token punctuation\">,</span>N<span class=\"token punctuation\">,</span>K<span class=\"token punctuation\">,</span>MatriA<span class=\"token punctuation\">,</span>K<span class=\"token punctuation\">,</span>MatriB<span class=\"token punctuation\">,</span>N<span class=\"token punctuation\">,</span>MatriC<span class=\"token punctuation\">,</span>N<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"89\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h1 id=\"7矩阵分块\"><a class=\"anchor\" href=\"#7矩阵分块\">#</a> 7. 矩阵分块</h1>\n<p><img loading=\"lazy\" data-src=\"1734703427993.jpg\" alt=\"7.矩阵分块\"></p>\n<p>分块技术（blocking）是一种常用的优化策略，旨在改善缓存命中率和数据局部性，进而提升计算密集型操作（如矩阵乘法）的性能。通过将大矩阵分割成较小的子矩阵（即 “块”），可以更好地利用 CPU 缓存，并减少内存访问延迟。</p>\n<p>以下代码中， <code>mc</code>  (Macro for m-block Count)：定义了处理矩阵行方向上的块大小 ， <code>kc</code>  (Macro for k-block Count)：定义了处理矩阵列方向上的块大小。在整个代码中被用作循环边界或参数，用于控制矩阵分块的尺寸。他们将矩阵 A 分割乘 256<em>128 的小块，将矩阵 B 分割成 128</em>N 的小块，然后计算两个小块的矩阵乘运算。至于如何得到最终结果，可以参考《线性代数》知识：分块矩阵乘。</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;emmintrin.h></span> <span class=\"token comment\">// SSE2</span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;smmintrin.h></span> <span class=\"token comment\">// SSE4.1, for _mm_dp_ps if needed</span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;stdio.h></span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token comment\">/* Block sizes */</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">mc</span> <span class=\"token expression\"><span class=\"token number\">256</span> </span></span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">kc</span> <span class=\"token expression\"><span class=\"token number\">128</span></span></span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token comment\">/* Create macros so that the matrices are stored in row-major order */</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name function\">A</span><span class=\"token expression\"><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">,</span>j<span class=\"token punctuation\">)</span> a<span class=\"token punctuation\">[</span> <span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span><span class=\"token operator\">*</span>lda <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span>j<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">]</span></span></span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name function\">B</span><span class=\"token expression\"><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">,</span>j<span class=\"token punctuation\">)</span> b<span class=\"token punctuation\">[</span> <span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span><span class=\"token operator\">*</span>ldb <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span>j<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">]</span></span></span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name function\">C</span><span class=\"token expression\"><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">,</span>j<span class=\"token punctuation\">)</span> c<span class=\"token punctuation\">[</span> <span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span><span class=\"token operator\">*</span>ldc <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span>j<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">]</span></span></span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name function\">min</span><span class=\"token expression\"><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">,</span> j<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;</span> <span class=\"token punctuation\">(</span>j<span class=\"token punctuation\">)</span> <span class=\"token operator\">?</span> <span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span>j<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></span></span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token comment\">/* Routine for computing C = A * B + C */</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre></pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">AddDot4x4_SSE</span><span class=\"token punctuation\">(</span> <span class=\"token keyword\">int</span> k<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> <span class=\"token operator\">*</span>a<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> lda<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> <span class=\"token operator\">*</span>b<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> ldb<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> <span class=\"token operator\">*</span>c<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> ldc <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>  <span class=\"token comment\">/* Point to the current elements in the four rows of A */</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>  <span class=\"token keyword\">float</span> <span class=\"token operator\">*</span>a_0p_pntr <span class=\"token operator\">=</span> <span class=\"token operator\">&amp;</span><span class=\"token function\">A</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>  <span class=\"token keyword\">float</span> <span class=\"token operator\">*</span>a_1p_pntr <span class=\"token operator\">=</span> <span class=\"token operator\">&amp;</span><span class=\"token function\">A</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>  <span class=\"token keyword\">float</span> <span class=\"token operator\">*</span>a_2p_pntr <span class=\"token operator\">=</span> <span class=\"token operator\">&amp;</span><span class=\"token function\">A</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>  <span class=\"token keyword\">float</span> <span class=\"token operator\">*</span>a_3p_pntr <span class=\"token operator\">=</span> <span class=\"token operator\">&amp;</span><span class=\"token function\">A</span><span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>  __m128 c_0p_sum <span class=\"token operator\">=</span> <span class=\"token function\">_mm_setzero_ps</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>  __m128 c_1p_sum <span class=\"token operator\">=</span> <span class=\"token function\">_mm_setzero_ps</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>  __m128 c_2p_sum <span class=\"token operator\">=</span> <span class=\"token function\">_mm_setzero_ps</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>  __m128 c_3p_sum <span class=\"token operator\">=</span> <span class=\"token function\">_mm_setzero_ps</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>  <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> p <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> p <span class=\"token operator\">&lt;</span> k<span class=\"token punctuation\">;</span> <span class=\"token operator\">++</span>p<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>    __m128 b_reg <span class=\"token operator\">=</span> <span class=\"token function\">_mm_loadu_ps</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span><span class=\"token function\">B</span><span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>    <span class=\"token keyword\">float</span> a_0p_reg <span class=\"token operator\">=</span> <span class=\"token operator\">*</span>a_0p_pntr<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>    <span class=\"token keyword\">float</span> a_1p_reg <span class=\"token operator\">=</span> <span class=\"token operator\">*</span>a_1p_pntr<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>    <span class=\"token keyword\">float</span> a_2p_reg <span class=\"token operator\">=</span> <span class=\"token operator\">*</span>a_2p_pntr<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>    <span class=\"token keyword\">float</span> a_3p_reg <span class=\"token operator\">=</span> <span class=\"token operator\">*</span>a_3p_pntr<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>    c_0p_sum <span class=\"token operator\">=</span> <span class=\"token function\">_mm_add_ps</span><span class=\"token punctuation\">(</span>c_0p_sum<span class=\"token punctuation\">,</span> <span class=\"token function\">_mm_mul_ps</span><span class=\"token punctuation\">(</span>b_reg<span class=\"token punctuation\">,</span> <span class=\"token function\">_mm_set1_ps</span><span class=\"token punctuation\">(</span>a_0p_reg<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>    c_1p_sum <span class=\"token operator\">=</span> <span class=\"token function\">_mm_add_ps</span><span class=\"token punctuation\">(</span>c_1p_sum<span class=\"token punctuation\">,</span> <span class=\"token function\">_mm_mul_ps</span><span class=\"token punctuation\">(</span>b_reg<span class=\"token punctuation\">,</span> <span class=\"token function\">_mm_set1_ps</span><span class=\"token punctuation\">(</span>a_1p_reg<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>    c_2p_sum <span class=\"token operator\">=</span> <span class=\"token function\">_mm_add_ps</span><span class=\"token punctuation\">(</span>c_2p_sum<span class=\"token punctuation\">,</span> <span class=\"token function\">_mm_mul_ps</span><span class=\"token punctuation\">(</span>b_reg<span class=\"token punctuation\">,</span> <span class=\"token function\">_mm_set1_ps</span><span class=\"token punctuation\">(</span>a_2p_reg<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>    c_3p_sum <span class=\"token operator\">=</span> <span class=\"token function\">_mm_add_ps</span><span class=\"token punctuation\">(</span>c_3p_sum<span class=\"token punctuation\">,</span> <span class=\"token function\">_mm_mul_ps</span><span class=\"token punctuation\">(</span>b_reg<span class=\"token punctuation\">,</span> <span class=\"token function\">_mm_set1_ps</span><span class=\"token punctuation\">(</span>a_3p_reg<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>  <span class=\"token comment\">// Store results back into C matrix</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>  <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> row <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> row <span class=\"token operator\">&lt;</span> <span class=\"token number\">4</span><span class=\"token punctuation\">;</span> <span class=\"token operator\">++</span>row<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>    <span class=\"token keyword\">float</span><span class=\"token operator\">*</span> c_pntr <span class=\"token operator\">=</span> <span class=\"token operator\">&amp;</span><span class=\"token function\">C</span><span class=\"token punctuation\">(</span>row<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>    __m128 c_reg <span class=\"token operator\">=</span> <span class=\"token function\">_mm_loadu_ps</span><span class=\"token punctuation\">(</span>c_pntr<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>    <span class=\"token keyword\">switch</span> <span class=\"token punctuation\">(</span>row<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>      <span class=\"token keyword\">case</span> <span class=\"token number\">0</span><span class=\"token operator\">:</span> c_reg <span class=\"token operator\">=</span> <span class=\"token function\">_mm_add_ps</span><span class=\"token punctuation\">(</span>c_reg<span class=\"token punctuation\">,</span> c_0p_sum<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>      <span class=\"token keyword\">case</span> <span class=\"token number\">1</span><span class=\"token operator\">:</span> c_reg <span class=\"token operator\">=</span> <span class=\"token function\">_mm_add_ps</span><span class=\"token punctuation\">(</span>c_reg<span class=\"token punctuation\">,</span> c_1p_sum<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>      <span class=\"token keyword\">case</span> <span class=\"token number\">2</span><span class=\"token operator\">:</span> c_reg <span class=\"token operator\">=</span> <span class=\"token function\">_mm_add_ps</span><span class=\"token punctuation\">(</span>c_reg<span class=\"token punctuation\">,</span> c_2p_sum<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>      <span class=\"token keyword\">case</span> <span class=\"token number\">3</span><span class=\"token operator\">:</span> c_reg <span class=\"token operator\">=</span> <span class=\"token function\">_mm_add_ps</span><span class=\"token punctuation\">(</span>c_reg<span class=\"token punctuation\">,</span> c_3p_sum<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>    <span class=\"token function\">_mm_storeu_ps</span><span class=\"token punctuation\">(</span>c_pntr<span class=\"token punctuation\">,</span> c_reg<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre></pre></td></tr><tr><td data-num=\"60\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">InnerKernel_SSE</span><span class=\"token punctuation\">(</span> <span class=\"token keyword\">int</span> m<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> n<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> k<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> <span class=\"token operator\">*</span>a<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> lda<span class=\"token punctuation\">,</span>  <span class=\"token keyword\">float</span> <span class=\"token operator\">*</span>b<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> ldb<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> <span class=\"token operator\">*</span>c<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> ldc <span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre>  <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span> <span class=\"token keyword\">int</span> j<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span> j<span class=\"token operator\">&lt;</span>n<span class=\"token punctuation\">;</span> j<span class=\"token operator\">+=</span><span class=\"token number\">4</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>        <span class=\"token comment\">/* Loop over the columns of C, unrolled by 4 */</span></pre></td></tr><tr><td data-num=\"62\"></td><td><pre>    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span> <span class=\"token keyword\">int</span> i<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">&lt;</span>m<span class=\"token punctuation\">;</span> i<span class=\"token operator\">+=</span><span class=\"token number\">4</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>        <span class=\"token comment\">/* Loop over the rows of C */</span></pre></td></tr><tr><td data-num=\"63\"></td><td><pre>      <span class=\"token function\">AddDot4x4_SSE</span><span class=\"token punctuation\">(</span> k<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span><span class=\"token function\">A</span><span class=\"token punctuation\">(</span> i<span class=\"token punctuation\">,</span><span class=\"token number\">0</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> lda<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span><span class=\"token function\">B</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> j<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> ldb<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span><span class=\"token function\">C</span><span class=\"token punctuation\">(</span> i<span class=\"token punctuation\">,</span>j <span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> ldc <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"64\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"65\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"66\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"67\"></td><td><pre></pre></td></tr><tr><td data-num=\"68\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">MY_MMult_4x4_11_SSE</span><span class=\"token punctuation\">(</span> <span class=\"token keyword\">int</span> m<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> n<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> k<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> <span class=\"token operator\">*</span>a<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> lda<span class=\"token punctuation\">,</span>  <span class=\"token keyword\">float</span> <span class=\"token operator\">*</span>b<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> ldb<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> <span class=\"token operator\">*</span>c<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> ldc <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"69\"></td><td><pre>  <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> p <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> p <span class=\"token operator\">&lt;</span> k<span class=\"token punctuation\">;</span> p <span class=\"token operator\">+=</span> kc<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"70\"></td><td><pre>    <span class=\"token keyword\">int</span> pb <span class=\"token operator\">=</span> <span class=\"token function\">min</span><span class=\"token punctuation\">(</span>k <span class=\"token operator\">-</span> p<span class=\"token punctuation\">,</span> kc<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"71\"></td><td><pre>    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> m<span class=\"token punctuation\">;</span> i <span class=\"token operator\">+=</span> mc<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"72\"></td><td><pre>      <span class=\"token keyword\">int</span> ib <span class=\"token operator\">=</span> <span class=\"token function\">min</span><span class=\"token punctuation\">(</span>m <span class=\"token operator\">-</span> i<span class=\"token punctuation\">,</span> mc<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"73\"></td><td><pre>      <span class=\"token function\">InnerKernel_SSE</span><span class=\"token punctuation\">(</span>ib<span class=\"token punctuation\">,</span> n<span class=\"token punctuation\">,</span> pb<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span><span class=\"token function\">A</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">,</span> p<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> lda<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span><span class=\"token function\">B</span><span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> ldb<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span><span class=\"token function\">C</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> ldc<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"74\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"75\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"76\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"77\"></td><td><pre></pre></td></tr><tr><td data-num=\"78\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">GemmAccelerateSimd</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"79\"></td><td><pre>    <span class=\"token keyword\">int</span> M <span class=\"token operator\">=</span> <span class=\"token number\">16</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"80\"></td><td><pre>    <span class=\"token keyword\">int</span> K <span class=\"token operator\">=</span> <span class=\"token number\">64</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"81\"></td><td><pre>    <span class=\"token keyword\">int</span> N <span class=\"token operator\">=</span> <span class=\"token number\">16</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"82\"></td><td><pre>    <span class=\"token keyword\">float</span><span class=\"token operator\">*</span> MatriA <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token function\">malloc</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span><span class=\"token punctuation\">)</span><span class=\"token operator\">*</span> M<span class=\"token operator\">*</span>K<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"83\"></td><td><pre>    <span class=\"token keyword\">float</span><span class=\"token operator\">*</span> MatriB <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token function\">malloc</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span><span class=\"token punctuation\">)</span><span class=\"token operator\">*</span> K<span class=\"token operator\">*</span>N<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"84\"></td><td><pre>    <span class=\"token keyword\">float</span><span class=\"token operator\">*</span> MatriC <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token function\">malloc</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span><span class=\"token punctuation\">)</span><span class=\"token operator\">*</span> M<span class=\"token operator\">*</span>N<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"85\"></td><td><pre>    <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> index<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span> index<span class=\"token operator\">&lt;</span>M<span class=\"token operator\">*</span>K<span class=\"token punctuation\">;</span> index<span class=\"token operator\">&lt;</span>M<span class=\"token operator\">*</span>K<span class=\"token punctuation\">;</span> index<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"86\"></td><td><pre>        MatriA<span class=\"token punctuation\">[</span>index<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"87\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"88\"></td><td><pre>    <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> index<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span> index<span class=\"token operator\">&lt;</span>K<span class=\"token operator\">*</span>N<span class=\"token punctuation\">;</span> index<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"89\"></td><td><pre>        MatriB<span class=\"token punctuation\">[</span>index<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"90\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"91\"></td><td><pre>    <span class=\"token function\">MY_MMult_4x4_11_SSE</span><span class=\"token punctuation\">(</span>M<span class=\"token punctuation\">,</span>N<span class=\"token punctuation\">,</span>K<span class=\"token punctuation\">,</span>MatriA<span class=\"token punctuation\">,</span>K<span class=\"token punctuation\">,</span>MatriB<span class=\"token punctuation\">,</span>N<span class=\"token punctuation\">,</span>MatriC<span class=\"token punctuation\">,</span>N<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"92\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h1 id=\"8-数据pack\"><a class=\"anchor\" href=\"#8-数据pack\">#</a> 8. 数据 Pack</h1>\n<p>在上面的优化中可以发现，在矩阵乘法的计算中，无论是行主序还是列主序，始终有一个矩阵的内存是没办法连续访问的。为了改善这个情况，可以执行数据 Pack，使矩阵 A 和矩阵 B 的内存变成连续的。</p>\n<p>下面代码，在矩阵运算之前将矩阵 B 按照访问顺序重新排布，存储在 <code>packedB</code>  中。</p>\n<p>是否有速度提升，需要在目标平台上实测，因为算法提升了矩阵运算效率，但是增加了 pack 时间。</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;emmintrin.h></span> <span class=\"token comment\">// SSE2</span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;smmintrin.h></span> <span class=\"token comment\">// SSE4.1, for _mm_dp_ps if needed</span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;stdio.h></span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token comment\">/* Block sizes */</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">mc</span> <span class=\"token expression\"><span class=\"token number\">256</span> </span></span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">kc</span> <span class=\"token expression\"><span class=\"token number\">128</span></span></span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token comment\">/* Create macros so that the matrices are stored in row-major order */</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name function\">A</span><span class=\"token expression\"><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">,</span>j<span class=\"token punctuation\">)</span> a<span class=\"token punctuation\">[</span> <span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span><span class=\"token operator\">*</span>lda <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span>j<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">]</span></span></span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name function\">B</span><span class=\"token expression\"><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">,</span>j<span class=\"token punctuation\">)</span> b<span class=\"token punctuation\">[</span> <span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span><span class=\"token operator\">*</span>ldb <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span>j<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">]</span></span></span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name function\">C</span><span class=\"token expression\"><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">,</span>j<span class=\"token punctuation\">)</span> c<span class=\"token punctuation\">[</span> <span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span><span class=\"token operator\">*</span>ldc <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span>j<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">]</span></span></span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name function\">min</span><span class=\"token expression\"><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">,</span> j<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;</span> <span class=\"token punctuation\">(</span>j<span class=\"token punctuation\">)</span> <span class=\"token operator\">?</span> <span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span>j<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></span></span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token comment\">/* Routine for computing C = A * B + C */</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre></pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">PackMatrixB_SSE</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> k<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> <span class=\"token operator\">*</span>b<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> ldb<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> <span class=\"token operator\">*</span>b_to<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>  <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> j <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> j <span class=\"token operator\">&lt;</span> k<span class=\"token punctuation\">;</span> <span class=\"token operator\">++</span>j<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    <span class=\"token keyword\">float</span> <span class=\"token operator\">*</span>b_ij_pntr <span class=\"token operator\">=</span> <span class=\"token operator\">&amp;</span><span class=\"token function\">B</span><span class=\"token punctuation\">(</span>j<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    <span class=\"token operator\">*</span>b_to<span class=\"token operator\">++</span> <span class=\"token operator\">=</span> b_ij_pntr<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    <span class=\"token operator\">*</span>b_to<span class=\"token operator\">++</span> <span class=\"token operator\">=</span> b_ij_pntr<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    <span class=\"token operator\">*</span>b_to<span class=\"token operator\">++</span> <span class=\"token operator\">=</span> b_ij_pntr<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>    <span class=\"token operator\">*</span>b_to<span class=\"token operator\">++</span> <span class=\"token operator\">=</span> b_ij_pntr<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre></pre></td></tr><tr><td data-num=\"29\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">AddDot4x4_SSE</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> k<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> <span class=\"token operator\">*</span>a<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> lda<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> <span class=\"token operator\">*</span>b<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> ldb<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> <span class=\"token operator\">*</span>c<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> ldc<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>  <span class=\"token comment\">/* Point to the current elements in the four rows of A */</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>  <span class=\"token keyword\">float</span> <span class=\"token operator\">*</span>a_0p_pntr <span class=\"token operator\">=</span> <span class=\"token operator\">&amp;</span><span class=\"token function\">A</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>  <span class=\"token keyword\">float</span> <span class=\"token operator\">*</span>a_1p_pntr <span class=\"token operator\">=</span> <span class=\"token operator\">&amp;</span><span class=\"token function\">A</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>  <span class=\"token keyword\">float</span> <span class=\"token operator\">*</span>a_2p_pntr <span class=\"token operator\">=</span> <span class=\"token operator\">&amp;</span><span class=\"token function\">A</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>  <span class=\"token keyword\">float</span> <span class=\"token operator\">*</span>a_3p_pntr <span class=\"token operator\">=</span> <span class=\"token operator\">&amp;</span><span class=\"token function\">A</span><span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>  __m128 c_0p_sum <span class=\"token operator\">=</span> <span class=\"token function\">_mm_setzero_ps</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>  __m128 c_1p_sum <span class=\"token operator\">=</span> <span class=\"token function\">_mm_setzero_ps</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>  __m128 c_2p_sum <span class=\"token operator\">=</span> <span class=\"token function\">_mm_setzero_ps</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>  __m128 c_3p_sum <span class=\"token operator\">=</span> <span class=\"token function\">_mm_setzero_ps</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>  <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> p <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> p <span class=\"token operator\">&lt;</span> k<span class=\"token punctuation\">;</span> <span class=\"token operator\">++</span>p<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>    __m128 b_reg <span class=\"token operator\">=</span> <span class=\"token function\">_mm_loadu_ps</span><span class=\"token punctuation\">(</span>b<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// Load 4 floats from b</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>    b <span class=\"token operator\">+=</span> <span class=\"token number\">4</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>    <span class=\"token keyword\">float</span> a_0p_reg <span class=\"token operator\">=</span> <span class=\"token operator\">*</span>a_0p_pntr<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>    <span class=\"token keyword\">float</span> a_1p_reg <span class=\"token operator\">=</span> <span class=\"token operator\">*</span>a_1p_pntr<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>    <span class=\"token keyword\">float</span> a_2p_reg <span class=\"token operator\">=</span> <span class=\"token operator\">*</span>a_2p_pntr<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>    <span class=\"token keyword\">float</span> a_3p_reg <span class=\"token operator\">=</span> <span class=\"token operator\">*</span>a_3p_pntr<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>    c_0p_sum <span class=\"token operator\">=</span> <span class=\"token function\">_mm_add_ps</span><span class=\"token punctuation\">(</span>c_0p_sum<span class=\"token punctuation\">,</span> <span class=\"token function\">_mm_mul_ps</span><span class=\"token punctuation\">(</span>b_reg<span class=\"token punctuation\">,</span> <span class=\"token function\">_mm_set1_ps</span><span class=\"token punctuation\">(</span>a_0p_reg<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>    c_1p_sum <span class=\"token operator\">=</span> <span class=\"token function\">_mm_add_ps</span><span class=\"token punctuation\">(</span>c_1p_sum<span class=\"token punctuation\">,</span> <span class=\"token function\">_mm_mul_ps</span><span class=\"token punctuation\">(</span>b_reg<span class=\"token punctuation\">,</span> <span class=\"token function\">_mm_set1_ps</span><span class=\"token punctuation\">(</span>a_1p_reg<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>    c_2p_sum <span class=\"token operator\">=</span> <span class=\"token function\">_mm_add_ps</span><span class=\"token punctuation\">(</span>c_2p_sum<span class=\"token punctuation\">,</span> <span class=\"token function\">_mm_mul_ps</span><span class=\"token punctuation\">(</span>b_reg<span class=\"token punctuation\">,</span> <span class=\"token function\">_mm_set1_ps</span><span class=\"token punctuation\">(</span>a_2p_reg<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>    c_3p_sum <span class=\"token operator\">=</span> <span class=\"token function\">_mm_add_ps</span><span class=\"token punctuation\">(</span>c_3p_sum<span class=\"token punctuation\">,</span> <span class=\"token function\">_mm_mul_ps</span><span class=\"token punctuation\">(</span>b_reg<span class=\"token punctuation\">,</span> <span class=\"token function\">_mm_set1_ps</span><span class=\"token punctuation\">(</span>a_3p_reg<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>  <span class=\"token comment\">// Store results back into C matrix</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>  <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> row <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> row <span class=\"token operator\">&lt;</span> <span class=\"token number\">4</span><span class=\"token punctuation\">;</span> <span class=\"token operator\">++</span>row<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre>    <span class=\"token keyword\">float</span><span class=\"token operator\">*</span> c_pntr <span class=\"token operator\">=</span> <span class=\"token operator\">&amp;</span><span class=\"token function\">C</span><span class=\"token punctuation\">(</span>row<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre>    __m128 c_reg <span class=\"token operator\">=</span> <span class=\"token function\">_mm_loadu_ps</span><span class=\"token punctuation\">(</span>c_pntr<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre>    <span class=\"token keyword\">switch</span> <span class=\"token punctuation\">(</span>row<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre>      <span class=\"token keyword\">case</span> <span class=\"token number\">0</span><span class=\"token operator\">:</span> c_reg <span class=\"token operator\">=</span> <span class=\"token function\">_mm_add_ps</span><span class=\"token punctuation\">(</span>c_reg<span class=\"token punctuation\">,</span> c_0p_sum<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"62\"></td><td><pre>      <span class=\"token keyword\">case</span> <span class=\"token number\">1</span><span class=\"token operator\">:</span> c_reg <span class=\"token operator\">=</span> <span class=\"token function\">_mm_add_ps</span><span class=\"token punctuation\">(</span>c_reg<span class=\"token punctuation\">,</span> c_1p_sum<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"63\"></td><td><pre>      <span class=\"token keyword\">case</span> <span class=\"token number\">2</span><span class=\"token operator\">:</span> c_reg <span class=\"token operator\">=</span> <span class=\"token function\">_mm_add_ps</span><span class=\"token punctuation\">(</span>c_reg<span class=\"token punctuation\">,</span> c_2p_sum<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"64\"></td><td><pre>      <span class=\"token keyword\">case</span> <span class=\"token number\">3</span><span class=\"token operator\">:</span> c_reg <span class=\"token operator\">=</span> <span class=\"token function\">_mm_add_ps</span><span class=\"token punctuation\">(</span>c_reg<span class=\"token punctuation\">,</span> c_3p_sum<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"65\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"66\"></td><td><pre>    <span class=\"token function\">_mm_storeu_ps</span><span class=\"token punctuation\">(</span>c_pntr<span class=\"token punctuation\">,</span> c_reg<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"67\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"68\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"69\"></td><td><pre></pre></td></tr><tr><td data-num=\"70\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">InnerKernel_SSE</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> m<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> n<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> k<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> <span class=\"token operator\">*</span>a<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> lda<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> <span class=\"token operator\">*</span>b<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> ldb<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> <span class=\"token operator\">*</span>c<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> ldc<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"71\"></td><td><pre>  <span class=\"token keyword\">int</span> i<span class=\"token punctuation\">,</span> j<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"72\"></td><td><pre>  <span class=\"token keyword\">float</span> packedB<span class=\"token punctuation\">[</span>k <span class=\"token operator\">*</span> n<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"73\"></td><td><pre></pre></td></tr><tr><td data-num=\"74\"></td><td><pre>  <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span>j <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> j <span class=\"token operator\">&lt;</span> n<span class=\"token punctuation\">;</span> j <span class=\"token operator\">+=</span> <span class=\"token number\">4</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token comment\">/* Loop over the columns of C, unrolled by 4 */</span></pre></td></tr><tr><td data-num=\"75\"></td><td><pre>    <span class=\"token function\">PackMatrixB_SSE</span><span class=\"token punctuation\">(</span>k<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span><span class=\"token function\">B</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> j<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> ldb<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>packedB<span class=\"token punctuation\">[</span>j <span class=\"token operator\">*</span> k<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"76\"></td><td><pre>    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span>i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> m<span class=\"token punctuation\">;</span> i <span class=\"token operator\">+=</span> <span class=\"token number\">4</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token comment\">/* Loop over the rows of C */</span></pre></td></tr><tr><td data-num=\"77\"></td><td><pre>      <span class=\"token function\">AddDot4x4_SSE</span><span class=\"token punctuation\">(</span>k<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span><span class=\"token function\">A</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> lda<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>packedB<span class=\"token punctuation\">[</span>j <span class=\"token operator\">*</span> k<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span><span class=\"token function\">C</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">,</span> j<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> ldc<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"78\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"79\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"80\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"81\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">MY_MMult_4x4_12_SSE</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> m<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> n<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> k<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> <span class=\"token operator\">*</span>a<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> lda<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> <span class=\"token operator\">*</span>b<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> ldb<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> <span class=\"token operator\">*</span>c<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> ldc<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"82\"></td><td><pre>  <span class=\"token keyword\">int</span> i<span class=\"token punctuation\">,</span> p<span class=\"token punctuation\">,</span> pb<span class=\"token punctuation\">,</span> ib<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"83\"></td><td><pre>  <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span>p <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> p <span class=\"token operator\">&lt;</span> k<span class=\"token punctuation\">;</span> p <span class=\"token operator\">+=</span> kc<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"84\"></td><td><pre>    pb <span class=\"token operator\">=</span> <span class=\"token function\">min</span><span class=\"token punctuation\">(</span>k <span class=\"token operator\">-</span> p<span class=\"token punctuation\">,</span> kc<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"85\"></td><td><pre>    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span>i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> m<span class=\"token punctuation\">;</span> i <span class=\"token operator\">+=</span> mc<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"86\"></td><td><pre>      ib <span class=\"token operator\">=</span> <span class=\"token function\">min</span><span class=\"token punctuation\">(</span>m <span class=\"token operator\">-</span> i<span class=\"token punctuation\">,</span> mc<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"87\"></td><td><pre>      <span class=\"token function\">InnerKernel_SSE</span><span class=\"token punctuation\">(</span>ib<span class=\"token punctuation\">,</span> n<span class=\"token punctuation\">,</span> pb<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span><span class=\"token function\">A</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">,</span> p<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> lda<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span><span class=\"token function\">B</span><span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> ldb<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span><span class=\"token function\">C</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> ldc<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"88\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"89\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"90\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"91\"></td><td><pre></pre></td></tr><tr><td data-num=\"92\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">GemmAccelerateSimd</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"93\"></td><td><pre>    <span class=\"token keyword\">int</span> M <span class=\"token operator\">=</span> <span class=\"token number\">16</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"94\"></td><td><pre>    <span class=\"token keyword\">int</span> K <span class=\"token operator\">=</span> <span class=\"token number\">64</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"95\"></td><td><pre>    <span class=\"token keyword\">int</span> N <span class=\"token operator\">=</span> <span class=\"token number\">16</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"96\"></td><td><pre>    <span class=\"token keyword\">float</span><span class=\"token operator\">*</span> MatriA <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token function\">malloc</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span><span class=\"token punctuation\">)</span><span class=\"token operator\">*</span> M<span class=\"token operator\">*</span>K<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"97\"></td><td><pre>    <span class=\"token keyword\">float</span><span class=\"token operator\">*</span> MatriB <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token function\">malloc</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span><span class=\"token punctuation\">)</span><span class=\"token operator\">*</span> K<span class=\"token operator\">*</span>N<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"98\"></td><td><pre>    <span class=\"token keyword\">float</span><span class=\"token operator\">*</span> MatriC <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token function\">malloc</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span><span class=\"token punctuation\">)</span><span class=\"token operator\">*</span> M<span class=\"token operator\">*</span>N<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"99\"></td><td><pre>    <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> index<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span> index<span class=\"token operator\">&lt;</span>M<span class=\"token operator\">*</span>K<span class=\"token punctuation\">;</span> index<span class=\"token operator\">&lt;</span>M<span class=\"token operator\">*</span>K<span class=\"token punctuation\">;</span> index<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"100\"></td><td><pre>        MatriA<span class=\"token punctuation\">[</span>index<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"101\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"102\"></td><td><pre>    <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> index<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span> index<span class=\"token operator\">&lt;</span>K<span class=\"token operator\">*</span>N<span class=\"token punctuation\">;</span> index<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"103\"></td><td><pre>        MatriB<span class=\"token punctuation\">[</span>index<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"104\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"105\"></td><td><pre>    <span class=\"token function\">MY_MMult_4x4_12_SSE</span><span class=\"token punctuation\">(</span>M<span class=\"token punctuation\">,</span>N<span class=\"token punctuation\">,</span>K<span class=\"token punctuation\">,</span>MatriA<span class=\"token punctuation\">,</span>K<span class=\"token punctuation\">,</span>MatriB<span class=\"token punctuation\">,</span>N<span class=\"token punctuation\">,</span>MatriC<span class=\"token punctuation\">,</span>N<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"106\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>#9. 进一步 pack</p>\n<p>将 A 和 B 两个矩阵都进行 pack。</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;emmintrin.h></span> <span class=\"token comment\">// SSE2</span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;smmintrin.h></span> <span class=\"token comment\">// SSE4.1, for _mm_dp_ps if needed</span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;stdio.h></span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token comment\">/* Block sizes */</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">mc</span> <span class=\"token expression\"><span class=\"token number\">256</span></span></span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">kc</span> <span class=\"token expression\"><span class=\"token number\">128</span></span></span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token comment\">/* Create macros so that the matrices are stored in row-major order */</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name function\">A</span><span class=\"token expression\"><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">,</span>j<span class=\"token punctuation\">)</span> a<span class=\"token punctuation\">[</span> <span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span><span class=\"token operator\">*</span>lda <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span>j<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">]</span></span></span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name function\">B</span><span class=\"token expression\"><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">,</span>j<span class=\"token punctuation\">)</span> b<span class=\"token punctuation\">[</span> <span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span><span class=\"token operator\">*</span>ldb <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span>j<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">]</span></span></span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name function\">C</span><span class=\"token expression\"><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">,</span>j<span class=\"token punctuation\">)</span> c<span class=\"token punctuation\">[</span> <span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span><span class=\"token operator\">*</span>ldc <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span>j<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">]</span></span></span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name function\">min</span><span class=\"token expression\"><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">,</span> j<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;</span> <span class=\"token punctuation\">(</span>j<span class=\"token punctuation\">)</span> <span class=\"token operator\">?</span> <span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span>j<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></span></span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token comment\">/* Routine for computing C = A * B + C */</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre></pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">PackMatrixB_SSE</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> k<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> <span class=\"token operator\">*</span>b<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> ldb<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> <span class=\"token operator\">*</span>b_to<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>  <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> j <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> j <span class=\"token operator\">&lt;</span> k<span class=\"token punctuation\">;</span> <span class=\"token operator\">++</span>j<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    <span class=\"token keyword\">float</span> <span class=\"token operator\">*</span>b_ij_pntr <span class=\"token operator\">=</span> <span class=\"token operator\">&amp;</span><span class=\"token function\">B</span><span class=\"token punctuation\">(</span>j<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    <span class=\"token operator\">*</span>b_to<span class=\"token operator\">++</span> <span class=\"token operator\">=</span> b_ij_pntr<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    <span class=\"token operator\">*</span>b_to<span class=\"token operator\">++</span> <span class=\"token operator\">=</span> b_ij_pntr<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    <span class=\"token operator\">*</span>b_to<span class=\"token operator\">++</span> <span class=\"token operator\">=</span> b_ij_pntr<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>    <span class=\"token operator\">*</span>b_to<span class=\"token operator\">++</span> <span class=\"token operator\">=</span> b_ij_pntr<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre></pre></td></tr><tr><td data-num=\"29\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">PackMatrixA_SSE</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> k<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> <span class=\"token operator\">*</span>a<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> lda<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> <span class=\"token operator\">*</span>a_to<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>  <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> k<span class=\"token punctuation\">;</span> <span class=\"token operator\">++</span>i<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>    <span class=\"token operator\">*</span>a_to<span class=\"token operator\">++</span> <span class=\"token operator\">=</span> <span class=\"token function\">A</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>    <span class=\"token operator\">*</span>a_to<span class=\"token operator\">++</span> <span class=\"token operator\">=</span> <span class=\"token function\">A</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>    <span class=\"token operator\">*</span>a_to<span class=\"token operator\">++</span> <span class=\"token operator\">=</span> <span class=\"token function\">A</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>    <span class=\"token operator\">*</span>a_to<span class=\"token operator\">++</span> <span class=\"token operator\">=</span> <span class=\"token function\">A</span><span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span> i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">AddDot4x4_SSE</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> k<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> <span class=\"token operator\">*</span>a<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> lda<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> <span class=\"token operator\">*</span>b<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> ldb<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> <span class=\"token operator\">*</span>c<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> ldc<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>  __m128 c_0p_sum <span class=\"token operator\">=</span> <span class=\"token function\">_mm_setzero_ps</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>  __m128 c_1p_sum <span class=\"token operator\">=</span> <span class=\"token function\">_mm_setzero_ps</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>  __m128 c_2p_sum <span class=\"token operator\">=</span> <span class=\"token function\">_mm_setzero_ps</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>  __m128 c_3p_sum <span class=\"token operator\">=</span> <span class=\"token function\">_mm_setzero_ps</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>  <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> p <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> p <span class=\"token operator\">&lt;</span> k<span class=\"token punctuation\">;</span> <span class=\"token operator\">++</span>p<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>    __m128 b_reg <span class=\"token operator\">=</span> <span class=\"token function\">_mm_loadu_ps</span><span class=\"token punctuation\">(</span>b<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// Load 4 floats from b</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>    b <span class=\"token operator\">+=</span> <span class=\"token number\">4</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>    __m128 a_reg <span class=\"token operator\">=</span> <span class=\"token function\">_mm_loadu_ps</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// Load 4 floats from a</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>    a <span class=\"token operator\">+=</span> <span class=\"token number\">4</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>    c_0p_sum <span class=\"token operator\">=</span> <span class=\"token function\">_mm_add_ps</span><span class=\"token punctuation\">(</span>c_0p_sum<span class=\"token punctuation\">,</span> <span class=\"token function\">_mm_mul_ps</span><span class=\"token punctuation\">(</span>b_reg<span class=\"token punctuation\">,</span> <span class=\"token function\">_mm_shuffle_ps</span><span class=\"token punctuation\">(</span>a_reg<span class=\"token punctuation\">,</span> a_reg<span class=\"token punctuation\">,</span> <span class=\"token function\">_MM_SHUFFLE</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>    c_1p_sum <span class=\"token operator\">=</span> <span class=\"token function\">_mm_add_ps</span><span class=\"token punctuation\">(</span>c_1p_sum<span class=\"token punctuation\">,</span> <span class=\"token function\">_mm_mul_ps</span><span class=\"token punctuation\">(</span>b_reg<span class=\"token punctuation\">,</span> <span class=\"token function\">_mm_shuffle_ps</span><span class=\"token punctuation\">(</span>a_reg<span class=\"token punctuation\">,</span> a_reg<span class=\"token punctuation\">,</span> <span class=\"token function\">_MM_SHUFFLE</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>    c_2p_sum <span class=\"token operator\">=</span> <span class=\"token function\">_mm_add_ps</span><span class=\"token punctuation\">(</span>c_2p_sum<span class=\"token punctuation\">,</span> <span class=\"token function\">_mm_mul_ps</span><span class=\"token punctuation\">(</span>b_reg<span class=\"token punctuation\">,</span> <span class=\"token function\">_mm_shuffle_ps</span><span class=\"token punctuation\">(</span>a_reg<span class=\"token punctuation\">,</span> a_reg<span class=\"token punctuation\">,</span> <span class=\"token function\">_MM_SHUFFLE</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>    c_3p_sum <span class=\"token operator\">=</span> <span class=\"token function\">_mm_add_ps</span><span class=\"token punctuation\">(</span>c_3p_sum<span class=\"token punctuation\">,</span> <span class=\"token function\">_mm_mul_ps</span><span class=\"token punctuation\">(</span>b_reg<span class=\"token punctuation\">,</span> <span class=\"token function\">_mm_shuffle_ps</span><span class=\"token punctuation\">(</span>a_reg<span class=\"token punctuation\">,</span> a_reg<span class=\"token punctuation\">,</span> <span class=\"token function\">_MM_SHUFFLE</span><span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>  <span class=\"token comment\">// Store results back into C matrix</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>  <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> row <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> row <span class=\"token operator\">&lt;</span> <span class=\"token number\">4</span><span class=\"token punctuation\">;</span> <span class=\"token operator\">++</span>row<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre>    <span class=\"token keyword\">float</span><span class=\"token operator\">*</span> c_pntr <span class=\"token operator\">=</span> <span class=\"token operator\">&amp;</span><span class=\"token function\">C</span><span class=\"token punctuation\">(</span>row<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre>    __m128 c_reg <span class=\"token operator\">=</span> <span class=\"token function\">_mm_loadu_ps</span><span class=\"token punctuation\">(</span>c_pntr<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre>    <span class=\"token keyword\">switch</span> <span class=\"token punctuation\">(</span>row<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre>      <span class=\"token keyword\">case</span> <span class=\"token number\">0</span><span class=\"token operator\">:</span> c_reg <span class=\"token operator\">=</span> <span class=\"token function\">_mm_add_ps</span><span class=\"token punctuation\">(</span>c_reg<span class=\"token punctuation\">,</span> c_0p_sum<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"62\"></td><td><pre>      <span class=\"token keyword\">case</span> <span class=\"token number\">1</span><span class=\"token operator\">:</span> c_reg <span class=\"token operator\">=</span> <span class=\"token function\">_mm_add_ps</span><span class=\"token punctuation\">(</span>c_reg<span class=\"token punctuation\">,</span> c_1p_sum<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"63\"></td><td><pre>      <span class=\"token keyword\">case</span> <span class=\"token number\">2</span><span class=\"token operator\">:</span> c_reg <span class=\"token operator\">=</span> <span class=\"token function\">_mm_add_ps</span><span class=\"token punctuation\">(</span>c_reg<span class=\"token punctuation\">,</span> c_2p_sum<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"64\"></td><td><pre>      <span class=\"token keyword\">case</span> <span class=\"token number\">3</span><span class=\"token operator\">:</span> c_reg <span class=\"token operator\">=</span> <span class=\"token function\">_mm_add_ps</span><span class=\"token punctuation\">(</span>c_reg<span class=\"token punctuation\">,</span> c_3p_sum<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"65\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"66\"></td><td><pre>    <span class=\"token function\">_mm_storeu_ps</span><span class=\"token punctuation\">(</span>c_pntr<span class=\"token punctuation\">,</span> c_reg<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"67\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"68\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"69\"></td><td><pre></pre></td></tr><tr><td data-num=\"70\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">InnerKernel_SSE</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> m<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> n<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> k<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> <span class=\"token operator\">*</span>a<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> lda<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> <span class=\"token operator\">*</span>b<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> ldb<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> <span class=\"token operator\">*</span>c<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> ldc<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"71\"></td><td><pre>  <span class=\"token keyword\">int</span> i<span class=\"token punctuation\">,</span> j<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"72\"></td><td><pre>  <span class=\"token keyword\">float</span> packedA<span class=\"token punctuation\">[</span>m <span class=\"token operator\">*</span> k<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"73\"></td><td><pre>  <span class=\"token keyword\">float</span> packedB<span class=\"token punctuation\">[</span>k <span class=\"token operator\">*</span> n<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"74\"></td><td><pre></pre></td></tr><tr><td data-num=\"75\"></td><td><pre>  <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span>j <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> j <span class=\"token operator\">&lt;</span> n<span class=\"token punctuation\">;</span> j <span class=\"token operator\">+=</span> <span class=\"token number\">4</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token comment\">/* Loop over the columns of C, unrolled by 4 */</span></pre></td></tr><tr><td data-num=\"76\"></td><td><pre>    <span class=\"token function\">PackMatrixB_SSE</span><span class=\"token punctuation\">(</span>k<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span><span class=\"token function\">B</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> j<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> ldb<span class=\"token punctuation\">,</span> packedB <span class=\"token operator\">+</span> j <span class=\"token operator\">*</span> k<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"77\"></td><td><pre>    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span>i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> m<span class=\"token punctuation\">;</span> i <span class=\"token operator\">+=</span> <span class=\"token number\">4</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token comment\">/* Loop over the rows of C */</span></pre></td></tr><tr><td data-num=\"78\"></td><td><pre>      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0</span> <span class=\"token operator\">==</span> <span class=\"token punctuation\">(</span>j <span class=\"token operator\">%</span> <span class=\"token number\">4</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"79\"></td><td><pre>        <span class=\"token function\">PackMatrixA_SSE</span><span class=\"token punctuation\">(</span>k<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span><span class=\"token function\">A</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> lda<span class=\"token punctuation\">,</span> packedA <span class=\"token operator\">+</span> i <span class=\"token operator\">*</span> k<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"80\"></td><td><pre>      <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"81\"></td><td><pre>      <span class=\"token function\">AddDot4x4_SSE</span><span class=\"token punctuation\">(</span>k<span class=\"token punctuation\">,</span> packedA <span class=\"token operator\">+</span> i <span class=\"token operator\">*</span> k<span class=\"token punctuation\">,</span> k<span class=\"token punctuation\">,</span> packedB <span class=\"token operator\">+</span> j <span class=\"token operator\">*</span> k<span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span><span class=\"token function\">C</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">,</span> j<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> ldc<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"82\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"83\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"84\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"85\"></td><td><pre></pre></td></tr><tr><td data-num=\"86\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">MY_MMult_4x4_13_SSE</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> m<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> n<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> k<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> <span class=\"token operator\">*</span>a<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> lda<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> <span class=\"token operator\">*</span>b<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> ldb<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> <span class=\"token operator\">*</span>c<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> ldc<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"87\"></td><td><pre>  <span class=\"token keyword\">int</span> i<span class=\"token punctuation\">,</span> p<span class=\"token punctuation\">,</span> pb<span class=\"token punctuation\">,</span> ib<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"88\"></td><td><pre>  <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span>p <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> p <span class=\"token operator\">&lt;</span> k<span class=\"token punctuation\">;</span> p <span class=\"token operator\">+=</span> kc<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"89\"></td><td><pre>    pb <span class=\"token operator\">=</span> <span class=\"token function\">min</span><span class=\"token punctuation\">(</span>k <span class=\"token operator\">-</span> p<span class=\"token punctuation\">,</span> kc<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"90\"></td><td><pre>    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span>i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> m<span class=\"token punctuation\">;</span> i <span class=\"token operator\">+=</span> mc<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"91\"></td><td><pre>      ib <span class=\"token operator\">=</span> <span class=\"token function\">min</span><span class=\"token punctuation\">(</span>m <span class=\"token operator\">-</span> i<span class=\"token punctuation\">,</span> mc<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"92\"></td><td><pre>      <span class=\"token function\">InnerKernel_SSE</span><span class=\"token punctuation\">(</span>ib<span class=\"token punctuation\">,</span> n<span class=\"token punctuation\">,</span> pb<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span><span class=\"token function\">A</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">,</span> p<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> lda<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span><span class=\"token function\">B</span><span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> ldb<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span><span class=\"token function\">C</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> ldc<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"93\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"94\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"95\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"96\"></td><td><pre></pre></td></tr><tr><td data-num=\"97\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">GemmAccelerateSimd</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"98\"></td><td><pre>    <span class=\"token keyword\">int</span> M <span class=\"token operator\">=</span> <span class=\"token number\">16</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"99\"></td><td><pre>    <span class=\"token keyword\">int</span> K <span class=\"token operator\">=</span> <span class=\"token number\">64</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"100\"></td><td><pre>    <span class=\"token keyword\">int</span> N <span class=\"token operator\">=</span> <span class=\"token number\">16</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"101\"></td><td><pre>    <span class=\"token keyword\">float</span><span class=\"token operator\">*</span> MatriA <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token function\">malloc</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span><span class=\"token punctuation\">)</span><span class=\"token operator\">*</span> M<span class=\"token operator\">*</span>K<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"102\"></td><td><pre>    <span class=\"token keyword\">float</span><span class=\"token operator\">*</span> MatriB <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token function\">malloc</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span><span class=\"token punctuation\">)</span><span class=\"token operator\">*</span> K<span class=\"token operator\">*</span>N<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"103\"></td><td><pre>    <span class=\"token keyword\">float</span><span class=\"token operator\">*</span> MatriC <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token function\">malloc</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span><span class=\"token punctuation\">)</span><span class=\"token operator\">*</span> M<span class=\"token operator\">*</span>N<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"104\"></td><td><pre>    <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> index<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span> index<span class=\"token operator\">&lt;</span>M<span class=\"token operator\">*</span>K<span class=\"token punctuation\">;</span> index<span class=\"token operator\">&lt;</span>M<span class=\"token operator\">*</span>K<span class=\"token punctuation\">;</span> index<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"105\"></td><td><pre>        MatriA<span class=\"token punctuation\">[</span>index<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"106\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"107\"></td><td><pre>    <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> index<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span> index<span class=\"token operator\">&lt;</span>K<span class=\"token operator\">*</span>N<span class=\"token punctuation\">;</span> index<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"108\"></td><td><pre>        MatriB<span class=\"token punctuation\">[</span>index<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"109\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"110\"></td><td><pre>    <span class=\"token function\">MY_MMult_4x4_13_SSE</span><span class=\"token punctuation\">(</span>M<span class=\"token punctuation\">,</span>N<span class=\"token punctuation\">,</span>K<span class=\"token punctuation\">,</span>MatriA<span class=\"token punctuation\">,</span>K<span class=\"token punctuation\">,</span>MatriB<span class=\"token punctuation\">,</span>N<span class=\"token punctuation\">,</span>MatriC<span class=\"token punctuation\">,</span>N<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"111\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h1 id=\"后记\"><a class=\"anchor\" href=\"#后记\">#</a> 后记</h1>\n<p>本博客目前以及可预期的将来都不会支持评论功能。各位大侠如若有指教和问题，可以在我的 <a href=\"https://github.com/ForCheetah/ForCheetah.github.io\">github 项目</a> 或随便一个项目下提出 issue，并指明哪一篇博客，我看到一定及时回复！</p>\n",
            "tags": [
                "conv",
                "gemm"
            ]
        }
    ]
}