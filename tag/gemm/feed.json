{
    "version": "https://jsonfeed.org/version/1",
    "title": "Пусть этот камень будет более крепким, чем человек • All posts by \"gemm\" tag",
    "description": "有自己的博客很帅，但是我很懒，要命！！！",
    "home_page_url": "https://forcheetah.github.io",
    "items": [
        {
            "id": "https://forcheetah.github.io/2024/12/20/conv5/",
            "url": "https://forcheetah.github.io/2024/12/20/conv5/",
            "title": "【gemm】Gemm计算加速",
            "date_published": "2024-12-20T14:06:41.237Z",
            "content_html": "<h1 id=\"前言\"><a class=\"anchor\" href=\"#前言\">#</a> 前言</h1>\n<p>本篇文章简单介绍矩阵乘的加速方法，以学习算子加速需要注意的方面。想要学习更多内容可以参考<a href=\"https://zhuanlan.zhihu.com/p/65436463\">《OpenBLAS gemm 从零入门》</a>，<a href=\"https://github.com/flame/blislab\">《BLISlab: A Sandbox for Optimizing GEMM》</a>，<a href=\"https://mp.weixin.qq.com/s/w0YCm8TEPxFg0CR6g4A28w\">道阻且长_再探矩阵乘法优化</a>，<a href=\"https://github.com/BBuf/how-to-optimize-gemm\">《How To Optimize GEMM》</a>等项目或文章。</p>\n<p>作为初学者，错误在所难免，还望不吝赐教。</p>\n<h1 id=\"1基准算法\"><a class=\"anchor\" href=\"#1基准算法\">#</a> 1. 基准算法</h1>\n<p><img loading=\"lazy\" data-src=\"1734702937283.jpg\" alt=\"1.基准算法\"></p>\n<p>矩阵乘运算的基准算法，未经过任何优化。矩阵以行主序进行排布， 针对 X86 平台。矩阵 C= A * B，A 矩阵为 (M,K)， B 矩阵为 (K,N)。</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;stdio.h></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name function\">A</span><span class=\"token expression\"><span class=\"token punctuation\">(</span> i<span class=\"token punctuation\">,</span> j <span class=\"token punctuation\">)</span> a<span class=\"token punctuation\">[</span> <span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span><span class=\"token operator\">*</span>lda <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span>j<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">]</span></span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name function\">B</span><span class=\"token expression\"><span class=\"token punctuation\">(</span> i<span class=\"token punctuation\">,</span> j <span class=\"token punctuation\">)</span> b<span class=\"token punctuation\">[</span> <span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span><span class=\"token operator\">*</span>ldb <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span>j<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">]</span></span></span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name function\">C</span><span class=\"token expression\"><span class=\"token punctuation\">(</span> i<span class=\"token punctuation\">,</span> j <span class=\"token punctuation\">)</span> c<span class=\"token punctuation\">[</span> <span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span><span class=\"token operator\">*</span>ldc <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span>j<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">]</span></span></span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token comment\">// gemm C = A * B + C</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">MatrixMultiply</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> m<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> n<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> k<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> <span class=\"token operator\">*</span>a<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> lda<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> <span class=\"token operator\">*</span>b<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> ldb<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> <span class=\"token operator\">*</span>c<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> ldc<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> m<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> p<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span> p<span class=\"token operator\">&lt;</span>k<span class=\"token punctuation\">;</span> p<span class=\"token operator\">++</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span> </pre></td></tr><tr><td data-num=\"11\"></td><td><pre>            <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> j<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span> j<span class=\"token operator\">&lt;</span>n<span class=\"token punctuation\">;</span> j<span class=\"token operator\">++</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>    </pre></td></tr><tr><td data-num=\"12\"></td><td><pre>                <span class=\"token function\">C</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">,</span> j<span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> <span class=\"token function\">C</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">,</span> j<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token function\">A</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">,</span> p<span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token function\">B</span><span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">,</span> j<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">GemmAccelerate</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    <span class=\"token keyword\">int</span> M <span class=\"token operator\">=</span> <span class=\"token number\">16</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    <span class=\"token keyword\">int</span> K <span class=\"token operator\">=</span> <span class=\"token number\">64</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    <span class=\"token keyword\">int</span> N <span class=\"token operator\">=</span> <span class=\"token number\">16</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    <span class=\"token keyword\">float</span><span class=\"token operator\">*</span> MatriA <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token function\">malloc</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span><span class=\"token punctuation\">)</span><span class=\"token operator\">*</span> M<span class=\"token operator\">*</span>K<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    <span class=\"token keyword\">float</span><span class=\"token operator\">*</span> MatriB <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token function\">malloc</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span><span class=\"token punctuation\">)</span><span class=\"token operator\">*</span> K<span class=\"token operator\">*</span>N<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    <span class=\"token keyword\">float</span><span class=\"token operator\">*</span> MatriC <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token function\">malloc</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span><span class=\"token punctuation\">)</span><span class=\"token operator\">*</span> M<span class=\"token operator\">*</span>N<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> index<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span> index<span class=\"token operator\">&lt;</span>M<span class=\"token operator\">*</span>K<span class=\"token punctuation\">;</span> index<span class=\"token operator\">&lt;</span>M<span class=\"token operator\">*</span>K<span class=\"token punctuation\">;</span> index<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>        MatriA<span class=\"token punctuation\">[</span>index<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>    <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> index<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span> index<span class=\"token operator\">&lt;</span>K<span class=\"token operator\">*</span>N<span class=\"token punctuation\">;</span> index<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>        MatriB<span class=\"token punctuation\">[</span>index<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>    <span class=\"token function\">MatrixMultiply</span><span class=\"token punctuation\">(</span>M<span class=\"token punctuation\">,</span>N<span class=\"token punctuation\">,</span>K<span class=\"token punctuation\">,</span>MatriA<span class=\"token punctuation\">,</span>K<span class=\"token punctuation\">,</span>MatriB<span class=\"token punctuation\">,</span>N<span class=\"token punctuation\">,</span>MatriC<span class=\"token punctuation\">,</span>N<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h1 id=\"循环展开\"><a class=\"anchor\" href=\"#循环展开\">#</a> 循环展开</h1>\n<p><img loading=\"lazy\" data-src=\"1734703129387.jpg\" alt=\"2.循环展开\"></p>\n<p>引入循环展开（Loop Unrolling）  ，每次 A 矩阵一行和 B 四列进行计算，得到四个结果。<br>\n可以减少循环控制开销：减少了循环条件检查和更新的频率，因为现在每四个元素作为一个批次处理，理论上减少了 75% 的循环控制指令。</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;stdio.h></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name function\">A</span><span class=\"token expression\"><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">,</span>j<span class=\"token punctuation\">)</span> a<span class=\"token punctuation\">[</span> <span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span><span class=\"token operator\">*</span>lda <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span>j<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">]</span></span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name function\">B</span><span class=\"token expression\"><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">,</span>j<span class=\"token punctuation\">)</span> b<span class=\"token punctuation\">[</span> <span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span><span class=\"token operator\">*</span>ldb <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span>j<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">]</span></span></span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name function\">C</span><span class=\"token expression\"><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">,</span>j<span class=\"token punctuation\">)</span> c<span class=\"token punctuation\">[</span> <span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span><span class=\"token operator\">*</span>ldc <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span>j<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">]</span></span></span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name function\">Y</span><span class=\"token expression\"><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span> y<span class=\"token punctuation\">[</span> <span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span><span class=\"token operator\">*</span>incx <span class=\"token punctuation\">]</span></span></span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">AddDot</span><span class=\"token punctuation\">(</span> <span class=\"token keyword\">int</span> k<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> <span class=\"token operator\">*</span>x<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> incx<span class=\"token punctuation\">,</span>  <span class=\"token keyword\">float</span> <span class=\"token operator\">*</span>y<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> <span class=\"token operator\">*</span>gamma <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>  <span class=\"token keyword\">int</span> p<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>  <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span> p<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span> p<span class=\"token operator\">&lt;</span>k<span class=\"token punctuation\">;</span> p<span class=\"token operator\">++</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token operator\">*</span>gamma <span class=\"token operator\">+=</span> x<span class=\"token punctuation\">[</span>p<span class=\"token punctuation\">]</span> <span class=\"token operator\">*</span> <span class=\"token function\">Y</span><span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>     </pre></td></tr><tr><td data-num=\"14\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">MY_MMult2</span><span class=\"token punctuation\">(</span> <span class=\"token keyword\">int</span> m<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> n<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> k<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> <span class=\"token operator\">*</span>a<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> lda<span class=\"token punctuation\">,</span> </pre></td></tr><tr><td data-num=\"18\"></td><td><pre>                <span class=\"token keyword\">float</span> <span class=\"token operator\">*</span>b<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> ldb<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> <span class=\"token operator\">*</span>c<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> ldc <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>  <span class=\"token keyword\">int</span> i<span class=\"token punctuation\">,</span> j<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>  <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span> j<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span> j<span class=\"token operator\">&lt;</span>n<span class=\"token punctuation\">;</span> j<span class=\"token operator\">+=</span><span class=\"token number\">4</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>        <span class=\"token comment\">/* Loop over the columns of C, unrolled by 4 */</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span> i<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">&lt;</span>m<span class=\"token punctuation\">;</span> i<span class=\"token operator\">+=</span><span class=\"token number\">1</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>        <span class=\"token comment\">/* Loop over the rows of C */</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>      <span class=\"token function\">AddDot</span><span class=\"token punctuation\">(</span> k<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span><span class=\"token function\">A</span><span class=\"token punctuation\">(</span> i<span class=\"token punctuation\">,</span><span class=\"token number\">0</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> lda<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span><span class=\"token function\">B</span><span class=\"token punctuation\">(</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>j <span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span><span class=\"token function\">C</span><span class=\"token punctuation\">(</span> i<span class=\"token punctuation\">,</span>j <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>      <span class=\"token function\">AddDot</span><span class=\"token punctuation\">(</span> k<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span><span class=\"token function\">A</span><span class=\"token punctuation\">(</span> i<span class=\"token punctuation\">,</span><span class=\"token number\">0</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> lda<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span><span class=\"token function\">B</span><span class=\"token punctuation\">(</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>j<span class=\"token operator\">+</span><span class=\"token number\">1</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span><span class=\"token function\">C</span><span class=\"token punctuation\">(</span> i<span class=\"token punctuation\">,</span>j<span class=\"token operator\">+</span><span class=\"token number\">1</span> <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>      <span class=\"token function\">AddDot</span><span class=\"token punctuation\">(</span> k<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span><span class=\"token function\">A</span><span class=\"token punctuation\">(</span> i<span class=\"token punctuation\">,</span><span class=\"token number\">0</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> lda<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span><span class=\"token function\">B</span><span class=\"token punctuation\">(</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>j<span class=\"token operator\">+</span><span class=\"token number\">2</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span><span class=\"token function\">C</span><span class=\"token punctuation\">(</span> i<span class=\"token punctuation\">,</span>j<span class=\"token operator\">+</span><span class=\"token number\">2</span> <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>      <span class=\"token function\">AddDot</span><span class=\"token punctuation\">(</span> k<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span><span class=\"token function\">A</span><span class=\"token punctuation\">(</span> i<span class=\"token punctuation\">,</span><span class=\"token number\">0</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> lda<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span><span class=\"token function\">B</span><span class=\"token punctuation\">(</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>j<span class=\"token operator\">+</span><span class=\"token number\">3</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span><span class=\"token function\">C</span><span class=\"token punctuation\">(</span> i<span class=\"token punctuation\">,</span>j<span class=\"token operator\">+</span><span class=\"token number\">3</span> <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre></pre></td></tr><tr><td data-num=\"32\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">GemmAccelerate</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>    <span class=\"token keyword\">int</span> M <span class=\"token operator\">=</span> <span class=\"token number\">16</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>    <span class=\"token keyword\">int</span> K <span class=\"token operator\">=</span> <span class=\"token number\">64</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>    <span class=\"token keyword\">int</span> N <span class=\"token operator\">=</span> <span class=\"token number\">16</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>    <span class=\"token keyword\">float</span><span class=\"token operator\">*</span> MatriA <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token function\">malloc</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span><span class=\"token punctuation\">)</span><span class=\"token operator\">*</span> M<span class=\"token operator\">*</span>K<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>    <span class=\"token keyword\">float</span><span class=\"token operator\">*</span> MatriB <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token function\">malloc</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span><span class=\"token punctuation\">)</span><span class=\"token operator\">*</span> K<span class=\"token operator\">*</span>N<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>    <span class=\"token keyword\">float</span><span class=\"token operator\">*</span> MatriC <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token function\">malloc</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span><span class=\"token punctuation\">)</span><span class=\"token operator\">*</span> M<span class=\"token operator\">*</span>N<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>    <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> index<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span> index<span class=\"token operator\">&lt;</span>M<span class=\"token operator\">*</span>K<span class=\"token punctuation\">;</span> index<span class=\"token operator\">&lt;</span>M<span class=\"token operator\">*</span>K<span class=\"token punctuation\">;</span> index<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>        MatriA<span class=\"token punctuation\">[</span>index<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>    <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> index<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span> index<span class=\"token operator\">&lt;</span>K<span class=\"token operator\">*</span>N<span class=\"token punctuation\">;</span> index<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>        MatriB<span class=\"token punctuation\">[</span>index<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>    <span class=\"token function\">MY_MMult2</span><span class=\"token punctuation\">(</span>M<span class=\"token punctuation\">,</span>N<span class=\"token punctuation\">,</span>K<span class=\"token punctuation\">,</span>MatriA<span class=\"token punctuation\">,</span>K<span class=\"token punctuation\">,</span>MatriB<span class=\"token punctuation\">,</span>N<span class=\"token punctuation\">,</span>MatriC<span class=\"token punctuation\">,</span>N<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h1 id=\"3使用寄存器\"><a class=\"anchor\" href=\"#3使用寄存器\">#</a> 3. 使用寄存器</h1>\n<p>中间计算结果使用寄存器存储，可以减少内存访问次数，可以显著提升性能，因为寄存器访问速度远快于内存访问。</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;stdio.h></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name function\">A</span><span class=\"token expression\"><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">,</span>j<span class=\"token punctuation\">)</span> a<span class=\"token punctuation\">[</span> <span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span><span class=\"token operator\">*</span>lda <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span>j<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">]</span></span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name function\">B</span><span class=\"token expression\"><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">,</span>j<span class=\"token punctuation\">)</span> b<span class=\"token punctuation\">[</span> <span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span><span class=\"token operator\">*</span>ldb <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span>j<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">]</span></span></span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name function\">C</span><span class=\"token expression\"><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">,</span>j<span class=\"token punctuation\">)</span> c<span class=\"token punctuation\">[</span> <span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span><span class=\"token operator\">*</span>ldc <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span>j<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">]</span></span></span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token comment\">/* Routine for computing C = A * B + C */</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">AddDot1x4</span><span class=\"token punctuation\">(</span> <span class=\"token keyword\">int</span> k<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> <span class=\"token operator\">*</span>a<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> lda<span class=\"token punctuation\">,</span>  <span class=\"token keyword\">float</span> <span class=\"token operator\">*</span>b<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> ldb<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> <span class=\"token operator\">*</span>c<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> ldc <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>  <span class=\"token keyword\">int</span> p<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>  <span class=\"token keyword\">register</span> <span class=\"token keyword\">float</span>    c_00_reg<span class=\"token punctuation\">,</span>   c_01_reg<span class=\"token punctuation\">,</span>   c_02_reg<span class=\"token punctuation\">,</span>   c_03_reg<span class=\"token punctuation\">,</span>  a_0p_reg<span class=\"token punctuation\">;</span>    </pre></td></tr><tr><td data-num=\"14\"></td><td><pre>  c_00_reg <span class=\"token operator\">=</span> <span class=\"token number\">0.0</span><span class=\"token punctuation\">;</span> </pre></td></tr><tr><td data-num=\"15\"></td><td><pre>  c_01_reg <span class=\"token operator\">=</span> <span class=\"token number\">0.0</span><span class=\"token punctuation\">;</span> </pre></td></tr><tr><td data-num=\"16\"></td><td><pre>  c_02_reg <span class=\"token operator\">=</span> <span class=\"token number\">0.0</span><span class=\"token punctuation\">;</span> </pre></td></tr><tr><td data-num=\"17\"></td><td><pre>  c_03_reg <span class=\"token operator\">=</span> <span class=\"token number\">0.0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre> </pre></td></tr><tr><td data-num=\"19\"></td><td><pre>  <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span> p<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span> p<span class=\"token operator\">&lt;</span>k<span class=\"token punctuation\">;</span> p<span class=\"token operator\">++</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    a_0p_reg <span class=\"token operator\">=</span> <span class=\"token function\">A</span><span class=\"token punctuation\">(</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> p <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    c_00_reg <span class=\"token operator\">+=</span> a_0p_reg <span class=\"token operator\">*</span> <span class=\"token function\">B</span><span class=\"token punctuation\">(</span> p<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>     </pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    c_01_reg <span class=\"token operator\">+=</span> a_0p_reg <span class=\"token operator\">*</span> <span class=\"token function\">B</span><span class=\"token punctuation\">(</span> p<span class=\"token punctuation\">,</span> <span class=\"token number\">1</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>     </pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    c_02_reg <span class=\"token operator\">+=</span> a_0p_reg <span class=\"token operator\">*</span> <span class=\"token function\">B</span><span class=\"token punctuation\">(</span> p<span class=\"token punctuation\">,</span> <span class=\"token number\">2</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>     </pre></td></tr><tr><td data-num=\"25\"></td><td><pre>    c_03_reg <span class=\"token operator\">+=</span> a_0p_reg <span class=\"token operator\">*</span> <span class=\"token function\">B</span><span class=\"token punctuation\">(</span> p<span class=\"token punctuation\">,</span> <span class=\"token number\">3</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>     </pre></td></tr><tr><td data-num=\"26\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>  <span class=\"token function\">C</span><span class=\"token punctuation\">(</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">)</span> <span class=\"token operator\">+=</span> c_00_reg<span class=\"token punctuation\">;</span> </pre></td></tr><tr><td data-num=\"29\"></td><td><pre>  <span class=\"token function\">C</span><span class=\"token punctuation\">(</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span> <span class=\"token punctuation\">)</span> <span class=\"token operator\">+=</span> c_01_reg<span class=\"token punctuation\">;</span> </pre></td></tr><tr><td data-num=\"30\"></td><td><pre>  <span class=\"token function\">C</span><span class=\"token punctuation\">(</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span> <span class=\"token punctuation\">)</span> <span class=\"token operator\">+=</span> c_02_reg<span class=\"token punctuation\">;</span> </pre></td></tr><tr><td data-num=\"31\"></td><td><pre>  <span class=\"token function\">C</span><span class=\"token punctuation\">(</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span> <span class=\"token punctuation\">)</span> <span class=\"token operator\">+=</span> c_03_reg<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre></pre></td></tr><tr><td data-num=\"34\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">MY_MMult_1x4_6</span><span class=\"token punctuation\">(</span> <span class=\"token keyword\">int</span> m<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> n<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> k<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> <span class=\"token operator\">*</span>a<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> lda<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> <span class=\"token operator\">*</span>b<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> ldb<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> <span class=\"token operator\">*</span>c<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> ldc <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>  <span class=\"token keyword\">int</span> i<span class=\"token punctuation\">,</span> j<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>  <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span> j<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span> j<span class=\"token operator\">&lt;</span>n<span class=\"token punctuation\">;</span> j<span class=\"token operator\">+=</span><span class=\"token number\">4</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>        <span class=\"token comment\">/* Loop over the columns of C, unrolled by 4 */</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span> i<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">&lt;</span>m<span class=\"token punctuation\">;</span> i<span class=\"token operator\">+=</span><span class=\"token number\">1</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>        <span class=\"token comment\">/* Loop over the rows of C */</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>      <span class=\"token function\">AddDot1x4</span><span class=\"token punctuation\">(</span> k<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span><span class=\"token function\">A</span><span class=\"token punctuation\">(</span> i<span class=\"token punctuation\">,</span><span class=\"token number\">0</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> lda<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span><span class=\"token function\">B</span><span class=\"token punctuation\">(</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>j <span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> ldb<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span><span class=\"token function\">C</span><span class=\"token punctuation\">(</span> i<span class=\"token punctuation\">,</span>j <span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> ldc <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre></pre></td></tr><tr><td data-num=\"45\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">GemmAccelerate</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>    <span class=\"token keyword\">int</span> M <span class=\"token operator\">=</span> <span class=\"token number\">16</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>    <span class=\"token keyword\">int</span> K <span class=\"token operator\">=</span> <span class=\"token number\">64</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>    <span class=\"token keyword\">int</span> N <span class=\"token operator\">=</span> <span class=\"token number\">16</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>    <span class=\"token keyword\">float</span><span class=\"token operator\">*</span> MatriA <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token function\">malloc</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span><span class=\"token punctuation\">)</span><span class=\"token operator\">*</span> M<span class=\"token operator\">*</span>K<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>    <span class=\"token keyword\">float</span><span class=\"token operator\">*</span> MatriB <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token function\">malloc</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span><span class=\"token punctuation\">)</span><span class=\"token operator\">*</span> K<span class=\"token operator\">*</span>N<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>    <span class=\"token keyword\">float</span><span class=\"token operator\">*</span> MatriC <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token function\">malloc</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span><span class=\"token punctuation\">)</span><span class=\"token operator\">*</span> M<span class=\"token operator\">*</span>N<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>    <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> index<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span> index<span class=\"token operator\">&lt;</span>M<span class=\"token operator\">*</span>K<span class=\"token punctuation\">;</span> index<span class=\"token operator\">&lt;</span>M<span class=\"token operator\">*</span>K<span class=\"token punctuation\">;</span> index<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>        MatriA<span class=\"token punctuation\">[</span>index<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>    <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> index<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span> index<span class=\"token operator\">&lt;</span>K<span class=\"token operator\">*</span>N<span class=\"token punctuation\">;</span> index<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>        MatriB<span class=\"token punctuation\">[</span>index<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre>    <span class=\"token function\">MY_MMult_1x4_6</span><span class=\"token punctuation\">(</span>M<span class=\"token punctuation\">,</span>N<span class=\"token punctuation\">,</span>K<span class=\"token punctuation\">,</span>MatriA<span class=\"token punctuation\">,</span>K<span class=\"token punctuation\">,</span>MatriB<span class=\"token punctuation\">,</span>N<span class=\"token punctuation\">,</span>MatriC<span class=\"token punctuation\">,</span>N<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h1 id=\"4避免乘法\"><a class=\"anchor\" href=\"#4避免乘法\">#</a> 4. 避免乘法</h1>\n<p><img loading=\"lazy\" data-src=\"1734703236955.jpg\" alt=\"4.避免乘法\"></p>\n<p>本次算法相对上一个，调整了循环展开的矩阵（从矩阵 B 变成了矩阵 A）。最内层循环中的  <code>c_00_reg += a_0p_reg * B( p, 0 );</code>  变成  <code> c_00_reg += b_0p_reg * *ap0_pntr++;</code> ，即用指针的累加替换了原来的 <code>B( p, 0 )</code> ，使得最内层循环减少了 4 个乘法。</p>\n<p>调整循环展开矩阵的原因是 行主序，矩阵 A 在内存中是连续的。</p>\n<p>避免乘法： 通常来讲乘法消耗的时间长于加法，效率差异取决于具体的硬件平台。减少乘法计算量可以提高算法效率。</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;stdio.h></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name function\">A</span><span class=\"token expression\"><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">,</span>j<span class=\"token punctuation\">)</span> a<span class=\"token punctuation\">[</span> <span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span><span class=\"token operator\">*</span>lda <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span>j<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">]</span></span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name function\">B</span><span class=\"token expression\"><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">,</span>j<span class=\"token punctuation\">)</span> b<span class=\"token punctuation\">[</span> <span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span><span class=\"token operator\">*</span>ldb <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span>j<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">]</span></span></span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name function\">C</span><span class=\"token expression\"><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">,</span>j<span class=\"token punctuation\">)</span> c<span class=\"token punctuation\">[</span> <span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span><span class=\"token operator\">*</span>ldc <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span>j<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">]</span></span></span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token comment\">/* Routine for computing C = A * B + C */</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">AddDot1x4</span><span class=\"token punctuation\">(</span> <span class=\"token keyword\">int</span> k<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> <span class=\"token operator\">*</span>a<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> lda<span class=\"token punctuation\">,</span>  <span class=\"token keyword\">float</span> <span class=\"token operator\">*</span>b<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> ldb<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> <span class=\"token operator\">*</span>c<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> ldc <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>  <span class=\"token keyword\">int</span> p<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>  <span class=\"token keyword\">register</span> <span class=\"token keyword\">float</span> </pre></td></tr><tr><td data-num=\"13\"></td><td><pre> c_00_reg<span class=\"token punctuation\">,</span>   c_01_reg<span class=\"token punctuation\">,</span>   c_02_reg<span class=\"token punctuation\">,</span>   c_03_reg<span class=\"token punctuation\">,</span>  b_0p_reg<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>  <span class=\"token keyword\">float</span> </pre></td></tr><tr><td data-num=\"15\"></td><td><pre> <span class=\"token operator\">*</span>ap0_pntr<span class=\"token punctuation\">,</span> <span class=\"token operator\">*</span>ap1_pntr<span class=\"token punctuation\">,</span> <span class=\"token operator\">*</span>ap2_pntr<span class=\"token punctuation\">,</span> <span class=\"token operator\">*</span>ap3_pntr<span class=\"token punctuation\">;</span> </pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    </pre></td></tr><tr><td data-num=\"17\"></td><td><pre>  ap0_pntr <span class=\"token operator\">=</span> <span class=\"token operator\">&amp;</span><span class=\"token function\">A</span><span class=\"token punctuation\">(</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>  ap1_pntr <span class=\"token operator\">=</span> <span class=\"token operator\">&amp;</span><span class=\"token function\">A</span><span class=\"token punctuation\">(</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>  ap2_pntr <span class=\"token operator\">=</span> <span class=\"token operator\">&amp;</span><span class=\"token function\">A</span><span class=\"token punctuation\">(</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>  ap3_pntr <span class=\"token operator\">=</span> <span class=\"token operator\">&amp;</span><span class=\"token function\">A</span><span class=\"token punctuation\">(</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>  c_00_reg <span class=\"token operator\">=</span> <span class=\"token number\">0.0</span><span class=\"token punctuation\">;</span> </pre></td></tr><tr><td data-num=\"23\"></td><td><pre>  c_01_reg <span class=\"token operator\">=</span> <span class=\"token number\">0.0</span><span class=\"token punctuation\">;</span> </pre></td></tr><tr><td data-num=\"24\"></td><td><pre>  c_02_reg <span class=\"token operator\">=</span> <span class=\"token number\">0.0</span><span class=\"token punctuation\">;</span> </pre></td></tr><tr><td data-num=\"25\"></td><td><pre>  c_03_reg <span class=\"token operator\">=</span> <span class=\"token number\">0.0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre> </pre></td></tr><tr><td data-num=\"27\"></td><td><pre>  <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span> p<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span> p<span class=\"token operator\">&lt;</span>k<span class=\"token punctuation\">;</span> p<span class=\"token operator\">++</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>    b_0p_reg <span class=\"token operator\">=</span> <span class=\"token function\">B</span><span class=\"token punctuation\">(</span> p<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>    c_00_reg <span class=\"token operator\">+=</span> b_0p_reg <span class=\"token operator\">*</span> <span class=\"token operator\">*</span>ap0_pntr<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>    c_01_reg <span class=\"token operator\">+=</span> b_0p_reg <span class=\"token operator\">*</span> <span class=\"token operator\">*</span>ap1_pntr<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>    c_02_reg <span class=\"token operator\">+=</span> b_0p_reg <span class=\"token operator\">*</span> <span class=\"token operator\">*</span>ap2_pntr<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>    c_03_reg <span class=\"token operator\">+=</span> b_0p_reg <span class=\"token operator\">*</span> <span class=\"token operator\">*</span>ap3_pntr<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>  <span class=\"token function\">C</span><span class=\"token punctuation\">(</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">)</span> <span class=\"token operator\">+=</span> c_00_reg<span class=\"token punctuation\">;</span> </pre></td></tr><tr><td data-num=\"37\"></td><td><pre>  <span class=\"token function\">C</span><span class=\"token punctuation\">(</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">)</span> <span class=\"token operator\">+=</span> c_01_reg<span class=\"token punctuation\">;</span> </pre></td></tr><tr><td data-num=\"38\"></td><td><pre>  <span class=\"token function\">C</span><span class=\"token punctuation\">(</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">)</span> <span class=\"token operator\">+=</span> c_02_reg<span class=\"token punctuation\">;</span> </pre></td></tr><tr><td data-num=\"39\"></td><td><pre>  <span class=\"token function\">C</span><span class=\"token punctuation\">(</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">)</span> <span class=\"token operator\">+=</span> c_03_reg<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre></pre></td></tr><tr><td data-num=\"42\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">MY_MMult_1x4_7</span><span class=\"token punctuation\">(</span> <span class=\"token keyword\">int</span> m<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> n<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> k<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> <span class=\"token operator\">*</span>a<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> lda<span class=\"token punctuation\">,</span>  <span class=\"token keyword\">float</span> <span class=\"token operator\">*</span>b<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> ldb<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> <span class=\"token operator\">*</span>c<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> ldc <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>  <span class=\"token keyword\">int</span> i<span class=\"token punctuation\">,</span> j<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>  <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span> j<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span> j<span class=\"token operator\">&lt;</span>n<span class=\"token punctuation\">;</span> j<span class=\"token operator\">+=</span><span class=\"token number\">1</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>        <span class=\"token comment\">/* Loop over the columns of C, unrolled by 4 */</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span> i<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">&lt;</span>m<span class=\"token punctuation\">;</span> i<span class=\"token operator\">+=</span><span class=\"token number\">4</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>        <span class=\"token comment\">/* Loop over the rows of C */</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>      <span class=\"token function\">AddDot1x4</span><span class=\"token punctuation\">(</span> k<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span><span class=\"token function\">A</span><span class=\"token punctuation\">(</span> i<span class=\"token punctuation\">,</span><span class=\"token number\">0</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> lda<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span><span class=\"token function\">B</span><span class=\"token punctuation\">(</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>j <span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> ldb<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span><span class=\"token function\">C</span><span class=\"token punctuation\">(</span> i<span class=\"token punctuation\">,</span>j <span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> ldc <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre></pre></td></tr><tr><td data-num=\"53\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">GemmAccelerate</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>    <span class=\"token keyword\">int</span> M <span class=\"token operator\">=</span> <span class=\"token number\">16</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>    <span class=\"token keyword\">int</span> K <span class=\"token operator\">=</span> <span class=\"token number\">64</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>    <span class=\"token keyword\">int</span> N <span class=\"token operator\">=</span> <span class=\"token number\">16</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>    <span class=\"token keyword\">float</span><span class=\"token operator\">*</span> MatriA <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token function\">malloc</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span><span class=\"token punctuation\">)</span><span class=\"token operator\">*</span> M<span class=\"token operator\">*</span>K<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre>    <span class=\"token keyword\">float</span><span class=\"token operator\">*</span> MatriB <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token function\">malloc</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span><span class=\"token punctuation\">)</span><span class=\"token operator\">*</span> K<span class=\"token operator\">*</span>N<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre>    <span class=\"token keyword\">float</span><span class=\"token operator\">*</span> MatriC <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token function\">malloc</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span><span class=\"token punctuation\">)</span><span class=\"token operator\">*</span> M<span class=\"token operator\">*</span>N<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre>    <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> index<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span> index<span class=\"token operator\">&lt;</span>M<span class=\"token operator\">*</span>K<span class=\"token punctuation\">;</span> index<span class=\"token operator\">&lt;</span>M<span class=\"token operator\">*</span>K<span class=\"token punctuation\">;</span> index<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre>        MatriA<span class=\"token punctuation\">[</span>index<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"62\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"63\"></td><td><pre>    <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> index<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span> index<span class=\"token operator\">&lt;</span>K<span class=\"token operator\">*</span>N<span class=\"token punctuation\">;</span> index<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"64\"></td><td><pre>        MatriB<span class=\"token punctuation\">[</span>index<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"65\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"66\"></td><td><pre>    <span class=\"token function\">MY_MMult_1x4_7</span><span class=\"token punctuation\">(</span>M<span class=\"token punctuation\">,</span>N<span class=\"token punctuation\">,</span>K<span class=\"token punctuation\">,</span>MatriA<span class=\"token punctuation\">,</span>K<span class=\"token punctuation\">,</span>MatriB<span class=\"token punctuation\">,</span>N<span class=\"token punctuation\">,</span>MatriC<span class=\"token punctuation\">,</span>N<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"67\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h1 id=\"5进一步循环展开\"><a class=\"anchor\" href=\"#5进一步循环展开\">#</a> 5. 进一步循环展开</h1>\n<p>将最内部的循环也展开，即原本的 <code>for ( p=0; p&lt;k; p++ )</code>  变成  <code> for ( p=0; p&lt;k; p+=4 )</code> ，内部计算的内容变成原来的四倍。当然也开辟了更多的寄存器。</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;stdio.h></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name function\">A</span><span class=\"token expression\"><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">,</span>j<span class=\"token punctuation\">)</span> a<span class=\"token punctuation\">[</span> <span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span><span class=\"token operator\">*</span>lda <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span>j<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">]</span></span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name function\">B</span><span class=\"token expression\"><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">,</span>j<span class=\"token punctuation\">)</span> b<span class=\"token punctuation\">[</span> <span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span><span class=\"token operator\">*</span>ldb <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span>j<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">]</span></span></span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name function\">C</span><span class=\"token expression\"><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">,</span>j<span class=\"token punctuation\">)</span> c<span class=\"token punctuation\">[</span> <span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span><span class=\"token operator\">*</span>ldc <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span>j<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">]</span></span></span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token comment\">/* Routine for computing C = A * B + C */</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">AddDot1x4</span><span class=\"token punctuation\">(</span> <span class=\"token keyword\">int</span> k<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> <span class=\"token operator\">*</span>a<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> lda<span class=\"token punctuation\">,</span>  <span class=\"token keyword\">float</span> <span class=\"token operator\">*</span>b<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> ldb<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> <span class=\"token operator\">*</span>c<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> ldc <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>  <span class=\"token keyword\">int</span> p<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>  <span class=\"token keyword\">register</span> <span class=\"token keyword\">float</span>   c_00_reg<span class=\"token punctuation\">,</span>   c_01_reg<span class=\"token punctuation\">,</span>   c_02_reg<span class=\"token punctuation\">,</span>   c_03_reg<span class=\"token punctuation\">,</span>  b_0p_reg<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>  <span class=\"token keyword\">float</span>  <span class=\"token operator\">*</span>ap0_pntr<span class=\"token punctuation\">,</span> <span class=\"token operator\">*</span>ap1_pntr<span class=\"token punctuation\">,</span> <span class=\"token operator\">*</span>ap2_pntr<span class=\"token punctuation\">,</span> <span class=\"token operator\">*</span>ap3_pntr<span class=\"token punctuation\">;</span>     </pre></td></tr><tr><td data-num=\"16\"></td><td><pre>  ap0_pntr <span class=\"token operator\">=</span> <span class=\"token operator\">&amp;</span><span class=\"token function\">A</span><span class=\"token punctuation\">(</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>  ap1_pntr <span class=\"token operator\">=</span> <span class=\"token operator\">&amp;</span><span class=\"token function\">A</span><span class=\"token punctuation\">(</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>  ap2_pntr <span class=\"token operator\">=</span> <span class=\"token operator\">&amp;</span><span class=\"token function\">A</span><span class=\"token punctuation\">(</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>  ap3_pntr <span class=\"token operator\">=</span> <span class=\"token operator\">&amp;</span><span class=\"token function\">A</span><span class=\"token punctuation\">(</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>  c_00_reg <span class=\"token operator\">=</span> <span class=\"token number\">0.0</span><span class=\"token punctuation\">;</span> </pre></td></tr><tr><td data-num=\"22\"></td><td><pre>  c_01_reg <span class=\"token operator\">=</span> <span class=\"token number\">0.0</span><span class=\"token punctuation\">;</span> </pre></td></tr><tr><td data-num=\"23\"></td><td><pre>  c_02_reg <span class=\"token operator\">=</span> <span class=\"token number\">0.0</span><span class=\"token punctuation\">;</span> </pre></td></tr><tr><td data-num=\"24\"></td><td><pre>  c_03_reg <span class=\"token operator\">=</span> <span class=\"token number\">0.0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre> </pre></td></tr><tr><td data-num=\"26\"></td><td><pre>  <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span> p<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span> p<span class=\"token operator\">&lt;</span>k<span class=\"token punctuation\">;</span> p<span class=\"token operator\">+=</span><span class=\"token number\">4</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>    b_0p_reg <span class=\"token operator\">=</span> <span class=\"token function\">B</span><span class=\"token punctuation\">(</span> p<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>    c_00_reg <span class=\"token operator\">+=</span> b_0p_reg <span class=\"token operator\">*</span> <span class=\"token operator\">*</span>ap0_pntr<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>    c_01_reg <span class=\"token operator\">+=</span> b_0p_reg <span class=\"token operator\">*</span> <span class=\"token operator\">*</span>ap1_pntr<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>    c_02_reg <span class=\"token operator\">+=</span> b_0p_reg <span class=\"token operator\">*</span> <span class=\"token operator\">*</span>ap2_pntr<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>    c_03_reg <span class=\"token operator\">+=</span> b_0p_reg <span class=\"token operator\">*</span> <span class=\"token operator\">*</span>ap3_pntr<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>    b_0p_reg <span class=\"token operator\">=</span> <span class=\"token function\">B</span><span class=\"token punctuation\">(</span> p<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>    c_00_reg <span class=\"token operator\">+=</span> b_0p_reg <span class=\"token operator\">*</span> <span class=\"token operator\">*</span>ap0_pntr<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>    c_01_reg <span class=\"token operator\">+=</span> b_0p_reg <span class=\"token operator\">*</span> <span class=\"token operator\">*</span>ap1_pntr<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>    c_02_reg <span class=\"token operator\">+=</span> b_0p_reg <span class=\"token operator\">*</span> <span class=\"token operator\">*</span>ap2_pntr<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>    c_03_reg <span class=\"token operator\">+=</span> b_0p_reg <span class=\"token operator\">*</span> <span class=\"token operator\">*</span>ap3_pntr<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>    b_0p_reg <span class=\"token operator\">=</span> <span class=\"token function\">B</span><span class=\"token punctuation\">(</span> p<span class=\"token operator\">+</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>    c_00_reg <span class=\"token operator\">+=</span> b_0p_reg <span class=\"token operator\">*</span> <span class=\"token operator\">*</span>ap0_pntr<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>    c_01_reg <span class=\"token operator\">+=</span> b_0p_reg <span class=\"token operator\">*</span> <span class=\"token operator\">*</span>ap1_pntr<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>    c_02_reg <span class=\"token operator\">+=</span> b_0p_reg <span class=\"token operator\">*</span> <span class=\"token operator\">*</span>ap2_pntr<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>    c_03_reg <span class=\"token operator\">+=</span> b_0p_reg <span class=\"token operator\">*</span> <span class=\"token operator\">*</span>ap3_pntr<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>    b_0p_reg <span class=\"token operator\">=</span> <span class=\"token function\">B</span><span class=\"token punctuation\">(</span> p<span class=\"token operator\">+</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>    c_00_reg <span class=\"token operator\">+=</span> b_0p_reg <span class=\"token operator\">*</span> <span class=\"token operator\">*</span>ap0_pntr<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>    c_01_reg <span class=\"token operator\">+=</span> b_0p_reg <span class=\"token operator\">*</span> <span class=\"token operator\">*</span>ap1_pntr<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>    c_02_reg <span class=\"token operator\">+=</span> b_0p_reg <span class=\"token operator\">*</span> <span class=\"token operator\">*</span>ap2_pntr<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>    c_03_reg <span class=\"token operator\">+=</span> b_0p_reg <span class=\"token operator\">*</span> <span class=\"token operator\">*</span>ap3_pntr<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>  <span class=\"token function\">C</span><span class=\"token punctuation\">(</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">)</span> <span class=\"token operator\">+=</span> c_00_reg<span class=\"token punctuation\">;</span> </pre></td></tr><tr><td data-num=\"57\"></td><td><pre>  <span class=\"token function\">C</span><span class=\"token punctuation\">(</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">)</span> <span class=\"token operator\">+=</span> c_01_reg<span class=\"token punctuation\">;</span> </pre></td></tr><tr><td data-num=\"58\"></td><td><pre>  <span class=\"token function\">C</span><span class=\"token punctuation\">(</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">)</span> <span class=\"token operator\">+=</span> c_02_reg<span class=\"token punctuation\">;</span> </pre></td></tr><tr><td data-num=\"59\"></td><td><pre>  <span class=\"token function\">C</span><span class=\"token punctuation\">(</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">)</span> <span class=\"token operator\">+=</span> c_03_reg<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre></pre></td></tr><tr><td data-num=\"62\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">MY_MMult_1x4_8</span><span class=\"token punctuation\">(</span> <span class=\"token keyword\">int</span> m<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> n<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> k<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> <span class=\"token operator\">*</span>a<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> lda<span class=\"token punctuation\">,</span><span class=\"token keyword\">float</span> <span class=\"token operator\">*</span>b<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> ldb<span class=\"token punctuation\">,</span><span class=\"token keyword\">float</span> <span class=\"token operator\">*</span>c<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> ldc <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"63\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"64\"></td><td><pre>  <span class=\"token keyword\">int</span> i<span class=\"token punctuation\">,</span> j<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"65\"></td><td><pre></pre></td></tr><tr><td data-num=\"66\"></td><td><pre>  <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span> j<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span> j<span class=\"token operator\">&lt;</span>n<span class=\"token punctuation\">;</span> j<span class=\"token operator\">+=</span><span class=\"token number\">1</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>        <span class=\"token comment\">/* Loop over the columns of C, unrolled by 4 */</span></pre></td></tr><tr><td data-num=\"67\"></td><td><pre>    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span> i<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">&lt;</span>m<span class=\"token punctuation\">;</span> i<span class=\"token operator\">+=</span><span class=\"token number\">4</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>        <span class=\"token comment\">/* Loop over the rows of C */</span></pre></td></tr><tr><td data-num=\"68\"></td><td><pre>      <span class=\"token function\">AddDot1x4</span><span class=\"token punctuation\">(</span> k<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span><span class=\"token function\">A</span><span class=\"token punctuation\">(</span> i<span class=\"token punctuation\">,</span><span class=\"token number\">0</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> lda<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span><span class=\"token function\">B</span><span class=\"token punctuation\">(</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>j <span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> ldb<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span><span class=\"token function\">C</span><span class=\"token punctuation\">(</span> i<span class=\"token punctuation\">,</span>j <span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> ldc <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"69\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"70\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"71\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"72\"></td><td><pre></pre></td></tr><tr><td data-num=\"73\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">GemmAccelerate</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"74\"></td><td><pre>    <span class=\"token keyword\">int</span> M <span class=\"token operator\">=</span> <span class=\"token number\">16</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"75\"></td><td><pre>    <span class=\"token keyword\">int</span> K <span class=\"token operator\">=</span> <span class=\"token number\">64</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"76\"></td><td><pre>    <span class=\"token keyword\">int</span> N <span class=\"token operator\">=</span> <span class=\"token number\">16</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"77\"></td><td><pre>    <span class=\"token keyword\">float</span><span class=\"token operator\">*</span> MatriA <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token function\">malloc</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span><span class=\"token punctuation\">)</span><span class=\"token operator\">*</span> M<span class=\"token operator\">*</span>K<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"78\"></td><td><pre>    <span class=\"token keyword\">float</span><span class=\"token operator\">*</span> MatriB <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token function\">malloc</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span><span class=\"token punctuation\">)</span><span class=\"token operator\">*</span> K<span class=\"token operator\">*</span>N<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"79\"></td><td><pre>    <span class=\"token keyword\">float</span><span class=\"token operator\">*</span> MatriC <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token function\">malloc</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span><span class=\"token punctuation\">)</span><span class=\"token operator\">*</span> M<span class=\"token operator\">*</span>N<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"80\"></td><td><pre>    <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> index<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span> index<span class=\"token operator\">&lt;</span>M<span class=\"token operator\">*</span>K<span class=\"token punctuation\">;</span> index<span class=\"token operator\">&lt;</span>M<span class=\"token operator\">*</span>K<span class=\"token punctuation\">;</span> index<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"81\"></td><td><pre>        MatriA<span class=\"token punctuation\">[</span>index<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"82\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"83\"></td><td><pre>    <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> index<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span> index<span class=\"token operator\">&lt;</span>K<span class=\"token operator\">*</span>N<span class=\"token punctuation\">;</span> index<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"84\"></td><td><pre>        MatriB<span class=\"token punctuation\">[</span>index<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"85\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"86\"></td><td><pre>    <span class=\"token function\">MY_MMult_1x4_8</span><span class=\"token punctuation\">(</span>M<span class=\"token punctuation\">,</span>N<span class=\"token punctuation\">,</span>K<span class=\"token punctuation\">,</span>MatriA<span class=\"token punctuation\">,</span>K<span class=\"token punctuation\">,</span>MatriB<span class=\"token punctuation\">,</span>N<span class=\"token punctuation\">,</span>MatriC<span class=\"token punctuation\">,</span>N<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"87\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h1 id=\"6使用simd指令\"><a class=\"anchor\" href=\"#6使用simd指令\">#</a> 6. 使用 SIMD 指令</h1>\n<p><img loading=\"lazy\" data-src=\"1734703349079.jpg\" alt=\"6.使用指令\"></p>\n<p>SIMD 指令是单指令多数据，以 X86 平台的 SSE2 为例，其支持 128 的寄存器，一次性可以计算 4 个 float 或 int 数据，能够提高算法的并行度。</p>\n<p>代码中的 SSE 指令  <code>_mm_setzero_ps</code> ：将寄存器置零， <code>_mm_loadu_ps</code> ：读取指定位置的数据到寄存器， <code>_mm_mul_ps</code> ：乘运算， <code>_mm_add_ps</code> ：加运算， <code>_mm_storeu_ps</code> ：将寄存器的数据存储会内存， <code>_mm_set_ps1 </code> ：将给定地址的一个数复制 4 份到寄存器。</p>\n<p>以下代码在 M 和 N 两个方向循环展开（和 5 不同），一次性计算 16 个数据。</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;stdio.h></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;emmintrin.h></span> <span class=\"token comment\">// SSE2</span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name function\">A</span><span class=\"token expression\"><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">,</span>j<span class=\"token punctuation\">)</span> a<span class=\"token punctuation\">[</span> <span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span><span class=\"token operator\">*</span>lda <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span>j<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">]</span></span></span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name function\">B</span><span class=\"token expression\"><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">,</span>j<span class=\"token punctuation\">)</span> b<span class=\"token punctuation\">[</span> <span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span><span class=\"token operator\">*</span>ldb <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span>j<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">]</span></span></span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name function\">C</span><span class=\"token expression\"><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">,</span>j<span class=\"token punctuation\">)</span> c<span class=\"token punctuation\">[</span> <span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span><span class=\"token operator\">*</span>ldc <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span>j<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">]</span></span></span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token comment\">/* Routine for computing C = A * B + C */</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">AddDot4x4_SSE2</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> k<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> <span class=\"token operator\">*</span>a<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> lda<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> <span class=\"token operator\">*</span>b<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> ldb<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> <span class=\"token operator\">*</span>c<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> ldc<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token comment\">/* Point to the current elements in the four rows of A */</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token keyword\">float</span> <span class=\"token operator\">*</span>a_0p_pntr <span class=\"token operator\">=</span> <span class=\"token operator\">&amp;</span><span class=\"token function\">A</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token keyword\">float</span> <span class=\"token operator\">*</span>a_1p_pntr <span class=\"token operator\">=</span> <span class=\"token operator\">&amp;</span><span class=\"token function\">A</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token keyword\">float</span> <span class=\"token operator\">*</span>a_2p_pntr <span class=\"token operator\">=</span> <span class=\"token operator\">&amp;</span><span class=\"token function\">A</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token keyword\">float</span> <span class=\"token operator\">*</span>a_3p_pntr <span class=\"token operator\">=</span> <span class=\"token operator\">&amp;</span><span class=\"token function\">A</span><span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    __m128 c_p0_sum <span class=\"token operator\">=</span> <span class=\"token function\">_mm_setzero_ps</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    __m128 c_p1_sum <span class=\"token operator\">=</span> <span class=\"token function\">_mm_setzero_ps</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    __m128 c_p2_sum <span class=\"token operator\">=</span> <span class=\"token function\">_mm_setzero_ps</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    __m128 c_p3_sum <span class=\"token operator\">=</span> <span class=\"token function\">_mm_setzero_ps</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    <span class=\"token keyword\">register</span> <span class=\"token keyword\">float</span> a_0p_reg<span class=\"token punctuation\">,</span> a_1p_reg<span class=\"token punctuation\">,</span> a_2p_reg<span class=\"token punctuation\">,</span> a_3p_reg<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> p <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> p <span class=\"token operator\">&lt;</span> k<span class=\"token punctuation\">;</span> <span class=\"token operator\">++</span>p<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>        __m128 b_reg <span class=\"token operator\">=</span> <span class=\"token function\">_mm_loadu_ps</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span><span class=\"token function\">B</span><span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>        a_0p_reg <span class=\"token operator\">=</span> <span class=\"token operator\">*</span>a_0p_pntr<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>        a_1p_reg <span class=\"token operator\">=</span> <span class=\"token operator\">*</span>a_1p_pntr<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>        a_2p_reg <span class=\"token operator\">=</span> <span class=\"token operator\">*</span>a_2p_pntr<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>        a_3p_reg <span class=\"token operator\">=</span> <span class=\"token operator\">*</span>a_3p_pntr<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>        __m128 a_0p_vec <span class=\"token operator\">=</span> <span class=\"token function\">_mm_set_ps1</span><span class=\"token punctuation\">(</span>a_0p_reg<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>        __m128 a_1p_vec <span class=\"token operator\">=</span> <span class=\"token function\">_mm_set_ps1</span><span class=\"token punctuation\">(</span>a_1p_reg<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>        __m128 a_2p_vec <span class=\"token operator\">=</span> <span class=\"token function\">_mm_set_ps1</span><span class=\"token punctuation\">(</span>a_2p_reg<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>        __m128 a_3p_vec <span class=\"token operator\">=</span> <span class=\"token function\">_mm_set_ps1</span><span class=\"token punctuation\">(</span>a_3p_reg<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>        c_p0_sum <span class=\"token operator\">=</span> <span class=\"token function\">_mm_add_ps</span><span class=\"token punctuation\">(</span>c_p0_sum<span class=\"token punctuation\">,</span> <span class=\"token function\">_mm_mul_ps</span><span class=\"token punctuation\">(</span>b_reg<span class=\"token punctuation\">,</span> a_0p_vec<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>        c_p1_sum <span class=\"token operator\">=</span> <span class=\"token function\">_mm_add_ps</span><span class=\"token punctuation\">(</span>c_p1_sum<span class=\"token punctuation\">,</span> <span class=\"token function\">_mm_mul_ps</span><span class=\"token punctuation\">(</span>b_reg<span class=\"token punctuation\">,</span> a_1p_vec<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>        c_p2_sum <span class=\"token operator\">=</span> <span class=\"token function\">_mm_add_ps</span><span class=\"token punctuation\">(</span>c_p2_sum<span class=\"token punctuation\">,</span> <span class=\"token function\">_mm_mul_ps</span><span class=\"token punctuation\">(</span>b_reg<span class=\"token punctuation\">,</span> a_2p_vec<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>        c_p3_sum <span class=\"token operator\">=</span> <span class=\"token function\">_mm_add_ps</span><span class=\"token punctuation\">(</span>c_p3_sum<span class=\"token punctuation\">,</span> <span class=\"token function\">_mm_mul_ps</span><span class=\"token punctuation\">(</span>b_reg<span class=\"token punctuation\">,</span> a_3p_vec<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>    <span class=\"token keyword\">float</span> <span class=\"token operator\">*</span>c_pntr<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>    __m128 c_reg<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>    c_pntr <span class=\"token operator\">=</span> <span class=\"token operator\">&amp;</span><span class=\"token function\">C</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>    c_reg <span class=\"token operator\">=</span> <span class=\"token function\">_mm_loadu_ps</span><span class=\"token punctuation\">(</span>c_pntr<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>    c_reg <span class=\"token operator\">=</span> <span class=\"token function\">_mm_add_ps</span><span class=\"token punctuation\">(</span>c_reg<span class=\"token punctuation\">,</span> c_p0_sum<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>    <span class=\"token function\">_mm_storeu_ps</span><span class=\"token punctuation\">(</span>c_pntr<span class=\"token punctuation\">,</span> c_reg<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>    c_pntr <span class=\"token operator\">=</span> <span class=\"token operator\">&amp;</span><span class=\"token function\">C</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>    c_reg <span class=\"token operator\">=</span> <span class=\"token function\">_mm_loadu_ps</span><span class=\"token punctuation\">(</span>c_pntr<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>    c_reg <span class=\"token operator\">=</span> <span class=\"token function\">_mm_add_ps</span><span class=\"token punctuation\">(</span>c_reg<span class=\"token punctuation\">,</span> c_p1_sum<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>    <span class=\"token function\">_mm_storeu_ps</span><span class=\"token punctuation\">(</span>c_pntr<span class=\"token punctuation\">,</span> c_reg<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>    c_pntr <span class=\"token operator\">=</span> <span class=\"token operator\">&amp;</span><span class=\"token function\">C</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>    c_reg <span class=\"token operator\">=</span> <span class=\"token function\">_mm_loadu_ps</span><span class=\"token punctuation\">(</span>c_pntr<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>    c_reg <span class=\"token operator\">=</span> <span class=\"token function\">_mm_add_ps</span><span class=\"token punctuation\">(</span>c_reg<span class=\"token punctuation\">,</span> c_p2_sum<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre>    <span class=\"token function\">_mm_storeu_ps</span><span class=\"token punctuation\">(</span>c_pntr<span class=\"token punctuation\">,</span> c_reg<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre></pre></td></tr><tr><td data-num=\"60\"></td><td><pre>    c_pntr <span class=\"token operator\">=</span> <span class=\"token operator\">&amp;</span><span class=\"token function\">C</span><span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre>    c_reg <span class=\"token operator\">=</span> <span class=\"token function\">_mm_loadu_ps</span><span class=\"token punctuation\">(</span>c_pntr<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"62\"></td><td><pre>    c_reg <span class=\"token operator\">=</span> <span class=\"token function\">_mm_add_ps</span><span class=\"token punctuation\">(</span>c_reg<span class=\"token punctuation\">,</span> c_p3_sum<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"63\"></td><td><pre>    <span class=\"token function\">_mm_storeu_ps</span><span class=\"token punctuation\">(</span>c_pntr<span class=\"token punctuation\">,</span> c_reg<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"64\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"65\"></td><td><pre></pre></td></tr><tr><td data-num=\"66\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">MY_MMult_4x4_10</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> m<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> n<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> k<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> <span class=\"token operator\">*</span>a<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> lda<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> <span class=\"token operator\">*</span>b<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> ldb<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> <span class=\"token operator\">*</span>c<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> ldc<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"67\"></td><td><pre>    <span class=\"token keyword\">int</span> i<span class=\"token punctuation\">,</span> j<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"68\"></td><td><pre>    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span>j <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> j <span class=\"token operator\">&lt;</span> n<span class=\"token punctuation\">;</span> j <span class=\"token operator\">+=</span> <span class=\"token number\">4</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>        <span class=\"token comment\">/* Loop over the columns of C, unrolled by 4 */</span></pre></td></tr><tr><td data-num=\"69\"></td><td><pre>        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span>i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> m<span class=\"token punctuation\">;</span> i <span class=\"token operator\">+=</span> <span class=\"token number\">4</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>    <span class=\"token comment\">/* Loop over the rows of C */</span></pre></td></tr><tr><td data-num=\"70\"></td><td><pre>            <span class=\"token function\">AddDot4x4_SSE2</span><span class=\"token punctuation\">(</span>k<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span><span class=\"token function\">A</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> lda<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span><span class=\"token function\">B</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> j<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> ldb<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span><span class=\"token function\">C</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">,</span> j<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> ldc<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"71\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"72\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"73\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"74\"></td><td><pre></pre></td></tr><tr><td data-num=\"75\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">GemmAccelerateSimd</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"76\"></td><td><pre>    <span class=\"token keyword\">int</span> M <span class=\"token operator\">=</span> <span class=\"token number\">16</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"77\"></td><td><pre>    <span class=\"token keyword\">int</span> K <span class=\"token operator\">=</span> <span class=\"token number\">64</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"78\"></td><td><pre>    <span class=\"token keyword\">int</span> N <span class=\"token operator\">=</span> <span class=\"token number\">16</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"79\"></td><td><pre>    <span class=\"token keyword\">float</span><span class=\"token operator\">*</span> MatriA <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token function\">malloc</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span><span class=\"token punctuation\">)</span><span class=\"token operator\">*</span> M<span class=\"token operator\">*</span>K<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"80\"></td><td><pre>    <span class=\"token keyword\">float</span><span class=\"token operator\">*</span> MatriB <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token function\">malloc</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span><span class=\"token punctuation\">)</span><span class=\"token operator\">*</span> K<span class=\"token operator\">*</span>N<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"81\"></td><td><pre>    <span class=\"token keyword\">float</span><span class=\"token operator\">*</span> MatriC <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token function\">malloc</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span><span class=\"token punctuation\">)</span><span class=\"token operator\">*</span> M<span class=\"token operator\">*</span>N<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"82\"></td><td><pre>    <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> index<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span> index<span class=\"token operator\">&lt;</span>M<span class=\"token operator\">*</span>K<span class=\"token punctuation\">;</span> index<span class=\"token operator\">&lt;</span>M<span class=\"token operator\">*</span>K<span class=\"token punctuation\">;</span> index<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"83\"></td><td><pre>        MatriA<span class=\"token punctuation\">[</span>index<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"84\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"85\"></td><td><pre>    <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> index<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span> index<span class=\"token operator\">&lt;</span>K<span class=\"token operator\">*</span>N<span class=\"token punctuation\">;</span> index<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"86\"></td><td><pre>        MatriB<span class=\"token punctuation\">[</span>index<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"87\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"88\"></td><td><pre>    <span class=\"token function\">MY_MMult_4x4_10</span><span class=\"token punctuation\">(</span>M<span class=\"token punctuation\">,</span>N<span class=\"token punctuation\">,</span>K<span class=\"token punctuation\">,</span>MatriA<span class=\"token punctuation\">,</span>K<span class=\"token punctuation\">,</span>MatriB<span class=\"token punctuation\">,</span>N<span class=\"token punctuation\">,</span>MatriC<span class=\"token punctuation\">,</span>N<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"89\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h1 id=\"7矩阵分块\"><a class=\"anchor\" href=\"#7矩阵分块\">#</a> 7. 矩阵分块</h1>\n<p><img loading=\"lazy\" data-src=\"1734703427993.jpg\" alt=\"7.矩阵分块\"></p>\n<p>分块技术（blocking）是一种常用的优化策略，旨在改善缓存命中率和数据局部性，进而提升计算密集型操作（如矩阵乘法）的性能。通过将大矩阵分割成较小的子矩阵（即 “块”），可以更好地利用 CPU 缓存，并减少内存访问延迟。</p>\n<p>以下代码中， <code>mc</code>  (Macro for m-block Count)：定义了处理矩阵行方向上的块大小 ， <code>kc</code>  (Macro for k-block Count)：定义了处理矩阵列方向上的块大小。在整个代码中被用作循环边界或参数，用于控制矩阵分块的尺寸。他们将矩阵 A 分割乘 256<em>128 的小块，将矩阵 B 分割成 128</em>N 的小块，然后计算两个小块的矩阵乘运算。至于如何得到最终结果，可以参考《线性代数》知识：分块矩阵乘。</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;emmintrin.h></span> <span class=\"token comment\">// SSE2</span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;smmintrin.h></span> <span class=\"token comment\">// SSE4.1, for _mm_dp_ps if needed</span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;stdio.h></span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token comment\">/* Block sizes */</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">mc</span> <span class=\"token expression\"><span class=\"token number\">256</span> </span></span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">kc</span> <span class=\"token expression\"><span class=\"token number\">128</span></span></span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token comment\">/* Create macros so that the matrices are stored in row-major order */</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name function\">A</span><span class=\"token expression\"><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">,</span>j<span class=\"token punctuation\">)</span> a<span class=\"token punctuation\">[</span> <span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span><span class=\"token operator\">*</span>lda <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span>j<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">]</span></span></span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name function\">B</span><span class=\"token expression\"><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">,</span>j<span class=\"token punctuation\">)</span> b<span class=\"token punctuation\">[</span> <span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span><span class=\"token operator\">*</span>ldb <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span>j<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">]</span></span></span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name function\">C</span><span class=\"token expression\"><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">,</span>j<span class=\"token punctuation\">)</span> c<span class=\"token punctuation\">[</span> <span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span><span class=\"token operator\">*</span>ldc <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span>j<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">]</span></span></span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name function\">min</span><span class=\"token expression\"><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">,</span> j<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;</span> <span class=\"token punctuation\">(</span>j<span class=\"token punctuation\">)</span> <span class=\"token operator\">?</span> <span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span>j<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></span></span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token comment\">/* Routine for computing C = A * B + C */</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre></pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">AddDot4x4_SSE</span><span class=\"token punctuation\">(</span> <span class=\"token keyword\">int</span> k<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> <span class=\"token operator\">*</span>a<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> lda<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> <span class=\"token operator\">*</span>b<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> ldb<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> <span class=\"token operator\">*</span>c<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> ldc <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>  <span class=\"token comment\">/* Point to the current elements in the four rows of A */</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>  <span class=\"token keyword\">float</span> <span class=\"token operator\">*</span>a_0p_pntr <span class=\"token operator\">=</span> <span class=\"token operator\">&amp;</span><span class=\"token function\">A</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>  <span class=\"token keyword\">float</span> <span class=\"token operator\">*</span>a_1p_pntr <span class=\"token operator\">=</span> <span class=\"token operator\">&amp;</span><span class=\"token function\">A</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>  <span class=\"token keyword\">float</span> <span class=\"token operator\">*</span>a_2p_pntr <span class=\"token operator\">=</span> <span class=\"token operator\">&amp;</span><span class=\"token function\">A</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>  <span class=\"token keyword\">float</span> <span class=\"token operator\">*</span>a_3p_pntr <span class=\"token operator\">=</span> <span class=\"token operator\">&amp;</span><span class=\"token function\">A</span><span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>  __m128 c_0p_sum <span class=\"token operator\">=</span> <span class=\"token function\">_mm_setzero_ps</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>  __m128 c_1p_sum <span class=\"token operator\">=</span> <span class=\"token function\">_mm_setzero_ps</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>  __m128 c_2p_sum <span class=\"token operator\">=</span> <span class=\"token function\">_mm_setzero_ps</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>  __m128 c_3p_sum <span class=\"token operator\">=</span> <span class=\"token function\">_mm_setzero_ps</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>  <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> p <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> p <span class=\"token operator\">&lt;</span> k<span class=\"token punctuation\">;</span> <span class=\"token operator\">++</span>p<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>    __m128 b_reg <span class=\"token operator\">=</span> <span class=\"token function\">_mm_loadu_ps</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span><span class=\"token function\">B</span><span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>    <span class=\"token keyword\">float</span> a_0p_reg <span class=\"token operator\">=</span> <span class=\"token operator\">*</span>a_0p_pntr<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>    <span class=\"token keyword\">float</span> a_1p_reg <span class=\"token operator\">=</span> <span class=\"token operator\">*</span>a_1p_pntr<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>    <span class=\"token keyword\">float</span> a_2p_reg <span class=\"token operator\">=</span> <span class=\"token operator\">*</span>a_2p_pntr<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>    <span class=\"token keyword\">float</span> a_3p_reg <span class=\"token operator\">=</span> <span class=\"token operator\">*</span>a_3p_pntr<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>    c_0p_sum <span class=\"token operator\">=</span> <span class=\"token function\">_mm_add_ps</span><span class=\"token punctuation\">(</span>c_0p_sum<span class=\"token punctuation\">,</span> <span class=\"token function\">_mm_mul_ps</span><span class=\"token punctuation\">(</span>b_reg<span class=\"token punctuation\">,</span> <span class=\"token function\">_mm_set1_ps</span><span class=\"token punctuation\">(</span>a_0p_reg<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>    c_1p_sum <span class=\"token operator\">=</span> <span class=\"token function\">_mm_add_ps</span><span class=\"token punctuation\">(</span>c_1p_sum<span class=\"token punctuation\">,</span> <span class=\"token function\">_mm_mul_ps</span><span class=\"token punctuation\">(</span>b_reg<span class=\"token punctuation\">,</span> <span class=\"token function\">_mm_set1_ps</span><span class=\"token punctuation\">(</span>a_1p_reg<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>    c_2p_sum <span class=\"token operator\">=</span> <span class=\"token function\">_mm_add_ps</span><span class=\"token punctuation\">(</span>c_2p_sum<span class=\"token punctuation\">,</span> <span class=\"token function\">_mm_mul_ps</span><span class=\"token punctuation\">(</span>b_reg<span class=\"token punctuation\">,</span> <span class=\"token function\">_mm_set1_ps</span><span class=\"token punctuation\">(</span>a_2p_reg<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>    c_3p_sum <span class=\"token operator\">=</span> <span class=\"token function\">_mm_add_ps</span><span class=\"token punctuation\">(</span>c_3p_sum<span class=\"token punctuation\">,</span> <span class=\"token function\">_mm_mul_ps</span><span class=\"token punctuation\">(</span>b_reg<span class=\"token punctuation\">,</span> <span class=\"token function\">_mm_set1_ps</span><span class=\"token punctuation\">(</span>a_3p_reg<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>  <span class=\"token comment\">// Store results back into C matrix</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>  <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> row <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> row <span class=\"token operator\">&lt;</span> <span class=\"token number\">4</span><span class=\"token punctuation\">;</span> <span class=\"token operator\">++</span>row<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>    <span class=\"token keyword\">float</span><span class=\"token operator\">*</span> c_pntr <span class=\"token operator\">=</span> <span class=\"token operator\">&amp;</span><span class=\"token function\">C</span><span class=\"token punctuation\">(</span>row<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>    __m128 c_reg <span class=\"token operator\">=</span> <span class=\"token function\">_mm_loadu_ps</span><span class=\"token punctuation\">(</span>c_pntr<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>    <span class=\"token keyword\">switch</span> <span class=\"token punctuation\">(</span>row<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>      <span class=\"token keyword\">case</span> <span class=\"token number\">0</span><span class=\"token operator\">:</span> c_reg <span class=\"token operator\">=</span> <span class=\"token function\">_mm_add_ps</span><span class=\"token punctuation\">(</span>c_reg<span class=\"token punctuation\">,</span> c_0p_sum<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>      <span class=\"token keyword\">case</span> <span class=\"token number\">1</span><span class=\"token operator\">:</span> c_reg <span class=\"token operator\">=</span> <span class=\"token function\">_mm_add_ps</span><span class=\"token punctuation\">(</span>c_reg<span class=\"token punctuation\">,</span> c_1p_sum<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>      <span class=\"token keyword\">case</span> <span class=\"token number\">2</span><span class=\"token operator\">:</span> c_reg <span class=\"token operator\">=</span> <span class=\"token function\">_mm_add_ps</span><span class=\"token punctuation\">(</span>c_reg<span class=\"token punctuation\">,</span> c_2p_sum<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>      <span class=\"token keyword\">case</span> <span class=\"token number\">3</span><span class=\"token operator\">:</span> c_reg <span class=\"token operator\">=</span> <span class=\"token function\">_mm_add_ps</span><span class=\"token punctuation\">(</span>c_reg<span class=\"token punctuation\">,</span> c_3p_sum<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>    <span class=\"token function\">_mm_storeu_ps</span><span class=\"token punctuation\">(</span>c_pntr<span class=\"token punctuation\">,</span> c_reg<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre></pre></td></tr><tr><td data-num=\"60\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">InnerKernel_SSE</span><span class=\"token punctuation\">(</span> <span class=\"token keyword\">int</span> m<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> n<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> k<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> <span class=\"token operator\">*</span>a<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> lda<span class=\"token punctuation\">,</span>  <span class=\"token keyword\">float</span> <span class=\"token operator\">*</span>b<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> ldb<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> <span class=\"token operator\">*</span>c<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> ldc <span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre>  <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span> <span class=\"token keyword\">int</span> j<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span> j<span class=\"token operator\">&lt;</span>n<span class=\"token punctuation\">;</span> j<span class=\"token operator\">+=</span><span class=\"token number\">4</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>        <span class=\"token comment\">/* Loop over the columns of C, unrolled by 4 */</span></pre></td></tr><tr><td data-num=\"62\"></td><td><pre>    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span> <span class=\"token keyword\">int</span> i<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">&lt;</span>m<span class=\"token punctuation\">;</span> i<span class=\"token operator\">+=</span><span class=\"token number\">4</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>        <span class=\"token comment\">/* Loop over the rows of C */</span></pre></td></tr><tr><td data-num=\"63\"></td><td><pre>      <span class=\"token function\">AddDot4x4_SSE</span><span class=\"token punctuation\">(</span> k<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span><span class=\"token function\">A</span><span class=\"token punctuation\">(</span> i<span class=\"token punctuation\">,</span><span class=\"token number\">0</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> lda<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span><span class=\"token function\">B</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> j<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> ldb<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span><span class=\"token function\">C</span><span class=\"token punctuation\">(</span> i<span class=\"token punctuation\">,</span>j <span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> ldc <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"64\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"65\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"66\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"67\"></td><td><pre></pre></td></tr><tr><td data-num=\"68\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">MY_MMult_4x4_11_SSE</span><span class=\"token punctuation\">(</span> <span class=\"token keyword\">int</span> m<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> n<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> k<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> <span class=\"token operator\">*</span>a<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> lda<span class=\"token punctuation\">,</span>  <span class=\"token keyword\">float</span> <span class=\"token operator\">*</span>b<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> ldb<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> <span class=\"token operator\">*</span>c<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> ldc <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"69\"></td><td><pre>  <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> p <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> p <span class=\"token operator\">&lt;</span> k<span class=\"token punctuation\">;</span> p <span class=\"token operator\">+=</span> kc<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"70\"></td><td><pre>    <span class=\"token keyword\">int</span> pb <span class=\"token operator\">=</span> <span class=\"token function\">min</span><span class=\"token punctuation\">(</span>k <span class=\"token operator\">-</span> p<span class=\"token punctuation\">,</span> kc<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"71\"></td><td><pre>    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> m<span class=\"token punctuation\">;</span> i <span class=\"token operator\">+=</span> mc<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"72\"></td><td><pre>      <span class=\"token keyword\">int</span> ib <span class=\"token operator\">=</span> <span class=\"token function\">min</span><span class=\"token punctuation\">(</span>m <span class=\"token operator\">-</span> i<span class=\"token punctuation\">,</span> mc<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"73\"></td><td><pre>      <span class=\"token function\">InnerKernel_SSE</span><span class=\"token punctuation\">(</span>ib<span class=\"token punctuation\">,</span> n<span class=\"token punctuation\">,</span> pb<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span><span class=\"token function\">A</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">,</span> p<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> lda<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span><span class=\"token function\">B</span><span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> ldb<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span><span class=\"token function\">C</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> ldc<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"74\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"75\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"76\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"77\"></td><td><pre></pre></td></tr><tr><td data-num=\"78\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">GemmAccelerateSimd</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"79\"></td><td><pre>    <span class=\"token keyword\">int</span> M <span class=\"token operator\">=</span> <span class=\"token number\">16</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"80\"></td><td><pre>    <span class=\"token keyword\">int</span> K <span class=\"token operator\">=</span> <span class=\"token number\">64</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"81\"></td><td><pre>    <span class=\"token keyword\">int</span> N <span class=\"token operator\">=</span> <span class=\"token number\">16</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"82\"></td><td><pre>    <span class=\"token keyword\">float</span><span class=\"token operator\">*</span> MatriA <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token function\">malloc</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span><span class=\"token punctuation\">)</span><span class=\"token operator\">*</span> M<span class=\"token operator\">*</span>K<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"83\"></td><td><pre>    <span class=\"token keyword\">float</span><span class=\"token operator\">*</span> MatriB <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token function\">malloc</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span><span class=\"token punctuation\">)</span><span class=\"token operator\">*</span> K<span class=\"token operator\">*</span>N<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"84\"></td><td><pre>    <span class=\"token keyword\">float</span><span class=\"token operator\">*</span> MatriC <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token function\">malloc</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span><span class=\"token punctuation\">)</span><span class=\"token operator\">*</span> M<span class=\"token operator\">*</span>N<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"85\"></td><td><pre>    <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> index<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span> index<span class=\"token operator\">&lt;</span>M<span class=\"token operator\">*</span>K<span class=\"token punctuation\">;</span> index<span class=\"token operator\">&lt;</span>M<span class=\"token operator\">*</span>K<span class=\"token punctuation\">;</span> index<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"86\"></td><td><pre>        MatriA<span class=\"token punctuation\">[</span>index<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"87\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"88\"></td><td><pre>    <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> index<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span> index<span class=\"token operator\">&lt;</span>K<span class=\"token operator\">*</span>N<span class=\"token punctuation\">;</span> index<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"89\"></td><td><pre>        MatriB<span class=\"token punctuation\">[</span>index<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"90\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"91\"></td><td><pre>    <span class=\"token function\">MY_MMult_4x4_11_SSE</span><span class=\"token punctuation\">(</span>M<span class=\"token punctuation\">,</span>N<span class=\"token punctuation\">,</span>K<span class=\"token punctuation\">,</span>MatriA<span class=\"token punctuation\">,</span>K<span class=\"token punctuation\">,</span>MatriB<span class=\"token punctuation\">,</span>N<span class=\"token punctuation\">,</span>MatriC<span class=\"token punctuation\">,</span>N<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"92\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h1 id=\"8-数据pack\"><a class=\"anchor\" href=\"#8-数据pack\">#</a> 8. 数据 Pack</h1>\n<p>在上面的优化中可以发现，在矩阵乘法的计算中，无论是行主序还是列主序，始终有一个矩阵的内存是没办法连续访问的。为了改善这个情况，可以执行数据 Pack，使矩阵 A 和矩阵 B 的内存变成连续的。</p>\n<p>下面代码，在矩阵运算之前将矩阵 B 按照访问顺序重新排布，存储在 <code>packedB</code>  中。</p>\n<p>是否有速度提升，需要在目标平台上实测，因为算法提升了矩阵运算效率，但是增加了 pack 时间。</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;emmintrin.h></span> <span class=\"token comment\">// SSE2</span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;smmintrin.h></span> <span class=\"token comment\">// SSE4.1, for _mm_dp_ps if needed</span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;stdio.h></span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token comment\">/* Block sizes */</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">mc</span> <span class=\"token expression\"><span class=\"token number\">256</span> </span></span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">kc</span> <span class=\"token expression\"><span class=\"token number\">128</span></span></span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token comment\">/* Create macros so that the matrices are stored in row-major order */</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name function\">A</span><span class=\"token expression\"><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">,</span>j<span class=\"token punctuation\">)</span> a<span class=\"token punctuation\">[</span> <span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span><span class=\"token operator\">*</span>lda <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span>j<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">]</span></span></span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name function\">B</span><span class=\"token expression\"><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">,</span>j<span class=\"token punctuation\">)</span> b<span class=\"token punctuation\">[</span> <span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span><span class=\"token operator\">*</span>ldb <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span>j<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">]</span></span></span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name function\">C</span><span class=\"token expression\"><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">,</span>j<span class=\"token punctuation\">)</span> c<span class=\"token punctuation\">[</span> <span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span><span class=\"token operator\">*</span>ldc <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span>j<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">]</span></span></span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name function\">min</span><span class=\"token expression\"><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">,</span> j<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;</span> <span class=\"token punctuation\">(</span>j<span class=\"token punctuation\">)</span> <span class=\"token operator\">?</span> <span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span>j<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></span></span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token comment\">/* Routine for computing C = A * B + C */</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre></pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">PackMatrixB_SSE</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> k<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> <span class=\"token operator\">*</span>b<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> ldb<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> <span class=\"token operator\">*</span>b_to<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>  <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> j <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> j <span class=\"token operator\">&lt;</span> k<span class=\"token punctuation\">;</span> <span class=\"token operator\">++</span>j<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    <span class=\"token keyword\">float</span> <span class=\"token operator\">*</span>b_ij_pntr <span class=\"token operator\">=</span> <span class=\"token operator\">&amp;</span><span class=\"token function\">B</span><span class=\"token punctuation\">(</span>j<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    <span class=\"token operator\">*</span>b_to<span class=\"token operator\">++</span> <span class=\"token operator\">=</span> b_ij_pntr<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    <span class=\"token operator\">*</span>b_to<span class=\"token operator\">++</span> <span class=\"token operator\">=</span> b_ij_pntr<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    <span class=\"token operator\">*</span>b_to<span class=\"token operator\">++</span> <span class=\"token operator\">=</span> b_ij_pntr<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>    <span class=\"token operator\">*</span>b_to<span class=\"token operator\">++</span> <span class=\"token operator\">=</span> b_ij_pntr<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre></pre></td></tr><tr><td data-num=\"29\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">AddDot4x4_SSE</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> k<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> <span class=\"token operator\">*</span>a<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> lda<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> <span class=\"token operator\">*</span>b<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> ldb<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> <span class=\"token operator\">*</span>c<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> ldc<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>  <span class=\"token comment\">/* Point to the current elements in the four rows of A */</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>  <span class=\"token keyword\">float</span> <span class=\"token operator\">*</span>a_0p_pntr <span class=\"token operator\">=</span> <span class=\"token operator\">&amp;</span><span class=\"token function\">A</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>  <span class=\"token keyword\">float</span> <span class=\"token operator\">*</span>a_1p_pntr <span class=\"token operator\">=</span> <span class=\"token operator\">&amp;</span><span class=\"token function\">A</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>  <span class=\"token keyword\">float</span> <span class=\"token operator\">*</span>a_2p_pntr <span class=\"token operator\">=</span> <span class=\"token operator\">&amp;</span><span class=\"token function\">A</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>  <span class=\"token keyword\">float</span> <span class=\"token operator\">*</span>a_3p_pntr <span class=\"token operator\">=</span> <span class=\"token operator\">&amp;</span><span class=\"token function\">A</span><span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>  __m128 c_0p_sum <span class=\"token operator\">=</span> <span class=\"token function\">_mm_setzero_ps</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>  __m128 c_1p_sum <span class=\"token operator\">=</span> <span class=\"token function\">_mm_setzero_ps</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>  __m128 c_2p_sum <span class=\"token operator\">=</span> <span class=\"token function\">_mm_setzero_ps</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>  __m128 c_3p_sum <span class=\"token operator\">=</span> <span class=\"token function\">_mm_setzero_ps</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>  <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> p <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> p <span class=\"token operator\">&lt;</span> k<span class=\"token punctuation\">;</span> <span class=\"token operator\">++</span>p<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>    __m128 b_reg <span class=\"token operator\">=</span> <span class=\"token function\">_mm_loadu_ps</span><span class=\"token punctuation\">(</span>b<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// Load 4 floats from b</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>    b <span class=\"token operator\">+=</span> <span class=\"token number\">4</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>    <span class=\"token keyword\">float</span> a_0p_reg <span class=\"token operator\">=</span> <span class=\"token operator\">*</span>a_0p_pntr<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>    <span class=\"token keyword\">float</span> a_1p_reg <span class=\"token operator\">=</span> <span class=\"token operator\">*</span>a_1p_pntr<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>    <span class=\"token keyword\">float</span> a_2p_reg <span class=\"token operator\">=</span> <span class=\"token operator\">*</span>a_2p_pntr<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>    <span class=\"token keyword\">float</span> a_3p_reg <span class=\"token operator\">=</span> <span class=\"token operator\">*</span>a_3p_pntr<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>    c_0p_sum <span class=\"token operator\">=</span> <span class=\"token function\">_mm_add_ps</span><span class=\"token punctuation\">(</span>c_0p_sum<span class=\"token punctuation\">,</span> <span class=\"token function\">_mm_mul_ps</span><span class=\"token punctuation\">(</span>b_reg<span class=\"token punctuation\">,</span> <span class=\"token function\">_mm_set1_ps</span><span class=\"token punctuation\">(</span>a_0p_reg<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>    c_1p_sum <span class=\"token operator\">=</span> <span class=\"token function\">_mm_add_ps</span><span class=\"token punctuation\">(</span>c_1p_sum<span class=\"token punctuation\">,</span> <span class=\"token function\">_mm_mul_ps</span><span class=\"token punctuation\">(</span>b_reg<span class=\"token punctuation\">,</span> <span class=\"token function\">_mm_set1_ps</span><span class=\"token punctuation\">(</span>a_1p_reg<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>    c_2p_sum <span class=\"token operator\">=</span> <span class=\"token function\">_mm_add_ps</span><span class=\"token punctuation\">(</span>c_2p_sum<span class=\"token punctuation\">,</span> <span class=\"token function\">_mm_mul_ps</span><span class=\"token punctuation\">(</span>b_reg<span class=\"token punctuation\">,</span> <span class=\"token function\">_mm_set1_ps</span><span class=\"token punctuation\">(</span>a_2p_reg<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>    c_3p_sum <span class=\"token operator\">=</span> <span class=\"token function\">_mm_add_ps</span><span class=\"token punctuation\">(</span>c_3p_sum<span class=\"token punctuation\">,</span> <span class=\"token function\">_mm_mul_ps</span><span class=\"token punctuation\">(</span>b_reg<span class=\"token punctuation\">,</span> <span class=\"token function\">_mm_set1_ps</span><span class=\"token punctuation\">(</span>a_3p_reg<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>  <span class=\"token comment\">// Store results back into C matrix</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>  <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> row <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> row <span class=\"token operator\">&lt;</span> <span class=\"token number\">4</span><span class=\"token punctuation\">;</span> <span class=\"token operator\">++</span>row<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre>    <span class=\"token keyword\">float</span><span class=\"token operator\">*</span> c_pntr <span class=\"token operator\">=</span> <span class=\"token operator\">&amp;</span><span class=\"token function\">C</span><span class=\"token punctuation\">(</span>row<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre>    __m128 c_reg <span class=\"token operator\">=</span> <span class=\"token function\">_mm_loadu_ps</span><span class=\"token punctuation\">(</span>c_pntr<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre>    <span class=\"token keyword\">switch</span> <span class=\"token punctuation\">(</span>row<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre>      <span class=\"token keyword\">case</span> <span class=\"token number\">0</span><span class=\"token operator\">:</span> c_reg <span class=\"token operator\">=</span> <span class=\"token function\">_mm_add_ps</span><span class=\"token punctuation\">(</span>c_reg<span class=\"token punctuation\">,</span> c_0p_sum<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"62\"></td><td><pre>      <span class=\"token keyword\">case</span> <span class=\"token number\">1</span><span class=\"token operator\">:</span> c_reg <span class=\"token operator\">=</span> <span class=\"token function\">_mm_add_ps</span><span class=\"token punctuation\">(</span>c_reg<span class=\"token punctuation\">,</span> c_1p_sum<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"63\"></td><td><pre>      <span class=\"token keyword\">case</span> <span class=\"token number\">2</span><span class=\"token operator\">:</span> c_reg <span class=\"token operator\">=</span> <span class=\"token function\">_mm_add_ps</span><span class=\"token punctuation\">(</span>c_reg<span class=\"token punctuation\">,</span> c_2p_sum<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"64\"></td><td><pre>      <span class=\"token keyword\">case</span> <span class=\"token number\">3</span><span class=\"token operator\">:</span> c_reg <span class=\"token operator\">=</span> <span class=\"token function\">_mm_add_ps</span><span class=\"token punctuation\">(</span>c_reg<span class=\"token punctuation\">,</span> c_3p_sum<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"65\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"66\"></td><td><pre>    <span class=\"token function\">_mm_storeu_ps</span><span class=\"token punctuation\">(</span>c_pntr<span class=\"token punctuation\">,</span> c_reg<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"67\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"68\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"69\"></td><td><pre></pre></td></tr><tr><td data-num=\"70\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">InnerKernel_SSE</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> m<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> n<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> k<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> <span class=\"token operator\">*</span>a<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> lda<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> <span class=\"token operator\">*</span>b<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> ldb<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> <span class=\"token operator\">*</span>c<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> ldc<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"71\"></td><td><pre>  <span class=\"token keyword\">int</span> i<span class=\"token punctuation\">,</span> j<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"72\"></td><td><pre>  <span class=\"token keyword\">float</span> packedB<span class=\"token punctuation\">[</span>k <span class=\"token operator\">*</span> n<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"73\"></td><td><pre></pre></td></tr><tr><td data-num=\"74\"></td><td><pre>  <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span>j <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> j <span class=\"token operator\">&lt;</span> n<span class=\"token punctuation\">;</span> j <span class=\"token operator\">+=</span> <span class=\"token number\">4</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token comment\">/* Loop over the columns of C, unrolled by 4 */</span></pre></td></tr><tr><td data-num=\"75\"></td><td><pre>    <span class=\"token function\">PackMatrixB_SSE</span><span class=\"token punctuation\">(</span>k<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span><span class=\"token function\">B</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> j<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> ldb<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>packedB<span class=\"token punctuation\">[</span>j <span class=\"token operator\">*</span> k<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"76\"></td><td><pre>    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span>i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> m<span class=\"token punctuation\">;</span> i <span class=\"token operator\">+=</span> <span class=\"token number\">4</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token comment\">/* Loop over the rows of C */</span></pre></td></tr><tr><td data-num=\"77\"></td><td><pre>      <span class=\"token function\">AddDot4x4_SSE</span><span class=\"token punctuation\">(</span>k<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span><span class=\"token function\">A</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> lda<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>packedB<span class=\"token punctuation\">[</span>j <span class=\"token operator\">*</span> k<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span><span class=\"token function\">C</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">,</span> j<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> ldc<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"78\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"79\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"80\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"81\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">MY_MMult_4x4_12_SSE</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> m<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> n<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> k<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> <span class=\"token operator\">*</span>a<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> lda<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> <span class=\"token operator\">*</span>b<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> ldb<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> <span class=\"token operator\">*</span>c<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> ldc<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"82\"></td><td><pre>  <span class=\"token keyword\">int</span> i<span class=\"token punctuation\">,</span> p<span class=\"token punctuation\">,</span> pb<span class=\"token punctuation\">,</span> ib<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"83\"></td><td><pre>  <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span>p <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> p <span class=\"token operator\">&lt;</span> k<span class=\"token punctuation\">;</span> p <span class=\"token operator\">+=</span> kc<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"84\"></td><td><pre>    pb <span class=\"token operator\">=</span> <span class=\"token function\">min</span><span class=\"token punctuation\">(</span>k <span class=\"token operator\">-</span> p<span class=\"token punctuation\">,</span> kc<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"85\"></td><td><pre>    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span>i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> m<span class=\"token punctuation\">;</span> i <span class=\"token operator\">+=</span> mc<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"86\"></td><td><pre>      ib <span class=\"token operator\">=</span> <span class=\"token function\">min</span><span class=\"token punctuation\">(</span>m <span class=\"token operator\">-</span> i<span class=\"token punctuation\">,</span> mc<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"87\"></td><td><pre>      <span class=\"token function\">InnerKernel_SSE</span><span class=\"token punctuation\">(</span>ib<span class=\"token punctuation\">,</span> n<span class=\"token punctuation\">,</span> pb<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span><span class=\"token function\">A</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">,</span> p<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> lda<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span><span class=\"token function\">B</span><span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> ldb<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span><span class=\"token function\">C</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> ldc<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"88\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"89\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"90\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"91\"></td><td><pre></pre></td></tr><tr><td data-num=\"92\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">GemmAccelerateSimd</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"93\"></td><td><pre>    <span class=\"token keyword\">int</span> M <span class=\"token operator\">=</span> <span class=\"token number\">16</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"94\"></td><td><pre>    <span class=\"token keyword\">int</span> K <span class=\"token operator\">=</span> <span class=\"token number\">64</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"95\"></td><td><pre>    <span class=\"token keyword\">int</span> N <span class=\"token operator\">=</span> <span class=\"token number\">16</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"96\"></td><td><pre>    <span class=\"token keyword\">float</span><span class=\"token operator\">*</span> MatriA <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token function\">malloc</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span><span class=\"token punctuation\">)</span><span class=\"token operator\">*</span> M<span class=\"token operator\">*</span>K<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"97\"></td><td><pre>    <span class=\"token keyword\">float</span><span class=\"token operator\">*</span> MatriB <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token function\">malloc</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span><span class=\"token punctuation\">)</span><span class=\"token operator\">*</span> K<span class=\"token operator\">*</span>N<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"98\"></td><td><pre>    <span class=\"token keyword\">float</span><span class=\"token operator\">*</span> MatriC <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token function\">malloc</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span><span class=\"token punctuation\">)</span><span class=\"token operator\">*</span> M<span class=\"token operator\">*</span>N<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"99\"></td><td><pre>    <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> index<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span> index<span class=\"token operator\">&lt;</span>M<span class=\"token operator\">*</span>K<span class=\"token punctuation\">;</span> index<span class=\"token operator\">&lt;</span>M<span class=\"token operator\">*</span>K<span class=\"token punctuation\">;</span> index<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"100\"></td><td><pre>        MatriA<span class=\"token punctuation\">[</span>index<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"101\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"102\"></td><td><pre>    <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> index<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span> index<span class=\"token operator\">&lt;</span>K<span class=\"token operator\">*</span>N<span class=\"token punctuation\">;</span> index<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"103\"></td><td><pre>        MatriB<span class=\"token punctuation\">[</span>index<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"104\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"105\"></td><td><pre>    <span class=\"token function\">MY_MMult_4x4_12_SSE</span><span class=\"token punctuation\">(</span>M<span class=\"token punctuation\">,</span>N<span class=\"token punctuation\">,</span>K<span class=\"token punctuation\">,</span>MatriA<span class=\"token punctuation\">,</span>K<span class=\"token punctuation\">,</span>MatriB<span class=\"token punctuation\">,</span>N<span class=\"token punctuation\">,</span>MatriC<span class=\"token punctuation\">,</span>N<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"106\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>#9. 进一步 pack</p>\n<p>将 A 和 B 两个矩阵都进行 pack。</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;emmintrin.h></span> <span class=\"token comment\">// SSE2</span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;smmintrin.h></span> <span class=\"token comment\">// SSE4.1, for _mm_dp_ps if needed</span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;stdio.h></span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token comment\">/* Block sizes */</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">mc</span> <span class=\"token expression\"><span class=\"token number\">256</span></span></span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">kc</span> <span class=\"token expression\"><span class=\"token number\">128</span></span></span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token comment\">/* Create macros so that the matrices are stored in row-major order */</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name function\">A</span><span class=\"token expression\"><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">,</span>j<span class=\"token punctuation\">)</span> a<span class=\"token punctuation\">[</span> <span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span><span class=\"token operator\">*</span>lda <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span>j<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">]</span></span></span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name function\">B</span><span class=\"token expression\"><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">,</span>j<span class=\"token punctuation\">)</span> b<span class=\"token punctuation\">[</span> <span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span><span class=\"token operator\">*</span>ldb <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span>j<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">]</span></span></span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name function\">C</span><span class=\"token expression\"><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">,</span>j<span class=\"token punctuation\">)</span> c<span class=\"token punctuation\">[</span> <span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span><span class=\"token operator\">*</span>ldc <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span>j<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">]</span></span></span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name function\">min</span><span class=\"token expression\"><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">,</span> j<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;</span> <span class=\"token punctuation\">(</span>j<span class=\"token punctuation\">)</span> <span class=\"token operator\">?</span> <span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span>j<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></span></span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token comment\">/* Routine for computing C = A * B + C */</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre></pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">PackMatrixB_SSE</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> k<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> <span class=\"token operator\">*</span>b<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> ldb<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> <span class=\"token operator\">*</span>b_to<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>  <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> j <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> j <span class=\"token operator\">&lt;</span> k<span class=\"token punctuation\">;</span> <span class=\"token operator\">++</span>j<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    <span class=\"token keyword\">float</span> <span class=\"token operator\">*</span>b_ij_pntr <span class=\"token operator\">=</span> <span class=\"token operator\">&amp;</span><span class=\"token function\">B</span><span class=\"token punctuation\">(</span>j<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    <span class=\"token operator\">*</span>b_to<span class=\"token operator\">++</span> <span class=\"token operator\">=</span> b_ij_pntr<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    <span class=\"token operator\">*</span>b_to<span class=\"token operator\">++</span> <span class=\"token operator\">=</span> b_ij_pntr<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    <span class=\"token operator\">*</span>b_to<span class=\"token operator\">++</span> <span class=\"token operator\">=</span> b_ij_pntr<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>    <span class=\"token operator\">*</span>b_to<span class=\"token operator\">++</span> <span class=\"token operator\">=</span> b_ij_pntr<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre></pre></td></tr><tr><td data-num=\"29\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">PackMatrixA_SSE</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> k<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> <span class=\"token operator\">*</span>a<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> lda<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> <span class=\"token operator\">*</span>a_to<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>  <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> k<span class=\"token punctuation\">;</span> <span class=\"token operator\">++</span>i<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>    <span class=\"token operator\">*</span>a_to<span class=\"token operator\">++</span> <span class=\"token operator\">=</span> <span class=\"token function\">A</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>    <span class=\"token operator\">*</span>a_to<span class=\"token operator\">++</span> <span class=\"token operator\">=</span> <span class=\"token function\">A</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>    <span class=\"token operator\">*</span>a_to<span class=\"token operator\">++</span> <span class=\"token operator\">=</span> <span class=\"token function\">A</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>    <span class=\"token operator\">*</span>a_to<span class=\"token operator\">++</span> <span class=\"token operator\">=</span> <span class=\"token function\">A</span><span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span> i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">AddDot4x4_SSE</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> k<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> <span class=\"token operator\">*</span>a<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> lda<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> <span class=\"token operator\">*</span>b<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> ldb<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> <span class=\"token operator\">*</span>c<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> ldc<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>  __m128 c_0p_sum <span class=\"token operator\">=</span> <span class=\"token function\">_mm_setzero_ps</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>  __m128 c_1p_sum <span class=\"token operator\">=</span> <span class=\"token function\">_mm_setzero_ps</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>  __m128 c_2p_sum <span class=\"token operator\">=</span> <span class=\"token function\">_mm_setzero_ps</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>  __m128 c_3p_sum <span class=\"token operator\">=</span> <span class=\"token function\">_mm_setzero_ps</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>  <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> p <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> p <span class=\"token operator\">&lt;</span> k<span class=\"token punctuation\">;</span> <span class=\"token operator\">++</span>p<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>    __m128 b_reg <span class=\"token operator\">=</span> <span class=\"token function\">_mm_loadu_ps</span><span class=\"token punctuation\">(</span>b<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// Load 4 floats from b</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>    b <span class=\"token operator\">+=</span> <span class=\"token number\">4</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>    __m128 a_reg <span class=\"token operator\">=</span> <span class=\"token function\">_mm_loadu_ps</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// Load 4 floats from a</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>    a <span class=\"token operator\">+=</span> <span class=\"token number\">4</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>    c_0p_sum <span class=\"token operator\">=</span> <span class=\"token function\">_mm_add_ps</span><span class=\"token punctuation\">(</span>c_0p_sum<span class=\"token punctuation\">,</span> <span class=\"token function\">_mm_mul_ps</span><span class=\"token punctuation\">(</span>b_reg<span class=\"token punctuation\">,</span> <span class=\"token function\">_mm_shuffle_ps</span><span class=\"token punctuation\">(</span>a_reg<span class=\"token punctuation\">,</span> a_reg<span class=\"token punctuation\">,</span> <span class=\"token function\">_MM_SHUFFLE</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>    c_1p_sum <span class=\"token operator\">=</span> <span class=\"token function\">_mm_add_ps</span><span class=\"token punctuation\">(</span>c_1p_sum<span class=\"token punctuation\">,</span> <span class=\"token function\">_mm_mul_ps</span><span class=\"token punctuation\">(</span>b_reg<span class=\"token punctuation\">,</span> <span class=\"token function\">_mm_shuffle_ps</span><span class=\"token punctuation\">(</span>a_reg<span class=\"token punctuation\">,</span> a_reg<span class=\"token punctuation\">,</span> <span class=\"token function\">_MM_SHUFFLE</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>    c_2p_sum <span class=\"token operator\">=</span> <span class=\"token function\">_mm_add_ps</span><span class=\"token punctuation\">(</span>c_2p_sum<span class=\"token punctuation\">,</span> <span class=\"token function\">_mm_mul_ps</span><span class=\"token punctuation\">(</span>b_reg<span class=\"token punctuation\">,</span> <span class=\"token function\">_mm_shuffle_ps</span><span class=\"token punctuation\">(</span>a_reg<span class=\"token punctuation\">,</span> a_reg<span class=\"token punctuation\">,</span> <span class=\"token function\">_MM_SHUFFLE</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>    c_3p_sum <span class=\"token operator\">=</span> <span class=\"token function\">_mm_add_ps</span><span class=\"token punctuation\">(</span>c_3p_sum<span class=\"token punctuation\">,</span> <span class=\"token function\">_mm_mul_ps</span><span class=\"token punctuation\">(</span>b_reg<span class=\"token punctuation\">,</span> <span class=\"token function\">_mm_shuffle_ps</span><span class=\"token punctuation\">(</span>a_reg<span class=\"token punctuation\">,</span> a_reg<span class=\"token punctuation\">,</span> <span class=\"token function\">_MM_SHUFFLE</span><span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>  <span class=\"token comment\">// Store results back into C matrix</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>  <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> row <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> row <span class=\"token operator\">&lt;</span> <span class=\"token number\">4</span><span class=\"token punctuation\">;</span> <span class=\"token operator\">++</span>row<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre>    <span class=\"token keyword\">float</span><span class=\"token operator\">*</span> c_pntr <span class=\"token operator\">=</span> <span class=\"token operator\">&amp;</span><span class=\"token function\">C</span><span class=\"token punctuation\">(</span>row<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre>    __m128 c_reg <span class=\"token operator\">=</span> <span class=\"token function\">_mm_loadu_ps</span><span class=\"token punctuation\">(</span>c_pntr<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre>    <span class=\"token keyword\">switch</span> <span class=\"token punctuation\">(</span>row<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre>      <span class=\"token keyword\">case</span> <span class=\"token number\">0</span><span class=\"token operator\">:</span> c_reg <span class=\"token operator\">=</span> <span class=\"token function\">_mm_add_ps</span><span class=\"token punctuation\">(</span>c_reg<span class=\"token punctuation\">,</span> c_0p_sum<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"62\"></td><td><pre>      <span class=\"token keyword\">case</span> <span class=\"token number\">1</span><span class=\"token operator\">:</span> c_reg <span class=\"token operator\">=</span> <span class=\"token function\">_mm_add_ps</span><span class=\"token punctuation\">(</span>c_reg<span class=\"token punctuation\">,</span> c_1p_sum<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"63\"></td><td><pre>      <span class=\"token keyword\">case</span> <span class=\"token number\">2</span><span class=\"token operator\">:</span> c_reg <span class=\"token operator\">=</span> <span class=\"token function\">_mm_add_ps</span><span class=\"token punctuation\">(</span>c_reg<span class=\"token punctuation\">,</span> c_2p_sum<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"64\"></td><td><pre>      <span class=\"token keyword\">case</span> <span class=\"token number\">3</span><span class=\"token operator\">:</span> c_reg <span class=\"token operator\">=</span> <span class=\"token function\">_mm_add_ps</span><span class=\"token punctuation\">(</span>c_reg<span class=\"token punctuation\">,</span> c_3p_sum<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"65\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"66\"></td><td><pre>    <span class=\"token function\">_mm_storeu_ps</span><span class=\"token punctuation\">(</span>c_pntr<span class=\"token punctuation\">,</span> c_reg<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"67\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"68\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"69\"></td><td><pre></pre></td></tr><tr><td data-num=\"70\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">InnerKernel_SSE</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> m<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> n<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> k<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> <span class=\"token operator\">*</span>a<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> lda<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> <span class=\"token operator\">*</span>b<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> ldb<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> <span class=\"token operator\">*</span>c<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> ldc<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"71\"></td><td><pre>  <span class=\"token keyword\">int</span> i<span class=\"token punctuation\">,</span> j<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"72\"></td><td><pre>  <span class=\"token keyword\">float</span> packedA<span class=\"token punctuation\">[</span>m <span class=\"token operator\">*</span> k<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"73\"></td><td><pre>  <span class=\"token keyword\">float</span> packedB<span class=\"token punctuation\">[</span>k <span class=\"token operator\">*</span> n<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"74\"></td><td><pre></pre></td></tr><tr><td data-num=\"75\"></td><td><pre>  <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span>j <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> j <span class=\"token operator\">&lt;</span> n<span class=\"token punctuation\">;</span> j <span class=\"token operator\">+=</span> <span class=\"token number\">4</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token comment\">/* Loop over the columns of C, unrolled by 4 */</span></pre></td></tr><tr><td data-num=\"76\"></td><td><pre>    <span class=\"token function\">PackMatrixB_SSE</span><span class=\"token punctuation\">(</span>k<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span><span class=\"token function\">B</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> j<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> ldb<span class=\"token punctuation\">,</span> packedB <span class=\"token operator\">+</span> j <span class=\"token operator\">*</span> k<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"77\"></td><td><pre>    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span>i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> m<span class=\"token punctuation\">;</span> i <span class=\"token operator\">+=</span> <span class=\"token number\">4</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token comment\">/* Loop over the rows of C */</span></pre></td></tr><tr><td data-num=\"78\"></td><td><pre>      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0</span> <span class=\"token operator\">==</span> <span class=\"token punctuation\">(</span>j <span class=\"token operator\">%</span> <span class=\"token number\">4</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"79\"></td><td><pre>        <span class=\"token function\">PackMatrixA_SSE</span><span class=\"token punctuation\">(</span>k<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span><span class=\"token function\">A</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> lda<span class=\"token punctuation\">,</span> packedA <span class=\"token operator\">+</span> i <span class=\"token operator\">*</span> k<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"80\"></td><td><pre>      <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"81\"></td><td><pre>      <span class=\"token function\">AddDot4x4_SSE</span><span class=\"token punctuation\">(</span>k<span class=\"token punctuation\">,</span> packedA <span class=\"token operator\">+</span> i <span class=\"token operator\">*</span> k<span class=\"token punctuation\">,</span> k<span class=\"token punctuation\">,</span> packedB <span class=\"token operator\">+</span> j <span class=\"token operator\">*</span> k<span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span><span class=\"token function\">C</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">,</span> j<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> ldc<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"82\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"83\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"84\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"85\"></td><td><pre></pre></td></tr><tr><td data-num=\"86\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">MY_MMult_4x4_13_SSE</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> m<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> n<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> k<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> <span class=\"token operator\">*</span>a<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> lda<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> <span class=\"token operator\">*</span>b<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> ldb<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> <span class=\"token operator\">*</span>c<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> ldc<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"87\"></td><td><pre>  <span class=\"token keyword\">int</span> i<span class=\"token punctuation\">,</span> p<span class=\"token punctuation\">,</span> pb<span class=\"token punctuation\">,</span> ib<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"88\"></td><td><pre>  <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span>p <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> p <span class=\"token operator\">&lt;</span> k<span class=\"token punctuation\">;</span> p <span class=\"token operator\">+=</span> kc<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"89\"></td><td><pre>    pb <span class=\"token operator\">=</span> <span class=\"token function\">min</span><span class=\"token punctuation\">(</span>k <span class=\"token operator\">-</span> p<span class=\"token punctuation\">,</span> kc<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"90\"></td><td><pre>    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span>i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> m<span class=\"token punctuation\">;</span> i <span class=\"token operator\">+=</span> mc<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"91\"></td><td><pre>      ib <span class=\"token operator\">=</span> <span class=\"token function\">min</span><span class=\"token punctuation\">(</span>m <span class=\"token operator\">-</span> i<span class=\"token punctuation\">,</span> mc<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"92\"></td><td><pre>      <span class=\"token function\">InnerKernel_SSE</span><span class=\"token punctuation\">(</span>ib<span class=\"token punctuation\">,</span> n<span class=\"token punctuation\">,</span> pb<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span><span class=\"token function\">A</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">,</span> p<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> lda<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span><span class=\"token function\">B</span><span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> ldb<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span><span class=\"token function\">C</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> ldc<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"93\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"94\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"95\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"96\"></td><td><pre></pre></td></tr><tr><td data-num=\"97\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">GemmAccelerateSimd</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"98\"></td><td><pre>    <span class=\"token keyword\">int</span> M <span class=\"token operator\">=</span> <span class=\"token number\">16</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"99\"></td><td><pre>    <span class=\"token keyword\">int</span> K <span class=\"token operator\">=</span> <span class=\"token number\">64</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"100\"></td><td><pre>    <span class=\"token keyword\">int</span> N <span class=\"token operator\">=</span> <span class=\"token number\">16</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"101\"></td><td><pre>    <span class=\"token keyword\">float</span><span class=\"token operator\">*</span> MatriA <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token function\">malloc</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span><span class=\"token punctuation\">)</span><span class=\"token operator\">*</span> M<span class=\"token operator\">*</span>K<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"102\"></td><td><pre>    <span class=\"token keyword\">float</span><span class=\"token operator\">*</span> MatriB <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token function\">malloc</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span><span class=\"token punctuation\">)</span><span class=\"token operator\">*</span> K<span class=\"token operator\">*</span>N<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"103\"></td><td><pre>    <span class=\"token keyword\">float</span><span class=\"token operator\">*</span> MatriC <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token function\">malloc</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span><span class=\"token punctuation\">)</span><span class=\"token operator\">*</span> M<span class=\"token operator\">*</span>N<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"104\"></td><td><pre>    <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> index<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span> index<span class=\"token operator\">&lt;</span>M<span class=\"token operator\">*</span>K<span class=\"token punctuation\">;</span> index<span class=\"token operator\">&lt;</span>M<span class=\"token operator\">*</span>K<span class=\"token punctuation\">;</span> index<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"105\"></td><td><pre>        MatriA<span class=\"token punctuation\">[</span>index<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"106\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"107\"></td><td><pre>    <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> index<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span> index<span class=\"token operator\">&lt;</span>K<span class=\"token operator\">*</span>N<span class=\"token punctuation\">;</span> index<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"108\"></td><td><pre>        MatriB<span class=\"token punctuation\">[</span>index<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"109\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"110\"></td><td><pre>    <span class=\"token function\">MY_MMult_4x4_13_SSE</span><span class=\"token punctuation\">(</span>M<span class=\"token punctuation\">,</span>N<span class=\"token punctuation\">,</span>K<span class=\"token punctuation\">,</span>MatriA<span class=\"token punctuation\">,</span>K<span class=\"token punctuation\">,</span>MatriB<span class=\"token punctuation\">,</span>N<span class=\"token punctuation\">,</span>MatriC<span class=\"token punctuation\">,</span>N<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"111\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h1 id=\"后记\"><a class=\"anchor\" href=\"#后记\">#</a> 后记</h1>\n<p>本博客目前以及可预期的将来都不会支持评论功能。各位大侠如若有指教和问题，可以在我的 <a href=\"https://github.com/ForCheetah/ForCheetah.github.io\">github 项目</a> 或随便一个项目下提出 issue，或者<a href=\"https://www.zhihu.com/people/guai-dao-ji-de-3-50\">知乎</a> 私信，并指明哪一篇博客，我看到一定及时回复，感激不尽！</p>\n",
            "tags": [
                "conv",
                "gemm"
            ]
        }
    ]
}