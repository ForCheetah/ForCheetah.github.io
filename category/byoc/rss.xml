<?xml version="1.0"?>
<rss version="2.0">
    <channel>
        <title>Пусть этот камень будет более крепким, чем человек • Posts by &#34;byoc&#34; category</title>
        <link>https://forcheetah.github.io</link>
        <description>有自己的博客很帅，但是我很懒，要命！！！</description>
        <language>en</language>
        <pubDate>Mon, 06 Oct 2025 16:19:48 +0800</pubDate>
        <lastBuildDate>Mon, 06 Oct 2025 16:19:48 +0800</lastBuildDate>
        <category>bar</category>
        <category>baz</category>
        <category>Linux</category>
        <category>openBlas</category>
        <category>lib</category>
        <category>accelerate</category>
        <category>conv</category>
        <category>tvm</category>
        <category>tengine</category>
        <category>ncnn</category>
        <category>cmake</category>
        <category>runtime</category>
        <category>tank</category>
        <category>zatan</category>
        <category>systemc</category>
        <category>novel</category>
        <category>compile</category>
        <category>AI</category>
        <category>gemm</category>
        <category>quantize</category>
        <category>compiler</category>
        <category>Article</category>
        <item>
            <guid isPermalink="true">https://forcheetah.github.io/2025/10/06/tvmByoc02/</guid>
            <title>【BYOC】TVM切分子图</title>
            <link>https://forcheetah.github.io/2025/10/06/tvmByoc02/</link>
            <category>compile</category>
            <category>AI</category>
            <pubDate>Mon, 06 Oct 2025 16:19:48 +0800</pubDate>
            <description><![CDATA[ &lt;h1 id=&#34;前言&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#前言&#34;&gt;#&lt;/a&gt; 前言&lt;/h1&gt;
&lt;p&gt;本篇通过举例说明 TVM 切分子图的方法。&lt;/p&gt;
&lt;p&gt;TVM 切分子图，是将整个图中的部分算子拆分出来，包装为一个函数。TVM 把它称为复合函数。切分子图有很多用处，比如算子融合、跨平台优化、做 layergroup 等。TVM 为子图切分提供了好用的工具，本篇文章将结 &lt;a href=&#34;https://forcheetah.github.io/2025/05/11/tvmByoc01/&#34;&gt;《【BYOC】TVM 添加自定义编译器 ccompiler》&lt;/a&gt;，来介绍一下如何使用 TVM 的工具切分子图，令自定义编译器 ccompiler 支持的子图在 ccompiler 执行，不支持的子图在 CPU 运行的。&lt;/p&gt;
&lt;p&gt;参考链接：&lt;a href=&#34;https://forcheetah.github.io/2025/05/11/tvmByoc01/&#34;&gt;《【BYOC】TVM 添加自定义编译器 ccompiler》&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;作为初学者，错误在所难免，还望不吝赐教。&lt;/p&gt;
&lt;h1 id=&#34;tvm工具&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#tvm工具&#34;&gt;#&lt;/a&gt; TVM 工具&lt;/h1&gt;
&lt;p&gt;TVM 需要一个注释器，为需要切分的图结构的起止地点标记出来，之后 TVM 就可以帮助将子图切分出来。&lt;br&gt;
例如 TVM 支持 这个 DNNL 的外部编译器，那么可以使用  &lt;code&gt;mod = transform.AnnotateTarget([&amp;quot;dnnl&amp;quot;])(ref_mod)&lt;/code&gt;  这个注释器来标记 DNNL 支持的子图结构（TVM 已经提供了 DNNL 的注释器），然后使用  &lt;code&gt;mod = transform.PartitionGraph()(mod)&lt;/code&gt;  将子图切分出来。&lt;/p&gt;
&lt;p&gt;我们以 “将 ccompiler 支持的子图切分出来” 这个目标为例，介绍这个过程。&lt;br&gt;
ccompiler 只支持   &lt;code&gt;+ - *&lt;/code&gt;  三个算子，目标是将所有 ccompiler 支持的算子切分成子图，交给 ccompiler 编译和计算，其他算子交给 CPU 计算。&lt;br&gt;
如下图所示：&lt;br&gt;
这个图中出现了一个  &lt;code&gt;/&lt;/code&gt;  算子，需要将该算子留下来，其余算子切成子图，交给 ccompiler 进行编译和计算。&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; data-src=&#34;1759738691631.jpg&#34; alt=&#34;含有除法的图结构&#34;&gt;&lt;/p&gt;
&lt;p&gt;原图结构如下：&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;fn &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;%x: Tensor&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;10&lt;/span&gt;, &lt;span class=&#34;token number&#34;&gt;10&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;, float32&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;, %w0: Tensor&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;10&lt;/span&gt;, &lt;span class=&#34;token number&#34;&gt;10&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;, float32&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;, %w1: Tensor&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;10&lt;/span&gt;, &lt;span class=&#34;token number&#34;&gt;10&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;, flot32&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;, %w2: Tensor&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;10&lt;/span&gt;, &lt;span class=&#34;token number&#34;&gt;10&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;, float32&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;, %w3: Tensor&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;10&lt;/span&gt;, &lt;span class=&#34;token number&#34;&gt;10&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;, float32&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;, %w4: Tensor&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;10&lt;/span&gt;, &lt;span class=&#34;token number&#34;&gt;10&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;, float32&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  %0 &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; add&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;%x, %w1&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  %1 &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; multiply&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;%x, %w0&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  %2 &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; subtract&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;%0, %w2&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  %3 &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; divide&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;%1, %2&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  %4 &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; add&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;%3, %w3&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  divide&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;%4, %w4&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;接下来需要将 ccompiler 支持的子图结构标记出来，标记原理如图所示：&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; data-src=&#34;1759738769337.jpg&#34; alt=&#34;标记子图的起始和终止节点&#34;&gt;&lt;/p&gt;
&lt;p&gt;图示比较清楚：将连续的、支持的算子，用 &lt;code&gt;begin&lt;/code&gt;  和  &lt;code&gt;end&lt;/code&gt;  隔离出来，形成一个子图。注释器的参考写法、调用例子，可以参考 TVM 官方代码。&lt;/p&gt;
&lt;p&gt;添加注释之后的图结构：&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;def @main&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;%x: Tensor&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;10&lt;/span&gt;, &lt;span class=&#34;token number&#34;&gt;10&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;, float32&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;, %w0: Tensor&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;10&lt;/span&gt;, &lt;span class=&#34;token number&#34;&gt;10&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;, float32&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;, %w1: Tensor&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;10&lt;/span&gt;, &lt;span class=&#34;token number&#34;&gt;10&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;, flot32&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;, %w2: Tensor&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;10&lt;/span&gt;, &lt;span class=&#34;token number&#34;&gt;10&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;, float32&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;, %w3: Tensor&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;10&lt;/span&gt;, &lt;span class=&#34;token number&#34;&gt;10&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;, float32&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;, %w4: Tensor&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;10&lt;/span&gt;, &lt;span class=&#34;token number&#34;&gt;10&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;, float32&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  %0 &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; annotation.compiler_begin&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;%x, meta&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;relay.attrs.CompilerAttrs&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  %1 &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; annotation.compiler_begin&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;%w0, meta&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;relay.attrs.CompilerAttrs&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  %2 &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; multiply&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;%0, %1&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  %3 &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; annotation.compiler_begin&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;%x, meta&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;relay.attrs.CompilerAttrs&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  %4 &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; annotation.compiler_begin&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;%w1, meta&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;relay.attrs.CompilerAttrs&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;4&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  %5 &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; add&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;%3, %4&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  %6 &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; annotation.compiler_begin&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;%w2, meta&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;relay.attrs.CompilerAttrs&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;5&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  %7 &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; subtract&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;%5, %6&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  %8 &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; annotation.compiler_end&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;%2, meta&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;relay.attrs.CompilerAttrs&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  %9 &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; annotation.compiler_end&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;%7, meta&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;relay.attrs.CompilerAttrs&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;6&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  %10 &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; divide&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;%8, %9&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  %11 &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; annotation.compiler_begin&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;%10, meta&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;relay.attrs.CompilerAttrs&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;7&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  %12 &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; annotation.compiler_begin&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;%w3, meta&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;relay.attrs.CompilerAttrs&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;8&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;15&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  %13 &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; add&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;%11, %12&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;16&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  %14 &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; annotation.compiler_end&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;%13, meta&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;relay.attrs.CompilerAttrs&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;9&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;17&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  divide&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;%14, %w4&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;18&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;添加注释之后，直接调用 TVM 的切分工具： &lt;code&gt;mod = transform.PartitionGraph()(mod)&lt;/code&gt; ，实现子图切分。&lt;/p&gt;
&lt;p&gt;切分之后的结构：&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;def @main&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;%x: Tensor&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;10&lt;/span&gt;, &lt;span class=&#34;token number&#34;&gt;10&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;, float32&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; /* &lt;span class=&#34;token assign-left variable&#34;&gt;ty&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;Tensor&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;10&lt;/span&gt;, &lt;span class=&#34;token number&#34;&gt;10&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;, float32&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; */, %w0: Tensor&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;10&lt;/span&gt;, &lt;span class=&#34;token number&#34;&gt;10&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;, float32&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; /* &lt;span class=&#34;token assign-left variable&#34;&gt;ty&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;Tensor&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;10&lt;/span&gt;, &lt;span class=&#34;token number&#34;&gt;10&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;, float32&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; */, %w1: Tensor&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;10&lt;/span&gt;, &lt;span class=&#34;token number&#34;&gt;10&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;, float32&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; /* &lt;span class=&#34;token assign-left variable&#34;&gt;ty&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;Tensor&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;10&lt;/span&gt;, &lt;span class=&#34;token number&#34;&gt;10&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;, float32&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; */, %w2: Tensor&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;10&lt;/span&gt;, &lt;span class=&#34;token number&#34;&gt;10&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;, float32&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; /* &lt;span class=&#34;token assign-left variable&#34;&gt;ty&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;Tensor&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;10&lt;/span&gt;, &lt;span class=&#34;token number&#34;&gt;10&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;, float32&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; */, %w3: Tensor&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;10&lt;/span&gt;, &lt;span class=&#34;token number&#34;&gt;10&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;, float32&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; /* &lt;span class=&#34;token assign-left variable&#34;&gt;ty&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;Tensor&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;10&lt;/span&gt;, &lt;span class=&#34;token number&#34;&gt;10&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;, float32&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; */, %w4: Tensor&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;10&lt;/span&gt;, &lt;span class=&#34;token number&#34;&gt;10&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;, float32&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; /* &lt;span class=&#34;token assign-left variable&#34;&gt;ty&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;Tensor&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;10&lt;/span&gt;, &lt;span class=&#34;token number&#34;&gt;10&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;, float32&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; */&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; -&lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt; Tensor&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;10&lt;/span&gt;, &lt;span class=&#34;token number&#34;&gt;10&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;, float32&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  %0 &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; @tvmgen_default_ccompiler_main_0&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;%x, %w0&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; /* &lt;span class=&#34;token assign-left variable&#34;&gt;ty&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;Tensor&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;10&lt;/span&gt;, &lt;span class=&#34;token number&#34;&gt;10&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;, float32&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; */&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  %1 &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; @tvmgen_default_ccompiler_main_2&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;%x, %w1, %w2&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; /* &lt;span class=&#34;token assign-left variable&#34;&gt;ty&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;Tensor&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;10&lt;/span&gt;, &lt;span class=&#34;token number&#34;&gt;10&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;, float32&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; */&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  %2 &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; divide&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;%0, %1&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; /* &lt;span class=&#34;token assign-left variable&#34;&gt;ty&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;Tensor&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;10&lt;/span&gt;, &lt;span class=&#34;token number&#34;&gt;10&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;, float32&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; */&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  %3 &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; @tvmgen_default_ccompiler_main_5&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;%2, %w3&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; /* &lt;span class=&#34;token assign-left variable&#34;&gt;ty&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;Tensor&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;10&lt;/span&gt;, &lt;span class=&#34;token number&#34;&gt;10&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;, float32&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; */&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  divide&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;%3, %w4&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; /* &lt;span class=&#34;token assign-left variable&#34;&gt;ty&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;Tensor&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;10&lt;/span&gt;, &lt;span class=&#34;token number&#34;&gt;10&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;, float32&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; */&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;def @tvmgen_default_ccompiler_main_0&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;%ccompiler_0_i0: Tensor&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;10&lt;/span&gt;, &lt;span class=&#34;token number&#34;&gt;10&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;, float32&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; /* &lt;span class=&#34;token assign-left variable&#34;&gt;ty&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;Tensor&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;10&lt;/span&gt;, &lt;span class=&#34;token number&#34;&gt;10&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;, float32&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; */, %ccompiler_0_i1: Tensor&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;10&lt;/span&gt;, &lt;span class=&#34;token number&#34;&gt;10&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;, float32&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; /* &lt;span class=&#34;token assign-left variable&#34;&gt;ty&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;Tensor&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;10&lt;/span&gt;, &lt;span class=&#34;token number&#34;&gt;10&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;, float32&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; */, &lt;span class=&#34;token assign-left variable&#34;&gt;Compiler&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;ccompiler&#34;&lt;/span&gt;, &lt;span class=&#34;token assign-left variable&#34;&gt;Primitive&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;token assign-left variable&#34;&gt;Inline&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;token assign-left variable&#34;&gt;global_symbol&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;tvmgen_default_ccompiler_main_0&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; -&lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt; Tensor&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;10&lt;/span&gt;, &lt;span class=&#34;token number&#34;&gt;10&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;, float32&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  multiply&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;%ccompiler_0_i0, %ccompiler_0_i1&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; /* &lt;span class=&#34;token assign-left variable&#34;&gt;ty&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;Tensor&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;10&lt;/span&gt;, &lt;span class=&#34;token number&#34;&gt;10&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;, float32&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; */&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;def @tvmgen_default_ccompiler_main_2&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;%ccompiler_2_i0: Tensor&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;10&lt;/span&gt;, &lt;span class=&#34;token number&#34;&gt;10&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;, float32&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; /* &lt;span class=&#34;token assign-left variable&#34;&gt;ty&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;Tensor&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;10&lt;/span&gt;, &lt;span class=&#34;token number&#34;&gt;10&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;, float32&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; */, %ccompiler_2_i1: Tensor&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;10&lt;/span&gt;, &lt;span class=&#34;token number&#34;&gt;10&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;, float32&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; /* &lt;span class=&#34;token assign-left variable&#34;&gt;ty&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;Tensor&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;10&lt;/span&gt;, &lt;span class=&#34;token number&#34;&gt;10&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;, float32&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; */, %ccompiler_2_i2: Tensor&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;10&lt;/span&gt;, &lt;span class=&#34;token number&#34;&gt;10&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;, float32&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; /* &lt;span class=&#34;token assign-left variable&#34;&gt;ty&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;Tensor&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;10&lt;/span&gt;, &lt;span class=&#34;token number&#34;&gt;10&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;, float32&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; */, &lt;span class=&#34;token assign-left variable&#34;&gt;Compiler&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;ccompiler&#34;&lt;/span&gt;, &lt;span class=&#34;token assign-left variable&#34;&gt;Primitive&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;token assign-left variable&#34;&gt;Inline&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;token assign-left variable&#34;&gt;global_symbol&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;tvmgen_default_ccompiler_main_2&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; -&lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt; Tensor&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;10&lt;/span&gt;, &lt;span class=&#34;token number&#34;&gt;10&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;, float32&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  %4 &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; add&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;%ccompiler_2_i0, %ccompiler_2_i1&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; /* &lt;span class=&#34;token assign-left variable&#34;&gt;ty&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;Tensor&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;10&lt;/span&gt;, &lt;span class=&#34;token number&#34;&gt;10&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;, float32&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; */&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;15&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  subtract&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;%4, %ccompiler_2_i2&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; /* &lt;span class=&#34;token assign-left variable&#34;&gt;ty&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;Tensor&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;10&lt;/span&gt;, &lt;span class=&#34;token number&#34;&gt;10&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;, float32&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; */&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;16&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;17&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;18&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;def @tvmgen_default_ccompiler_main_5&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;%ccompiler_5_i0: Tensor&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;10&lt;/span&gt;, &lt;span class=&#34;token number&#34;&gt;10&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;, float32&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; /* &lt;span class=&#34;token assign-left variable&#34;&gt;ty&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;Tensor&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;10&lt;/span&gt;, &lt;span class=&#34;token number&#34;&gt;10&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;, float32&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; */, %ccompiler_5_i1: Tensor&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;10&lt;/span&gt;, &lt;span class=&#34;token number&#34;&gt;10&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;, float32&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; /* &lt;span class=&#34;token assign-left variable&#34;&gt;ty&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;Tensor&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;10&lt;/span&gt;, &lt;span class=&#34;token number&#34;&gt;10&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;, float32&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; */, &lt;span class=&#34;token assign-left variable&#34;&gt;Compiler&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;ccompiler&#34;&lt;/span&gt;, &lt;span class=&#34;token assign-left variable&#34;&gt;Primitive&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;token assign-left variable&#34;&gt;Inline&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;token assign-left variable&#34;&gt;global_symbol&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;tvmgen_default_ccompiler_main_5&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; -&lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt; Tensor&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;10&lt;/span&gt;, &lt;span class=&#34;token number&#34;&gt;10&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;, float32&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;19&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  add&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;%ccompiler_5_i0, float32&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;20&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  add&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;%ccompiler_5_i0, %ccompiler_5_i1&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; /* &lt;span class=&#34;token assign-left variable&#34;&gt;ty&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;Tensor&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;10&lt;/span&gt;, &lt;span class=&#34;token number&#34;&gt;10&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;, float32&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; */&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;21&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;可以看到三个子图 &lt;code&gt;@tvmgen_default_ccompiler_main_0&lt;/code&gt; ， &lt;code&gt;@tvmgen_default_ccompiler_main_2&lt;/code&gt; ， &lt;code&gt;@tvmgen_default_ccompiler_main_5&lt;/code&gt;  用单独的函数进行包装，在主函数中进行调用。&lt;/p&gt;
&lt;p&gt;可以通过 TVM 官方例子来学习如何写这个注释器。&lt;/p&gt;
&lt;h1 id=&#34;后记&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#后记&#34;&gt;#&lt;/a&gt; 后记&lt;/h1&gt;
&lt;p&gt;本博客目前以及可预期的将来都不会支持评论功能。各位大侠如若有指教和问题，可以在我的 &lt;a href=&#34;https://github.com/ForCheetah/ForCheetah.github.io&#34;&gt;github 项目&lt;/a&gt; 或随便一个项目下提出 issue，并指明哪一篇博客，我看到一定及时回复！&lt;/p&gt;
 ]]></description>
        </item>
    </channel>
</rss>
